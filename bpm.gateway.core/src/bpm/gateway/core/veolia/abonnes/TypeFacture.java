//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.28 at 01:19:07 PM CET 
//


package bpm.gateway.core.veolia.abonnes;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;

import bpm.gateway.core.veolia.VEHelper;


/**
 * <p>Java class for typeFacture complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeFacture">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="facture_ve_id" type="{}StringRestricted255Type"/>
 *         &lt;element name="facture_contratabt_id" type="{}StringRestricted255Type"/>
 *         &lt;element name="facture_factureassociee_id" type="{}StringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="facture_type" type="{}typesFacturesListe"/>
 *         &lt;element name="facture_date" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="facture_volumeaep" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_volumeac" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_montantht" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_montantttc" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_soldeanterieur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_etatpaiement" type="{}etatsPaimentFactureListe"/>
 *         &lt;element name="facture_echeancier" type="{}ouiNonListe"/>
 *         &lt;element name="facture_commentaire" type="{}StringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="facture_dateexigibilitepaiement" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="facture_datepaiement" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="facture_montantpaiement" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="facture_restantdu" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="facture_modepaiement" type="{}modesPaiementListe"/>
 *         &lt;element name="facture_modeencaissement" type="{}modesEncaissementListe"/>
 *         &lt;element name="facture_pj1" type="{}StringRestricted255Type"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = AbonnesDAO.TYPE_FACTURE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeFacture", propOrder = {
    "factureVeId",
    "factureContratabtId",
    "factureFactureassocieeId",
    "factureType",
    "factureDate",
    "factureVolumeaep",
    "factureVolumeac",
    "factureMontantht",
    "factureMontantttc",
    "factureSoldeanterieur",
    "factureEtatpaiement",
    "factureEcheancier",
    "factureCommentaire",
    "factureDateexigibilitepaiement",
    "factureDatepaiement",
    "factureMontantpaiement",
    "factureRestantdu",
    "factureModepaiement",
    "factureModeencaissement",
    "facturePj1"
})
@XmlRootElement(name = AbonnesDAO.ROOT_FACTURE)
public class TypeFacture {

	@Id
	@Column(name = "facture_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "facture_ve_id", required = true)
    protected String factureVeId;
	@Transient
    @XmlElement(name = "facture_contratabt_id", required = true)
    protected String factureContratabtId;
	@Transient
    @XmlElement(name = "facture_factureassociee_id")
    protected String factureFactureassocieeId;
	@Transient
    @XmlElement(name = "facture_type", required = true)
    protected TypesFacturesListe factureType;
	@Transient
    @XmlElement(name = "facture_date", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar factureDate;
	@Transient
    @XmlElement(name = "facture_volumeaep", required = true)
    protected BigDecimal factureVolumeaep;
	@Transient
    @XmlElement(name = "facture_volumeac", required = true)
    protected BigDecimal factureVolumeac;
	@Transient
    @XmlElement(name = "facture_montantht", required = true)
    protected BigDecimal factureMontantht;
	@Transient
    @XmlElement(name = "facture_montantttc", required = true)
    protected BigDecimal factureMontantttc;
	@Transient
    @XmlElement(name = "facture_soldeanterieur", required = true)
    protected BigDecimal factureSoldeanterieur;
	@Transient
    @XmlElement(name = "facture_etatpaiement", required = true)
    protected EtatsPaimentFactureListe factureEtatpaiement;
	@Transient
    @XmlElement(name = "facture_echeancier", required = true)
    protected OuiNonListe factureEcheancier;
	@Column(name = "facture_commentaire")
    @XmlElement(name = "facture_commentaire")
    protected String factureCommentaire;
	@Transient
    @XmlElement(name = "facture_dateexigibilitepaiement", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar factureDateexigibilitepaiement;
	@Transient
    @XmlElement(name = "facture_datepaiement")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar factureDatepaiement;
	@Column(name = "facture_montantpaiement")
    @XmlElement(name = "facture_montantpaiement")
    protected BigDecimal factureMontantpaiement;
	@Transient
    @XmlElement(name = "facture_restantdu", required = true)
    protected BigDecimal factureRestantdu;
	@Transient
    @XmlElement(name = "facture_modepaiement", required = true)
    protected ModesPaiementListe factureModepaiement;
	@Transient
    @XmlElement(name = "facture_modeencaissement", required = true)
    protected ModesEncaissementListe factureModeencaissement;
	@Transient
    @XmlElement(name = "facture_pj1", required = true)
    protected String facturePj1;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the factureVeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_ve_id")
    public String getFactureVeId() {
    	if (factureVeId == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_ve_id - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureVeId;
    }

    /**
     * Sets the value of the factureVeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFactureVeId(String value) {
        this.factureVeId = value != null ? value : "";
    }

    /**
     * Gets the value of the factureContratabtId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_contratabt_id")
    public String getFactureContratabtId() {
    	if (factureContratabtId == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_contratabt_id - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureContratabtId;
    }

    /**
     * Sets the value of the factureContratabtId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFactureContratabtId(String value) {
        this.factureContratabtId = value != null ? value : "";
    }

    /**
     * Gets the value of the factureFactureassocieeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_factureassociee_id")
    public String getFactureFactureassocieeId() {
        return factureFactureassocieeId != null && factureFactureassocieeId.isEmpty() ? null : factureFactureassocieeId;
    }

    /**
     * Sets the value of the factureFactureassocieeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFactureFactureassocieeId(String value) {
        this.factureFactureassocieeId = value;
    }

    /**
     * Gets the value of the factureType property.
     * 
     * @return
     *     possible object is
     *     {@link TypesFacturesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_type")
    public String getFactureType() {
        return TypesFacturesListe.getValue(AbonnesDAO.TYPE_FACTURE, "facture_type", factureType);
    }

    /**
     * Sets the value of the factureType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesFacturesListe }
     *     
     */
    public void setFactureType(String value) {
        this.factureType = TypesFacturesListe.fromValue(AbonnesDAO.TYPE_FACTURE, "facture_type", value);
    }

    /**
     * Gets the value of the factureDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_date")
    public Date getFactureDate() {
    	if (factureDate == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_date - Valeur 'Null' ou non permise par le XSD.");
    	}
        return VEHelper.toDate(factureDate);
    }

    /**
     * Sets the value of the factureDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setFactureDate(XMLGregorianCalendar value) {
        this.factureDate = value;
    }

	/**
	 * Sets the value of the factureDate property from hibernate.
	 * 
	 * @param value
	 *            allowed object is {@link XMLGregorianCalendar }
	 * 
	 */
	public void setFactureDate(Date value) {
		this.factureDate = VEHelper.fromDate(value);
	}

    /**
     * Gets the value of the factureVolumeaep property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_volumeaep")
    public BigDecimal getFactureVolumeaep() {
    	if (factureVolumeaep == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_volumeaep - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureVolumeaep;
    }

    /**
     * Sets the value of the factureVolumeaep property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureVolumeaep(BigDecimal value) {
        this.factureVolumeaep = value;
    }

    /**
     * Gets the value of the factureVolumeac property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_volumeac")
    public BigDecimal getFactureVolumeac() {
    	if (factureVolumeac == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_volumeac - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureVolumeac;
    }

    /**
     * Sets the value of the factureVolumeac property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureVolumeac(BigDecimal value) {
        this.factureVolumeac = value;
    }

    /**
     * Gets the value of the factureMontantht property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_montantht")
    public BigDecimal getFactureMontantht() {
    	if (factureMontantht == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_montantht - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureMontantht;
    }

    /**
     * Sets the value of the factureMontantht property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureMontantht(BigDecimal value) {
        this.factureMontantht = value;
    }

    /**
     * Gets the value of the factureMontantttc property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_montantttc")
    public BigDecimal getFactureMontantttc() {
    	if (factureMontantttc == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_montantttc - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureMontantttc;
    }

    /**
     * Sets the value of the factureMontantttc property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureMontantttc(BigDecimal value) {
        this.factureMontantttc = value;
    }

    /**
     * Gets the value of the factureSoldeanterieur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_soldeanterieur")
    public BigDecimal getFactureSoldeanterieur() {
    	if (factureSoldeanterieur == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_soldeanterieur - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureSoldeanterieur;
    }

    /**
     * Sets the value of the factureSoldeanterieur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureSoldeanterieur(BigDecimal value) {
        this.factureSoldeanterieur = value;
    }

    /**
     * Gets the value of the factureEtatpaiement property.
     * 
     * @return
     *     possible object is
     *     {@link EtatsPaimentFactureListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_etatpaiement")
    public String getFactureEtatpaiement() {
        return EtatsPaimentFactureListe.getValue(AbonnesDAO.TYPE_FACTURE, "facture_etatpaiement", factureEtatpaiement);
    }

    /**
     * Sets the value of the factureEtatpaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link EtatsPaimentFactureListe }
     *     
     */
    public void setFactureEtatpaiement(String value) {
        this.factureEtatpaiement = EtatsPaimentFactureListe.fromValue(AbonnesDAO.TYPE_FACTURE, "facture_etatpaiement", value);
    }

    /**
     * Gets the value of the factureEcheancier property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_echeancier")
    public String getFactureEcheancier() {
        return OuiNonListe.getValue(AbonnesDAO.TYPE_FACTURE, "facture_echeancier", factureEcheancier, true);
    }

    /**
     * Sets the value of the factureEcheancier property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setFactureEcheancier(String value) {
        this.factureEcheancier = OuiNonListe.fromValue(AbonnesDAO.TYPE_FACTURE, "facture_echeancier", value, true);
    }

    /**
     * Gets the value of the factureCommentaire property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFactureCommentaire() {
        return factureCommentaire;
    }

    /**
     * Sets the value of the factureCommentaire property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFactureCommentaire(String value) {
        this.factureCommentaire = value;
    }

    /**
     * Gets the value of the factureDateexigibilitepaiement property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_dateexigibilitepaiement")
    public Date getFactureDateexigibilitepaiement() {
    	if (factureDateexigibilitepaiement == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_dateexigibilitepaiement - Valeur 'Null' ou non permise par le XSD.");
    	}
        return VEHelper.toDate(factureDateexigibilitepaiement);
    }

    /**
     * Sets the value of the factureDateexigibilitepaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setFactureDateexigibilitepaiement(XMLGregorianCalendar value) {
        this.factureDateexigibilitepaiement = value;
    }

	/**
	 * Sets the value of the factureDateexigibilitepaiement property from hibernate.
	 * 
	 * @param value
	 *            allowed object is {@link XMLGregorianCalendar }
	 * 
	 */
	public void setFactureDateexigibilitepaiement(Date value) {
		this.factureDateexigibilitepaiement = VEHelper.fromDate(value);
	}

    /**
     * Gets the value of the factureDatepaiement property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_datepaiement")
    public Date getFactureDatepaiement() {
        return VEHelper.toDate(factureDatepaiement);
    }

    /**
     * Sets the value of the factureDatepaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setFactureDatepaiement(XMLGregorianCalendar value) {
        this.factureDatepaiement = value;
    }

	/**
	 * Sets the value of the factureDatepaiement property from hibernate.
	 * 
	 * @param value
	 *            allowed object is {@link XMLGregorianCalendar }
	 * 
	 */
	public void setFactureDatepaiement(Date value) {
		this.factureDatepaiement = VEHelper.fromDate(value);
	}

    /**
     * Gets the value of the factureMontantpaiement property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getFactureMontantpaiement() {
        return factureMontantpaiement;
    }

    /**
     * Sets the value of the factureMontantpaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureMontantpaiement(BigDecimal value) {
        this.factureMontantpaiement = value;
    }

    /**
     * Gets the value of the factureRestantdu property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_restantdu")
    public BigDecimal getFactureRestantdu() {
    	if (factureRestantdu == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_restantdu - Valeur 'Null' ou non permise par le XSD.");
    	}
        return factureRestantdu;
    }

    /**
     * Sets the value of the factureRestantdu property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setFactureRestantdu(BigDecimal value) {
        this.factureRestantdu = value;
    }

    /**
     * Gets the value of the factureModepaiement property.
     * 
     * @return
     *     possible object is
     *     {@link ModesPaiementListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_modepaiement")
    public String getFactureModepaiement() {
        return ModesPaiementListe.getValue(AbonnesDAO.TYPE_FACTURE, "facture_modepaiement", factureModepaiement);
    }

    /**
     * Sets the value of the factureModepaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link ModesPaiementListe }
     *     
     */
    public void setFactureModepaiement(String value) {
        this.factureModepaiement = ModesPaiementListe.fromValue(AbonnesDAO.TYPE_FACTURE, "facture_modepaiement", value);
    }

    /**
     * Gets the value of the factureModeencaissement property.
     * 
     * @return
     *     possible object is
     *     {@link ModesEncaissementListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_modeencaissement")
    public String getFactureModeencaissement() {
        return ModesEncaissementListe.getValue(AbonnesDAO.TYPE_FACTURE, "facture_modeencaissement", factureModeencaissement);
    }

    /**
     * Sets the value of the factureModeencaissement property.
     * 
     * @param value
     *     allowed object is
     *     {@link ModesEncaissementListe }
     *     
     */
    public void setFactureModeencaissement(String value) {
        this.factureModeencaissement = ModesEncaissementListe.fromValue(AbonnesDAO.TYPE_FACTURE, "facture_modeencaissement", value);
    }

    /**
     * Gets the value of the facturePj1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "facture_pj1")
    public String getFacturePj1() {
    	if (facturePj1 == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_FACTURE + " - Champs facture_pj1 - Valeur 'Null' ou non permise par le XSD.");
    	}
        return facturePj1;
    }

    /**
     * Sets the value of the facturePj1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFacturePj1(String value) {
        this.facturePj1 = value != null ? value : "";
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

}
