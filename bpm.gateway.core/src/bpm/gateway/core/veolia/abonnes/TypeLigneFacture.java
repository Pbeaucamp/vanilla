//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.11.28 at 01:19:07 PM CET 
//


package bpm.gateway.core.veolia.abonnes;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;

import bpm.gateway.core.veolia.VEHelper;


/**
 * <p>Java class for typeLigneFacture complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeLigneFacture">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="lignefacture_ve_id" type="{}StringRestricted255Type"/>
 *         &lt;element name="lignefacture_facture_id" type="{}StringRestricted255Type"/>
 *         &lt;element name="lignefacture_libellerubrique" type="{}rubriquesLigneFactureListe"/>
 *         &lt;element name="lignefacture_libellesousrubrique" type="{}StringRestricted255Type"/>
 *         &lt;element name="lignefacture_datedebut" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="lignefacture_datefin" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="lignefacture_quantite" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="lignefacture_prixunitaire" type="{}decimalCinqChiffres"/>
 *         &lt;element name="lignefacture_montantrubriqueht" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="lignefacture_montantrubriquettc" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="lignefacture_tauxtva" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="lignefacture_notranche" type="{}StringRestricted255Type"/>
 *         &lt;element name="lignefacture_principefacturation" type="{}principesFacturationListe"/>
 *         &lt;element name="lignefacture_montantpaye" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="lignefacture_resteapayer" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="lignefacture_etatpaiement" type="{}etatsPaiementListe" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = AbonnesDAO.TYPE_LIGNEFACTURE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeLigneFacture", propOrder = {
    "lignefactureVeId",
    "lignefactureFactureId",
    "lignefactureLibellerubrique",
    "lignefactureLibellesousrubrique",
    "lignefactureDatedebut",
    "lignefactureDatefin",
    "lignefactureQuantite",
    "lignefacturePrixunitaire",
    "lignefactureMontantrubriqueht",
    "lignefactureMontantrubriquettc",
    "lignefactureTauxtva",
    "lignefactureNotranche",
    "lignefacturePrincipefacturation",
    "lignefactureMontantpaye",
    "lignefactureResteapayer",
    "lignefactureEtatpaiement"
})
@XmlRootElement(name = AbonnesDAO.ROOT_LIGNEFACTURE)
public class TypeLigneFacture {

	@Id
	@Column(name = "lignefacture_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "lignefacture_ve_id", required = true)
    protected String lignefactureVeId;
	@Transient
    @XmlElement(name = "lignefacture_facture_id", required = true)
    protected String lignefactureFactureId;
	@Transient
    @XmlElement(name = "lignefacture_libellerubrique", required = true)
    protected RubriquesLigneFactureListe lignefactureLibellerubrique;
	@Transient
    @XmlElement(name = "lignefacture_libellesousrubrique", required = true)
    protected String lignefactureLibellesousrubrique;
	@Transient
    @XmlElement(name = "lignefacture_datedebut", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar lignefactureDatedebut;
	@Transient
    @XmlElement(name = "lignefacture_datefin", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar lignefactureDatefin;
	@Transient
    @XmlElement(name = "lignefacture_quantite", required = true)
    protected BigDecimal lignefactureQuantite;
	@Transient
    @XmlElement(name = "lignefacture_prixunitaire", required = true)
    protected BigDecimal lignefacturePrixunitaire;
	@Transient
    @XmlElement(name = "lignefacture_montantrubriqueht", required = true)
    protected BigDecimal lignefactureMontantrubriqueht;
	@Transient
    @XmlElement(name = "lignefacture_montantrubriquettc", required = true)
    protected BigDecimal lignefactureMontantrubriquettc;
	@Transient
    @XmlElement(name = "lignefacture_tauxtva", required = true)
    protected BigDecimal lignefactureTauxtva;
	@Transient
    @XmlElement(name = "lignefacture_notranche", required = true)
    protected String lignefactureNotranche;
	@Transient
    @XmlElement(name = "lignefacture_principefacturation", required = true)
    protected PrincipesFacturationListe lignefacturePrincipefacturation;
	@Column(name = "lignefacture_montantpaye")
    @XmlElement(name = "lignefacture_montantpaye")
    protected BigDecimal lignefactureMontantpaye;
	@Column(name = "lignefacture_resteapayer")
    @XmlElement(name = "lignefacture_resteapayer")
    protected BigDecimal lignefactureResteapayer;
	@Transient
    @XmlElement(name = "lignefacture_etatpaiement")
    protected EtatsPaiementListe lignefactureEtatpaiement;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the lignefactureVeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_ve_id")
    public String getLignefactureVeId() {
    	if (lignefactureVeId == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_ve_id - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureVeId;
    }

    /**
     * Sets the value of the lignefactureVeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLignefactureVeId(String value) {
        this.lignefactureVeId = value != null ? value : "";
    }

    /**
     * Gets the value of the lignefactureFactureId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_facture_id")
    public String getLignefactureFactureId() {
    	if (lignefactureFactureId == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_facture_id - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureFactureId;
    }

    /**
     * Sets the value of the lignefactureFactureId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLignefactureFactureId(String value) {
        this.lignefactureFactureId = value != null ? value : "";
    }

    /**
     * Gets the value of the lignefactureLibellerubrique property.
     * 
     * @return
     *     possible object is
     *     {@link RubriquesLigneFactureListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_libellerubrique")
    public String getLignefactureLibellerubrique() {
        return RubriquesLigneFactureListe.getValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_libellerubrique", lignefactureLibellerubrique);
    }

    /**
     * Sets the value of the lignefactureLibellerubrique property.
     * 
     * @param value
     *     allowed object is
     *     {@link RubriquesLigneFactureListe }
     *     
     */
    public void setLignefactureLibellerubrique(String value) {
        this.lignefactureLibellerubrique = RubriquesLigneFactureListe.fromValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_libellerubrique", value);
    }

    /**
     * Gets the value of the lignefactureLibellesousrubrique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_libellesousrubrique")
    public String getLignefactureLibellesousrubrique() {
    	if (lignefactureLibellesousrubrique == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_libellesousrubrique - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureLibellesousrubrique;
    }

    /**
     * Sets the value of the lignefactureLibellesousrubrique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLignefactureLibellesousrubrique(String value) {
        this.lignefactureLibellesousrubrique = value != null ? value : "";
    }

    /**
     * Gets the value of the lignefactureDatedebut property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_datedebut")
    public Date getLignefactureDatedebut() {
    	if (lignefactureDatedebut == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_datedebut - Valeur 'Null' ou non permise par le XSD.");
    	}
        return VEHelper.toDate(lignefactureDatedebut);
    }

    /**
     * Sets the value of the lignefactureDatedebut property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLignefactureDatedebut(XMLGregorianCalendar value) {
        this.lignefactureDatedebut = value;
    }

	/**
	 * Sets the value of the lignefactureDatedebut property from hibernate.
	 * 
	 * @param value
	 *            allowed object is {@link XMLGregorianCalendar }
	 * 
	 */
	public void setLignefactureDatedebut(Date value) {
		this.lignefactureDatedebut = VEHelper.fromDate(value);
	}

    /**
     * Gets the value of the lignefactureDatefin property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_datefin")
    public Date getLignefactureDatefin() {
    	if (lignefactureDatefin == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_datefin - Valeur 'Null' ou non permise par le XSD.");
    	}
        return VEHelper.toDate(lignefactureDatefin);
    }

    /**
     * Sets the value of the lignefactureDatefin property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLignefactureDatefin(XMLGregorianCalendar value) {
        this.lignefactureDatefin = value;
    }

	/**
	 * Sets the value of the lignefactureDatefin property from hibernate.
	 * 
	 * @param value
	 *            allowed object is {@link XMLGregorianCalendar }
	 * 
	 */
	public void setLignefactureDatefin(Date value) {
		this.lignefactureDatefin = VEHelper.fromDate(value);
	}

    /**
     * Gets the value of the lignefactureQuantite property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_quantite")
    public BigDecimal getLignefactureQuantite() {
    	if (lignefactureQuantite == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_quantite - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureQuantite;
    }

    /**
     * Sets the value of the lignefactureQuantite property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureQuantite(BigDecimal value) {
        this.lignefactureQuantite = value;
    }

    /**
     * Gets the value of the lignefacturePrixunitaire property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_prixunitaire")
    public BigDecimal getLignefacturePrixunitaire() {
    	if (lignefacturePrixunitaire == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_prixunitaire - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefacturePrixunitaire;
    }

    /**
     * Sets the value of the lignefacturePrixunitaire property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefacturePrixunitaire(BigDecimal value) {
        this.lignefacturePrixunitaire = value;
    }

    /**
     * Gets the value of the lignefactureMontantrubriqueht property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_montantrubriqueht")
    public BigDecimal getLignefactureMontantrubriqueht() {
    	if (lignefactureMontantrubriqueht == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_montantrubriqueht - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureMontantrubriqueht;
    }

    /**
     * Sets the value of the lignefactureMontantrubriqueht property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureMontantrubriqueht(BigDecimal value) {
        this.lignefactureMontantrubriqueht = value;
    }

    /**
     * Gets the value of the lignefactureMontantrubriquettc property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_montantrubriquettc")
    public BigDecimal getLignefactureMontantrubriquettc() {
    	if (lignefactureMontantrubriquettc == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_montantrubriquettc - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureMontantrubriquettc;
    }

    /**
     * Sets the value of the lignefactureMontantrubriquettc property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureMontantrubriquettc(BigDecimal value) {
        this.lignefactureMontantrubriquettc = value;
    }

    /**
     * Gets the value of the lignefactureTauxtva property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_tauxtva")
    public BigDecimal getLignefactureTauxtva() {
    	if (lignefactureTauxtva == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_tauxtva - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureTauxtva;
    }

    /**
     * Sets the value of the lignefactureTauxtva property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureTauxtva(BigDecimal value) {
        this.lignefactureTauxtva = value;
    }

    /**
     * Gets the value of the lignefactureNotranche property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_notranche")
    public String getLignefactureNotranche() {
    	if (lignefactureNotranche == null) {
    		throw new IllegalArgumentException("Table " + AbonnesDAO.TYPE_RELEVE + " - Champs lignefacture_notranche - Valeur 'Null' ou non permise par le XSD.");
    	}
        return lignefactureNotranche;
    }

    /**
     * Sets the value of the lignefactureNotranche property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLignefactureNotranche(String value) {
        this.lignefactureNotranche = value != null ? value : "";
    }

    /**
     * Gets the value of the lignefacturePrincipefacturation property.
     * 
     * @return
     *     possible object is
     *     {@link PrincipesFacturationListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_principefacturation")
    public String getLignefacturePrincipefacturation() {
        return PrincipesFacturationListe.getValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_principefacturation", lignefacturePrincipefacturation);
    }

    /**
     * Sets the value of the lignefacturePrincipefacturation property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrincipesFacturationListe }
     *     
     */
    public void setLignefacturePrincipefacturation(String value) {
        this.lignefacturePrincipefacturation = PrincipesFacturationListe.fromValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_principefacturation", value);
    }

    /**
     * Gets the value of the lignefactureMontantpaye property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getLignefactureMontantpaye() {
        return lignefactureMontantpaye;
    }

    /**
     * Sets the value of the lignefactureMontantpaye property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureMontantpaye(BigDecimal value) {
        this.lignefactureMontantpaye = value;
    }

    /**
     * Gets the value of the lignefactureResteapayer property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getLignefactureResteapayer() {
        return lignefactureResteapayer;
    }

    /**
     * Sets the value of the lignefactureResteapayer property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setLignefactureResteapayer(BigDecimal value) {
        this.lignefactureResteapayer = value;
    }

    /**
     * Gets the value of the lignefactureEtatpaiement property.
     * 
     * @return
     *     possible object is
     *     {@link EtatsPaiementListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "lignefacture_etatpaiement")
    public String getLignefactureEtatpaiement() {
        return EtatsPaiementListe.getValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_etatpaiement", lignefactureEtatpaiement, false);
    }

    /**
     * Sets the value of the lignefactureEtatpaiement property.
     * 
     * @param value
     *     allowed object is
     *     {@link EtatsPaiementListe }
     *     
     */
    public void setLignefactureEtatpaiement(String value) {
        this.lignefactureEtatpaiement = EtatsPaiementListe.fromValue(AbonnesDAO.TYPE_LIGNEFACTURE, "lignefacture_etatpaiement", value, false);
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

}
