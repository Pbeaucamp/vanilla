//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementConvoyeurTransporteur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementConvoyeurTransporteur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptconvtransp_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptconvtransp_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptconvtransp_longueur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptconvtransp_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptconvtransp_tensionnominale" type="{}tensionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptconvtransp_typeconvoyeur" type="{}typesConvoyeursListe"/>
 *         &lt;element name="eqptconvtransp_vitesserotation" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptconvtransp_diametrevis" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptconvtransp_largeurbande" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptconvtransp_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementConvoyeurTransporteur", propOrder = {
    "eqptconvtranspEqptsocleId",
    "eqptconvtranspDescriptif",
    "eqptconvtranspLongueur",
    "eqptconvtranspPuissance",
    "eqptconvtranspTensionnominale",
    "eqptconvtranspTypeconvoyeur",
    "eqptconvtranspVitesserotation",
    "eqptconvtranspDiametrevis",
    "eqptconvtranspLargeurbande",
    "eqptconvtranspPjmaintenance"
})
public class TypeEquipementConvoyeurTransporteur {

	@Id
	@Column(name = "eqptconvtransp_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptconvtransp_eqptsocle_id", required = true)
    protected String eqptconvtranspEqptsocleId;
	@Transient
    @XmlElement(name = "eqptconvtransp_descriptif", required = true, defaultValue = "NR")
    protected String eqptconvtranspDescriptif;
	@Transient
    @XmlElement(name = "eqptconvtransp_longueur", required = true)
    protected BigDecimal eqptconvtranspLongueur;
	@Transient
    @XmlElement(name = "eqptconvtransp_puissance", required = true)
    protected BigDecimal eqptconvtranspPuissance;
	@Transient
    @XmlElement(name = "eqptconvtransp_tensionnominale")
    protected TensionsNominalesListe eqptconvtranspTensionnominale;
	@Transient
    @XmlElement(name = "eqptconvtransp_typeconvoyeur", required = true)
    protected TypesConvoyeursListe eqptconvtranspTypeconvoyeur;
	@Transient
    @XmlElement(name = "eqptconvtransp_vitesserotation", required = true)
    protected BigDecimal eqptconvtranspVitesserotation;
	@Transient
    @XmlElement(name = "eqptconvtransp_diametrevis", required = true)
    protected BigDecimal eqptconvtranspDiametrevis;
	@Column(name = "eqptconvtransp_largeurbande")
    @XmlElement(name = "eqptconvtransp_largeurbande")
    protected BigDecimal eqptconvtranspLargeurbande;
	@Column(name = "eqptconvtransp_pjmaintenance")
    @XmlElement(name = "eqptconvtransp_pjmaintenance")
    protected String eqptconvtranspPjmaintenance;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptconvtranspEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_eqptsocle_id")
    public String getEqptconvtranspEqptsocleId() {
    	if (eqptconvtranspEqptsocleId == null) {
    		manageNullException("eqptconvtransp_eqptsocle_id");
    	}
        return eqptconvtranspEqptsocleId;
    }

    /**
     * Sets the value of the eqptconvtranspEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptconvtranspEqptsocleId(String value) {
        this.eqptconvtranspEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptconvtranspDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_descriptif")
    public String getEqptconvtranspDescriptif() {
    	if (eqptconvtranspDescriptif == null) {
    		manageNullException("eqptconvtransp_descriptif");
    	}
        return eqptconvtranspDescriptif;
    }

    /**
     * Sets the value of the eqptconvtranspDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptconvtranspDescriptif(String value) {
        this.eqptconvtranspDescriptif = value;
    }

    /**
     * Gets the value of the eqptconvtranspLongueur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_longueur")
    public BigDecimal getEqptconvtranspLongueur() {
    	if (eqptconvtranspLongueur == null) {
    		manageNullException("eqptconvtransp_longueur");
    	}
        return eqptconvtranspLongueur;
    }

    /**
     * Sets the value of the eqptconvtranspLongueur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptconvtranspLongueur(BigDecimal value) {
        this.eqptconvtranspLongueur = value;
    }

    /**
     * Gets the value of the eqptconvtranspPuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_puissance")
    public BigDecimal getEqptconvtranspPuissance() {
    	if (eqptconvtranspPuissance == null) {
    		manageNullException("eqptconvtransp_puissance");
    	}
        return eqptconvtranspPuissance;
    }

    /**
     * Sets the value of the eqptconvtranspPuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptconvtranspPuissance(BigDecimal value) {
        this.eqptconvtranspPuissance = value;
    }

    /**
     * Gets the value of the eqptconvtranspTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_tensionnominale")
    public String getEqptconvtranspTensionnominale() {
    	return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR, "eqptconvtransp_tensionnominale", eqptconvtranspTensionnominale, false);
    }

    /**
     * Sets the value of the eqptconvtranspTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptconvtranspTensionnominale(String value) {
    	this.eqptconvtranspTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR, "eqptconvtransp_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptconvtranspTypeconvoyeur property.
     * 
     * @return
     *     possible object is
     *     {@link TypesConvoyeursListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_typeconvoyeur")
    public String getEqptconvtranspTypeconvoyeur() {
        return TypesConvoyeursListe.getValue(PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR, "eqptconvtransp_typeconvoyeur", eqptconvtranspTypeconvoyeur);
    }

    /**
     * Sets the value of the eqptconvtranspTypeconvoyeur property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesConvoyeursListe }
     *     
     */
    public void setEqptconvtranspTypeconvoyeur(String value) {
        this.eqptconvtranspTypeconvoyeur = TypesConvoyeursListe.fromValue(PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR, "eqptconvtransp_typeconvoyeur", value);
    }

    /**
     * Gets the value of the eqptconvtranspVitesserotation property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_vitesserotation")
    public BigDecimal getEqptconvtranspVitesserotation() {
    	if (eqptconvtranspVitesserotation == null) {
    		manageNullException("eqptconvtransp_vitesserotation");
    	}
        return eqptconvtranspVitesserotation;
    }

    /**
     * Sets the value of the eqptconvtranspVitesserotation property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptconvtranspVitesserotation(BigDecimal value) {
        this.eqptconvtranspVitesserotation = value;
    }

    /**
     * Gets the value of the eqptconvtranspDiametrevis property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptconvtransp_diametrevis")
    public BigDecimal getEqptconvtranspDiametrevis() {
    	if (eqptconvtranspDiametrevis == null) {
    		manageNullException("eqptconvtransp_diametrevis");
    	}
        return eqptconvtranspDiametrevis;
    }

    /**
     * Sets the value of the eqptconvtranspDiametrevis property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptconvtranspDiametrevis(BigDecimal value) {
        this.eqptconvtranspDiametrevis = value;
    }

    /**
     * Gets the value of the eqptconvtranspLargeurbande property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptconvtranspLargeurbande() {
        return eqptconvtranspLargeurbande;
    }

    /**
     * Sets the value of the eqptconvtranspLargeurbande property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptconvtranspLargeurbande(BigDecimal value) {
        this.eqptconvtranspLargeurbande = value;
    }

    /**
     * Gets the value of the eqptconvtranspPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptconvtranspPjmaintenance() {
        return eqptconvtranspPjmaintenance;
    }

    /**
     * Sets the value of the eqptconvtranspPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptconvtranspPjmaintenance(String value) {
        this.eqptconvtranspPjmaintenance = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_CONVOYEURTRANSPORTEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
