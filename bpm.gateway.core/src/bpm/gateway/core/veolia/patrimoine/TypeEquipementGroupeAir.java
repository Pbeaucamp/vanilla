//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementGroupeAir complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementGroupeAir">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptgroupeair_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptgroupeair_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptgroupeair_associecuve" type="{}ouiNonListe"/>
 *         &lt;element name="eqptgroupeair_autonome" type="{}ouiNonListe"/>
 *         &lt;element name="eqptgroupeair_debitnominal" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptgroupeair_fluidecomprime" type="{}fluidesComprimesListe"/>
 *         &lt;element name="eqptgroupeair_hmt" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptgroupeair_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqptgroupeair_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptgroupeair_tensionnominale" type="{}tensionsNominalesListe"/>
 *         &lt;element name="eqptgroupeair_typelubrification" type="{}typesLubrificationsListe"/>
 *         &lt;element name="eqptgroupeair_typetechnologie" type="{}typesTechnologiesListe"/>
 *         &lt;element name="eqptgroupeair_vitesserotation" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptgroupeair_poidseqpt" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptgroupeair_fonction" type="{}fonctionsListe"/>
 *         &lt;element name="eqptgroupeair_typegroupe" type="{}typesGroupesAirListe"/>
 *         &lt;element name="eqptgroupeair_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptgroupeair_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_GROUPEAIR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementGroupeAir", propOrder = {
    "eqptgroupeairEqptsocleId",
    "eqptgroupeairDescriptif",
    "eqptgroupeairAssociecuve",
    "eqptgroupeairAutonome",
    "eqptgroupeairDebitnominal",
    "eqptgroupeairFluidecomprime",
    "eqptgroupeairHmt",
    "eqptgroupeairPressionnominale",
    "eqptgroupeairPuissance",
    "eqptgroupeairTensionnominale",
    "eqptgroupeairTypelubrification",
    "eqptgroupeairTypetechnologie",
    "eqptgroupeairVitesserotation",
    "eqptgroupeairPoidseqpt",
    "eqptgroupeairFonction",
    "eqptgroupeairTypegroupe",
    "eqptgroupeairPjmaintenance",
    "eqptgroupeairPjfichetechnique"
})
public class TypeEquipementGroupeAir {

	@Id
	@Column(name = "eqptgroupeair_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptgroupeair_eqptsocle_id", required = true)
    protected String eqptgroupeairEqptsocleId;
	@Transient
    @XmlElement(name = "eqptgroupeair_descriptif", required = true, defaultValue = "NR")
    protected String eqptgroupeairDescriptif;
	@Transient
    @XmlElement(name = "eqptgroupeair_associecuve", required = true)
    protected OuiNonListe eqptgroupeairAssociecuve;
	@Transient
    @XmlElement(name = "eqptgroupeair_autonome", required = true)
    protected OuiNonListe eqptgroupeairAutonome;
	@Transient
    @XmlElement(name = "eqptgroupeair_debitnominal")
    protected BigDecimal eqptgroupeairDebitnominal;
	@Transient
    @XmlElement(name = "eqptgroupeair_fluidecomprime", required = true)
    protected FluidesComprimesListe eqptgroupeairFluidecomprime;
	@Transient
    @XmlElement(name = "eqptgroupeair_hmt")
    protected Integer eqptgroupeairHmt;
	@Transient
    @XmlElement(name = "eqptgroupeair_pressionnominale", required = true)
    protected PressionsNominalesListe eqptgroupeairPressionnominale;
	@Transient
    @XmlElement(name = "eqptgroupeair_puissance", required = true)
    protected BigDecimal eqptgroupeairPuissance;
	@Transient
    @XmlElement(name = "eqptgroupeair_tensionnominale", required = true)
    protected TensionsNominalesListe eqptgroupeairTensionnominale;
	@Transient
    @XmlElement(name = "eqptgroupeair_typelubrification", required = true)
    protected TypesLubrificationsListe eqptgroupeairTypelubrification;
	@Transient
    @XmlElement(name = "eqptgroupeair_typetechnologie", required = true)
    protected TypesTechnologiesListe eqptgroupeairTypetechnologie;
	@Transient
    @XmlElement(name = "eqptgroupeair_vitesserotation")
    protected Integer eqptgroupeairVitesserotation;
	@Transient
    @XmlElement(name = "eqptgroupeair_poidseqpt", required = true)
    protected BigDecimal eqptgroupeairPoidseqpt;
	@Transient
    @XmlElement(name = "eqptgroupeair_fonction", required = true)
    protected FonctionsListe eqptgroupeairFonction;
	@Transient
    @XmlElement(name = "eqptgroupeair_typegroupe", required = true)
    protected TypesGroupesAirListe eqptgroupeairTypegroupe;
	@Column(name = "eqptgroupeair_pjmaintenance")
    @XmlElement(name = "eqptgroupeair_pjmaintenance")
    protected String eqptgroupeairPjmaintenance;
	@Column(name = "eqptgroupeair_pjfichetechnique")
    @XmlElement(name = "eqptgroupeair_pjfichetechnique")
    protected String eqptgroupeairPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptgroupeairEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_eqptsocle_id")
    public String getEqptgroupeairEqptsocleId() {
    	if (eqptgroupeairEqptsocleId == null) {
    		manageNullException("eqptgroupeair_eqptsocle_id");
    	}
        return eqptgroupeairEqptsocleId;
    }

    /**
     * Sets the value of the eqptgroupeairEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptgroupeairEqptsocleId(String value) {
        this.eqptgroupeairEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptgroupeairDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_descriptif")
    public String getEqptgroupeairDescriptif() {
    	if (eqptgroupeairDescriptif == null) {
    		manageNullException("eqptgroupeair_descriptif");
    	}
        return eqptgroupeairDescriptif;
    }

    /**
     * Sets the value of the eqptgroupeairDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptgroupeairDescriptif(String value) {
        this.eqptgroupeairDescriptif = value;
    }

    /**
     * Gets the value of the eqptgroupeairAssociecuve property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_associecuve")
    public String getEqptgroupeairAssociecuve() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_associecuve", eqptgroupeairAssociecuve, true);
    }

    /**
     * Sets the value of the eqptgroupeairAssociecuve property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptgroupeairAssociecuve(String value) {
        this.eqptgroupeairAssociecuve = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_associecuve", value);
    }

    /**
     * Gets the value of the eqptgroupeairAutonome property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_autonome")
    public String getEqptgroupeairAutonome() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_autonome", eqptgroupeairAutonome, true);
    }

    /**
     * Sets the value of the eqptgroupeairAutonome property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptgroupeairAutonome(String value) {
        this.eqptgroupeairAutonome = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_autonome", value);
    }

    /**
     * Gets the value of the eqptgroupeairDebitnominal property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_debitnominal")
    public BigDecimal getEqptgroupeairDebitnominal() {
    	if (eqptgroupeairDebitnominal == null) {
    		manageNullException("eqptgroupeair_debitnominal");
    	}
        return eqptgroupeairDebitnominal;
    }

    /**
     * Sets the value of the eqptgroupeairDebitnominal property.
     * 
     */
    public void setEqptgroupeairDebitnominal(BigDecimal value) {
        this.eqptgroupeairDebitnominal = value;
    }

    /**
     * Gets the value of the eqptgroupeairFluidecomprime property.
     * 
     * @return
     *     possible object is
     *     {@link FluidesComprimesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_fluidecomprime")
    public String getEqptgroupeairFluidecomprime() {
        return FluidesComprimesListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_fluidecomprime", eqptgroupeairFluidecomprime);
    }

    /**
     * Sets the value of the eqptgroupeairFluidecomprime property.
     * 
     * @param value
     *     allowed object is
     *     {@link FluidesComprimesListe }
     *     
     */
    public void setEqptgroupeairFluidecomprime(String value) {
        this.eqptgroupeairFluidecomprime = FluidesComprimesListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_fluidecomprime", value);
    }

    /**
     * Gets the value of the eqptgroupeairHmt property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_hmt")
    public int getEqptgroupeairHmt() {
    	if (eqptgroupeairHmt == null) {
    		manageNullException("eqptgroupeair_hmt");
    	}
        return eqptgroupeairHmt;
    }

    /**
     * Sets the value of the eqptgroupeairHmt property.
     * 
     */
    public void setEqptgroupeairHmt(int value) {
        this.eqptgroupeairHmt = value;
    }

    /**
     * Gets the value of the eqptgroupeairPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_pressionnominale")
    public String getEqptgroupeairPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_pressionnominale", eqptgroupeairPressionnominale, true);
    }

    /**
     * Sets the value of the eqptgroupeairPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptgroupeairPressionnominale(String value) {
        this.eqptgroupeairPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptgroupeairPuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_puissance")
    public BigDecimal getEqptgroupeairPuissance() {
    	if (eqptgroupeairPuissance == null) {
    		manageNullException("eqptgroupeair_puissance");
    	}
        return eqptgroupeairPuissance;
    }

    /**
     * Sets the value of the eqptgroupeairPuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptgroupeairPuissance(BigDecimal value) {
        this.eqptgroupeairPuissance = value;
    }

    /**
     * Gets the value of the eqptgroupeairTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_tensionnominale")
    public String getEqptgroupeairTensionnominale() {
        return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_tensionnominale", eqptgroupeairTensionnominale, true);
    }

    /**
     * Sets the value of the eqptgroupeairTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptgroupeairTensionnominale(String value) {
        this.eqptgroupeairTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptgroupeairTypelubrification property.
     * 
     * @return
     *     possible object is
     *     {@link TypesLubrificationsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_typelubrification")
    public String getEqptgroupeairTypelubrification() {
        return TypesLubrificationsListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typelubrification", eqptgroupeairTypelubrification);
    }

    /**
     * Sets the value of the eqptgroupeairTypelubrification property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesLubrificationsListe }
     *     
     */
    public void setEqptgroupeairTypelubrification(String value) {
        this.eqptgroupeairTypelubrification = TypesLubrificationsListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typelubrification", value);
    }

    /**
     * Gets the value of the eqptgroupeairTypetechnologie property.
     * 
     * @return
     *     possible object is
     *     {@link TypesTechnologiesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_typetechnologie")
    public String getEqptgroupeairTypetechnologie() {
        return TypesTechnologiesListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typetechnologie", eqptgroupeairTypetechnologie);
    }

    /**
     * Sets the value of the eqptgroupeairTypetechnologie property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesTechnologiesListe }
     *     
     */
    public void setEqptgroupeairTypetechnologie(String value) {
        this.eqptgroupeairTypetechnologie = TypesTechnologiesListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typetechnologie", value);
    }

    /**
     * Gets the value of the eqptgroupeairVitesserotation property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_vitesserotation")
    public int getEqptgroupeairVitesserotation() {
    	if (eqptgroupeairVitesserotation == null) {
    		manageNullException("eqptgroupeair_vitesserotation");
    	}
        return eqptgroupeairVitesserotation;
    }

    /**
     * Sets the value of the eqptgroupeairVitesserotation property.
     * 
     */
    public void setEqptgroupeairVitesserotation(int value) {
        this.eqptgroupeairVitesserotation = value;
    }

    /**
     * Gets the value of the eqptgroupeairPoidseqpt property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_poidseqpt")
    public BigDecimal getEqptgroupeairPoidseqpt() {
    	if (eqptgroupeairPoidseqpt == null) {
    		manageNullException("eqptgroupeair_poidseqpt");
    	}
        return eqptgroupeairPoidseqpt;
    }

    /**
     * Sets the value of the eqptgroupeairPoidseqpt property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptgroupeairPoidseqpt(BigDecimal value) {
        this.eqptgroupeairPoidseqpt = value;
    }

    /**
     * Gets the value of the eqptgroupeairFonction property.
     * 
     * @return
     *     possible object is
     *     {@link FonctionsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_fonction")
    public String getEqptgroupeairFonction() {
        return FonctionsListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_fonction", eqptgroupeairFonction);
    }

    /**
     * Sets the value of the eqptgroupeairFonction property.
     * 
     * @param value
     *     allowed object is
     *     {@link FonctionsListe }
     *     
     */
    public void setEqptgroupeairFonction(String value) {
        this.eqptgroupeairFonction = FonctionsListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_fonction", value);
    }

    /**
     * Gets the value of the eqptgroupeairTypegroupe property.
     * 
     * @return
     *     possible object is
     *     {@link TypesGroupesAirListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptgroupeair_typegroupe")
    public String getEqptgroupeairTypegroupe() {
        return TypesGroupesAirListe.getValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typegroupe", eqptgroupeairTypegroupe);
    }

    /**
     * Sets the value of the eqptgroupeairTypegroupe property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesGroupesAirListe }
     *     
     */
    public void setEqptgroupeairTypegroupe(String value) {
        this.eqptgroupeairTypegroupe = TypesGroupesAirListe.fromValue(PatrimoineDAO.PAT_EQPT_GROUPEAIR, "eqptgroupeair_typegroupe", value);
    }

    /**
     * Gets the value of the eqptgroupeairPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptgroupeairPjmaintenance() {
        return eqptgroupeairPjmaintenance;
    }

    /**
     * Sets the value of the eqptgroupeairPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptgroupeairPjmaintenance(String value) {
        this.eqptgroupeairPjmaintenance = value;
    }

    /**
     * Gets the value of the eqptgroupeairPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptgroupeairPjfichetechnique() {
        return eqptgroupeairPjfichetechnique;
    }

    /**
     * Sets the value of the eqptgroupeairPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptgroupeairPjfichetechnique(String value) {
        this.eqptgroupeairPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_GROUPEAIR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
