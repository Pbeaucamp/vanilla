//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementChlorometre complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementChlorometre">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptchlorometre_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptchlorometre_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptchlorometre_tensionnominale" type="{}tensionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptchlorometre_capacitedosage" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptchlorometre_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqptchlorometre_plagedebit" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptchlorometre_classeappareil" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptchlorometre_pressionconddistri" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptchlorometre_reducpression" type="{}ouiNonListe"/>
 *         &lt;element name="eqptchlorometre_plagereducpression" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptchlorometre_reguldebit" type="{}ouiNonListe"/>
 *         &lt;element name="eqptchlorometre_clapetamontappareil" type="{}ouiNonListe"/>
 *         &lt;element name="eqptchlorometre_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptchlorometre_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_CHLOROMETRE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementChlorometre", propOrder = {
    "eqptchlorometreEqptsocleId",
    "eqptchlorometreDescriptif",
    "eqptchlorometreTensionnominale",
    "eqptchlorometreCapacitedosage",
    "eqptchlorometrePressionnominale",
    "eqptchlorometrePlagedebit",
    "eqptchlorometreClasseappareil",
    "eqptchlorometrePressionconddistri",
    "eqptchlorometreReducpression",
    "eqptchlorometrePlagereducpression",
    "eqptchlorometreReguldebit",
    "eqptchlorometreClapetamontappareil",
    "eqptchlorometrePjmaintenance",
    "eqptchlorometrePjfichetechnique"
})
public class TypeEquipementChlorometre {

	@Id
	@Column(name = "eqptchlorometre_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptchlorometre_eqptsocle_id", required = true)
    protected String eqptchlorometreEqptsocleId;
	@Transient
    @XmlElement(name = "eqptchlorometre_descriptif", required = true, defaultValue = "NR")
    protected String eqptchlorometreDescriptif;
	@Transient
    @XmlElement(name = "eqptchlorometre_tensionnominale")
    protected TensionsNominalesListe eqptchlorometreTensionnominale;
	@Column(name = "eqptchlorometre_capacitedosage")
    @XmlElement(name = "eqptchlorometre_capacitedosage")
    protected BigDecimal eqptchlorometreCapacitedosage;
	@Transient
    @XmlElement(name = "eqptchlorometre_pressionnominale", required = true)
    protected PressionsNominalesListe eqptchlorometrePressionnominale;
	@Transient
    @XmlElement(name = "eqptchlorometre_plagedebit", required = true, defaultValue = "NR")
    protected String eqptchlorometrePlagedebit;
	@Transient
    @XmlElement(name = "eqptchlorometre_classeappareil", required = true, defaultValue = "NR")
    protected String eqptchlorometreClasseappareil;
	@Transient
    @XmlElement(name = "eqptchlorometre_pressionconddistri")
    protected Integer eqptchlorometrePressionconddistri;
	@Transient
    @XmlElement(name = "eqptchlorometre_reducpression", required = true)
    protected OuiNonListe eqptchlorometreReducpression;
	@Transient
    @XmlElement(name = "eqptchlorometre_plagereducpression", required = true, defaultValue = "NR")
    protected String eqptchlorometrePlagereducpression;
	@Transient
    @XmlElement(name = "eqptchlorometre_reguldebit", required = true)
    protected OuiNonListe eqptchlorometreReguldebit;
	@Transient
    @XmlElement(name = "eqptchlorometre_clapetamontappareil", required = true)
    protected OuiNonListe eqptchlorometreClapetamontappareil;
	@Column(name = "eqptchlorometre_pjmaintenance")
    @XmlElement(name = "eqptchlorometre_pjmaintenance")
    protected String eqptchlorometrePjmaintenance;
	@Column(name = "eqptchlorometre_pjfichetechnique")
    @XmlElement(name = "eqptchlorometre_pjfichetechnique")
    protected String eqptchlorometrePjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptchlorometreEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_eqptsocle_id")
    public String getEqptchlorometreEqptsocleId() {
    	if (eqptchlorometreEqptsocleId == null) {
    		manageNullException("eqptchlorometre_eqptsocle_id");
    	}
        return eqptchlorometreEqptsocleId;
    }

    /**
     * Sets the value of the eqptchlorometreEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometreEqptsocleId(String value) {
        this.eqptchlorometreEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptchlorometreDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_descriptif")
    public String getEqptchlorometreDescriptif() {
    	if (eqptchlorometreDescriptif == null) {
    		manageNullException("eqptchlorometre_descriptif");
    	}
        return eqptchlorometreDescriptif;
    }

    /**
     * Sets the value of the eqptchlorometreDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometreDescriptif(String value) {
        this.eqptchlorometreDescriptif = value;
    }

    /**
     * Gets the value of the eqptchlorometreTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_tensionnominale")
    public String getEqptchlorometreTensionnominale() {
    	return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_tensionnominale", eqptchlorometreTensionnominale, false);
    }

    /**
     * Sets the value of the eqptchlorometreTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometreTensionnominale(String value) {
    	this.eqptchlorometreTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptchlorometreCapacitedosage property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptchlorometreCapacitedosage() {
        return eqptchlorometreCapacitedosage;
    }

    /**
     * Sets the value of the eqptchlorometreCapacitedosage property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptchlorometreCapacitedosage(BigDecimal value) {
        this.eqptchlorometreCapacitedosage = value;
    }

    /**
     * Gets the value of the eqptchlorometrePressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_pressionnominale")
    public String getEqptchlorometrePressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_pressionnominale", eqptchlorometrePressionnominale, true);
    }

    /**
     * Sets the value of the eqptchlorometrePressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptchlorometrePressionnominale(String value) {
        this.eqptchlorometrePressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptchlorometrePlagedebit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_plagedebit")
    public String getEqptchlorometrePlagedebit() {
    	if (eqptchlorometrePlagedebit == null) {
    		manageNullException("eqptchlorometre_plagedebit");
    	}
        return eqptchlorometrePlagedebit;
    }

    /**
     * Sets the value of the eqptchlorometrePlagedebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometrePlagedebit(String value) {
        this.eqptchlorometrePlagedebit = value;
    }

    /**
     * Gets the value of the eqptchlorometreClasseappareil property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_classeappareil")
    public String getEqptchlorometreClasseappareil() {
    	if (eqptchlorometreClasseappareil == null) {
    		manageNullException("eqptchlorometre_classeappareil");
    	}
        return eqptchlorometreClasseappareil;
    }

    /**
     * Sets the value of the eqptchlorometreClasseappareil property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometreClasseappareil(String value) {
        this.eqptchlorometreClasseappareil = value;
    }

    /**
     * Gets the value of the eqptchlorometrePressionconddistri property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_pressionconddistri")
    public int getEqptchlorometrePressionconddistri() {
    	if (eqptchlorometrePressionconddistri == null) {
    		manageNullException("eqptchlorometre_pressionconddistri");
    	}
        return eqptchlorometrePressionconddistri;
    }

    /**
     * Sets the value of the eqptchlorometrePressionconddistri property.
     * 
     */
    public void setEqptchlorometrePressionconddistri(int value) {
        this.eqptchlorometrePressionconddistri = value;
    }

    /**
     * Gets the value of the eqptchlorometreReducpression property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_reducpression")
    public String getEqptchlorometreReducpression() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_reducpression", eqptchlorometreReducpression, true);
    }

    /**
     * Sets the value of the eqptchlorometreReducpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptchlorometreReducpression(String value) {
        this.eqptchlorometreReducpression = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_reducpression", value);
    }

    /**
     * Gets the value of the eqptchlorometrePlagereducpression property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_plagereducpression")
    public String getEqptchlorometrePlagereducpression() {
    	if (eqptchlorometrePlagereducpression == null) {
    		manageNullException("eqptchlorometre_plagereducpression");
    	}
        return eqptchlorometrePlagereducpression;
    }

    /**
     * Sets the value of the eqptchlorometrePlagereducpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometrePlagereducpression(String value) {
        this.eqptchlorometrePlagereducpression = value;
    }

    /**
     * Gets the value of the eqptchlorometreReguldebit property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_reguldebit")
    public String getEqptchlorometreReguldebit() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_reguldebit", eqptchlorometreReguldebit, true);
    }

    /**
     * Sets the value of the eqptchlorometreReguldebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptchlorometreReguldebit(String value) {
        this.eqptchlorometreReguldebit = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_reguldebit", value);
    }

    /**
     * Gets the value of the eqptchlorometreClapetamontappareil property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptchlorometre_clapetamontappareil")
    public String getEqptchlorometreClapetamontappareil() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_clapetamontappareil", eqptchlorometreClapetamontappareil, true);
    }

    /**
     * Sets the value of the eqptchlorometreClapetamontappareil property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptchlorometreClapetamontappareil(String value) {
        this.eqptchlorometreClapetamontappareil = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_CHLOROMETRE, "eqptchlorometre_clapetamontappareil", value);
    }

    /**
     * Gets the value of the eqptchlorometrePjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptchlorometrePjmaintenance() {
        return eqptchlorometrePjmaintenance;
    }

    /**
     * Sets the value of the eqptchlorometrePjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometrePjmaintenance(String value) {
        this.eqptchlorometrePjmaintenance = value;
    }

    /**
     * Gets the value of the eqptchlorometrePjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptchlorometrePjfichetechnique() {
        return eqptchlorometrePjfichetechnique;
    }

    /**
     * Sets the value of the eqptchlorometrePjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptchlorometrePjfichetechnique(String value) {
        this.eqptchlorometrePjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_CHLOROMETRE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
