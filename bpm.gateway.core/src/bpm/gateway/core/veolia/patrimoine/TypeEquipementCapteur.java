//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementCapteur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementCapteur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptcapteur_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptcapteur_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptcapteur_type" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptcapteur_parametremesure" type="{}parametresMesuresListe" minOccurs="1"/>
 *         &lt;element name="eqptcapteur_plagemesure" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptcapteur_precision" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptcapteur_longueurcable" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptcapteur_typesignal" type="{}typesSignauxListe"/>
 *         &lt;element name="eqptcapteur_afficheurtransmetteur" type="{}afficheursTransmetteursListe"/>
 *         &lt;element name="eqptcapteur_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptcapteur_pjsuivimetrologique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptcapteur_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_CAPTEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementCapteur", propOrder = {
    "eqptcapteurEqptsocleId",
    "eqptcapteurDescriptif",
    "eqptcapteurType",
    "eqptcapteurParametremesure",
    "eqptcapteurPlagemesure",
    "eqptcapteurPrecision",
    "eqptcapteurLongueurcable",
    "eqptcapteurTypesignal",
    "eqptcapteurAfficheurtransmetteur",
    "eqptcapteurPjmaintenance",
    "eqptcapteurPjsuivimetrologique",
    "eqptcapteurPjfichetechnique"
})
public class TypeEquipementCapteur {

	@Id
	@Column(name = "eqptcapteur_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptcapteur_eqptsocle_id", required = true)
    protected String eqptcapteurEqptsocleId;
	@Transient
    @XmlElement(name = "eqptcapteur_descriptif", required = true, defaultValue = "NR")
    protected String eqptcapteurDescriptif;
	@Transient
    @XmlElement(name = "eqptcapteur_type", required = true, defaultValue = "NR")
    protected String eqptcapteurType;
	@Transient
    @XmlElement(name = "eqptcapteur_parametremesure", required = true)
    protected ParametresMesuresListe eqptcapteurParametremesure;
	@Transient
    @XmlElement(name = "eqptcapteur_plagemesure", required = true, defaultValue = "NR")
    protected String eqptcapteurPlagemesure;
	@Column(name = "eqptcapteur_precision")
    @XmlElement(name = "eqptcapteur_precision", defaultValue = "NR")
    protected String eqptcapteurPrecision;
	@Column(name = "eqptcapteur_longueurcable")
    @XmlElement(name = "eqptcapteur_longueurcable")
    protected BigDecimal eqptcapteurLongueurcable;
	@Transient
    @XmlElement(name = "eqptcapteur_typesignal", required = true)
    protected String eqptcapteurTypesignal;
	@Transient
    @XmlElement(name = "eqptcapteur_afficheurtransmetteur", required = true, defaultValue = "NR")
    protected AfficheursTransmetteursListe eqptcapteurAfficheurtransmetteur;
	@Column(name = "eqptcapteur_pjmaintenance")
    @XmlElement(name = "eqptcapteur_pjmaintenance", defaultValue = "NR")
    protected String eqptcapteurPjmaintenance;
	@Column(name = "eqptcapteur_pjsuivimetrologique")
    @XmlElement(name = "eqptcapteur_pjsuivimetrologique", defaultValue = "NR")
    protected String eqptcapteurPjsuivimetrologique;
	@Column(name = "eqptcapteur_pjfichetechnique")
    @XmlElement(name = "eqptcapteur_pjfichetechnique", defaultValue = "NR")
    protected String eqptcapteurPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptcapteurEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_eqptsocle_id")
    public String getEqptcapteurEqptsocleId() {
    	if (eqptcapteurEqptsocleId == null) {
    		manageNullException("eqptcapteur_eqptsocle_id");
    	}
        return eqptcapteurEqptsocleId;
    }

    /**
     * Sets the value of the eqptcapteurEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurEqptsocleId(String value) {
        this.eqptcapteurEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptcapteurDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_descriptif")
    public String getEqptcapteurDescriptif() {
    	if (eqptcapteurDescriptif == null) {
    		manageNullException("eqptcapteur_descriptif");
    	}
        return eqptcapteurDescriptif;
    }

    /**
     * Sets the value of the eqptcapteurDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurDescriptif(String value) {
        this.eqptcapteurDescriptif = value;
    }

    /**
     * Gets the value of the eqptcapteurType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_type")
    public String getEqptcapteurType() {
    	if (eqptcapteurType == null) {
    		manageNullException("eqptcapteur_type");
    	}
        return eqptcapteurType;
    }

    /**
     * Sets the value of the eqptcapteurType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurType(String value) {
        this.eqptcapteurType = value;
    }

    /**
     * Gets the value of the eqptcapteurParametremesure property.
     * 
     * @return
     *     possible object is
     *     {@link ParametresMesuresListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_parametremesure")
    public String getEqptcapteurParametremesure() {
        return ParametresMesuresListe.getValue(PatrimoineDAO.PAT_EQPT_CAPTEUR, "eqptcapteur_parametremesure", eqptcapteurParametremesure, false);
    }
	
	public void setEqptcapteurParametremesure(String value) {
		this.eqptcapteurParametremesure = ParametresMesuresListe.fromValue(PatrimoineDAO.PAT_EQPT_CAPTEUR, "eqptcapteur_parametremesure", value);
	}

    /**
     * Gets the value of the eqptcapteurPlagemesure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_plagemesure")
    public String getEqptcapteurPlagemesure() {
    	if (eqptcapteurPlagemesure == null) {
    		manageNullException("eqptcapteur_plagemesure");
    	}
        return eqptcapteurPlagemesure;
    }

    /**
     * Sets the value of the eqptcapteurPlagemesure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurPlagemesure(String value) {
        this.eqptcapteurPlagemesure = value;
    }

    /**
     * Gets the value of the eqptcapteurPrecision property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcapteurPrecision() {
        return eqptcapteurPrecision;
    }

    /**
     * Sets the value of the eqptcapteurPrecision property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurPrecision(String value) {
        this.eqptcapteurPrecision = value;
    }

    /**
     * Gets the value of the eqptcapteurLongueurcable property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptcapteurLongueurcable() {
        return eqptcapteurLongueurcable;
    }

    /**
     * Sets the value of the eqptcapteurLongueurcable property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcapteurLongueurcable(BigDecimal value) {
        this.eqptcapteurLongueurcable = value;
    }

    /**
     * Gets the value of the eqptcapteurTypesignal property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_typesignal")
    public String getEqptcapteurTypesignal() {
    	if (eqptcapteurTypesignal == null) {
    		manageNullException("eqptcapteur_typesignal");
    	}
        return eqptcapteurTypesignal;
    }

    /**
     * Sets the value of the eqptcapteurTypesignal property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurTypesignal(String value) {
        this.eqptcapteurTypesignal = value;
    }

    /**
     * Gets the value of the eqptcapteurAfficheurtransmetteur property.
     * 
     * @return
     *     possible object is
     *     {@link AfficheursTransmetteursListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcapteur_afficheurtransmetteur")
    public String getEqptcapteurAfficheurtransmetteur() {
        return AfficheursTransmetteursListe.getValue(PatrimoineDAO.PAT_EQPT_CAPTEUR, "eqptcapteur_afficheurtransmetteur", eqptcapteurAfficheurtransmetteur, true);
    }

    /**
     * Sets the value of the eqptcapteurAfficheurtransmetteur property.
     * 
     * @param value
     *     allowed object is
     *     {@link AfficheursTransmetteursListe }
     *     
     */
    public void setEqptcapteurAfficheurtransmetteur(String value) {
        this.eqptcapteurAfficheurtransmetteur = AfficheursTransmetteursListe.fromValue(PatrimoineDAO.PAT_EQPT_CAPTEUR, "eqptcapteur_afficheurtransmetteur", value);
    }

    /**
     * Gets the value of the eqptcapteurPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcapteurPjmaintenance() {
        return eqptcapteurPjmaintenance;
    }

    /**
     * Sets the value of the eqptcapteurPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurPjmaintenance(String value) {
        this.eqptcapteurPjmaintenance = value;
    }

    /**
     * Gets the value of the eqptcapteurPjsuivimetrologique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcapteurPjsuivimetrologique() {
        return eqptcapteurPjsuivimetrologique;
    }

    /**
     * Sets the value of the eqptcapteurPjsuivimetrologique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurPjsuivimetrologique(String value) {
        this.eqptcapteurPjsuivimetrologique = value;
    }

    /**
     * Gets the value of the eqptcapteurPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcapteurPjfichetechnique() {
        return eqptcapteurPjfichetechnique;
    }

    /**
     * Sets the value of the eqptcapteurPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcapteurPjfichetechnique(String value) {
        this.eqptcapteurPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_CAPTEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
