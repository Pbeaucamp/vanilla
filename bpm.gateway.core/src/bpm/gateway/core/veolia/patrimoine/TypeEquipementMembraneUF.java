//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementMembraneUF complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementMembraneUF">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptmembraneuf_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptmembraneuf_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptmembraneuf_fluxfiltration" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptmembraneuf_pressiontransmembranaire" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptmembraneuf_surfacemembranaire" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptmembraneuf_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_MEMBRANEUF)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementMembraneUF", propOrder = {
    "eqptmembraneufEqptsocleId",
    "eqptmembraneufDescriptif",
    "eqptmembraneufFluxfiltration",
    "eqptmembraneufPressiontransmembranaire",
    "eqptmembraneufSurfacemembranaire",
    "eqptmembraneufPjmaintenance"
})
public class TypeEquipementMembraneUF {

	@Id
	@Column(name = "eqptmembraneuf_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptmembraneuf_eqptsocle_id", required = true)
    protected String eqptmembraneufEqptsocleId;
	@Transient
    @XmlElement(name = "eqptmembraneuf_descriptif", required = true, defaultValue = "NR")
    protected String eqptmembraneufDescriptif;
	@Transient
    @XmlElement(name = "eqptmembraneuf_fluxfiltration", required = true)
    protected Integer eqptmembraneufFluxfiltration;
	@Transient
    @XmlElement(name = "eqptmembraneuf_pressiontransmembranaire", required = true)
    protected Integer eqptmembraneufPressiontransmembranaire;
	@Transient
    @XmlElement(name = "eqptmembraneuf_surfacemembranaire", required = true)
    protected Integer eqptmembraneufSurfacemembranaire;
	@Column(name = "eqptmembraneuf_pjmaintenance")
    @XmlElement(name = "eqptmembraneuf_pjmaintenance")
    protected String eqptmembraneufPjmaintenance;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptmembraneufEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptmembraneuf_eqptsocle_id")
    public String getEqptmembraneufEqptsocleId() {
    	if (eqptmembraneufEqptsocleId == null) {
    		manageNullException("eqptmembraneuf_eqptsocle_id");
    	}
        return eqptmembraneufEqptsocleId;
    }

    /**
     * Sets the value of the eqptmembraneufEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufEqptsocleId(String value) {
        this.eqptmembraneufEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptmembraneufDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptmembraneuf_descriptif")
    public String getEqptmembraneufDescriptif() {
    	if (eqptmembraneufDescriptif == null) {
    		manageNullException("eqptmembraneuf_descriptif");
    	}
        return eqptmembraneufDescriptif;
    }

    /**
     * Sets the value of the eqptmembraneufDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufDescriptif(String value) {
        this.eqptmembraneufDescriptif = value;
    }

    /**
     * Gets the value of the eqptmembraneufFluxfiltration property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptmembraneuf_fluxfiltration")
    public Integer getEqptmembraneufFluxfiltration() {
    	if (eqptmembraneufFluxfiltration == null) {
    		manageNullException("eqptmembraneuf_fluxfiltration");
    	}
        return eqptmembraneufFluxfiltration;
    }

    /**
     * Sets the value of the eqptmembraneufFluxfiltration property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufFluxfiltration(Integer value) {
        this.eqptmembraneufFluxfiltration = value;
    }

    /**
     * Gets the value of the eqptmembraneufPressiontransmembranaire property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptmembraneuf_pressiontransmembranaire")
    public Integer getEqptmembraneufPressiontransmembranaire() {
    	if (eqptmembraneufPressiontransmembranaire == null) {
    		manageNullException("eqptmembraneuf_pressiontransmembranaire");
    	}
        return eqptmembraneufPressiontransmembranaire;
    }

    /**
     * Sets the value of the eqptmembraneufPressiontransmembranaire property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufPressiontransmembranaire(Integer value) {
        this.eqptmembraneufPressiontransmembranaire = value;
    }

    /**
     * Gets the value of the eqptmembraneufSurfacemembranaire property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptmembraneuf_surfacemembranaire")
    public Integer getEqptmembraneufSurfacemembranaire() {
    	if (eqptmembraneufSurfacemembranaire == null) {
    		manageNullException("eqptmembraneuf_surfacemembranaire");
    	}
        return eqptmembraneufSurfacemembranaire;
    }

    /**
     * Sets the value of the eqptmembraneufSurfacemembranaire property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufSurfacemembranaire(Integer value) {
        this.eqptmembraneufSurfacemembranaire = value;
    }

    /**
     * Gets the value of the eqptmembraneufPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptmembraneufPjmaintenance() {
        return eqptmembraneufPjmaintenance;
    }

    /**
     * Sets the value of the eqptmembraneufPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptmembraneufPjmaintenance(String value) {
        this.eqptmembraneufPjmaintenance = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_MEMBRANEUF + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
