//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementPrefiltre complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementPrefiltre">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptprefiltre_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptprefiltre_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptprefiltre_seuilcoupure" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptprefiltre_debitnominal" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptprefiltre_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptprefiltre_hauteur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptprefiltre_modenettoyage" type="{}modesNettoyageListe"/>
 *         &lt;element name="eqptprefiltre_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptprefiltre_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_PREFILTRE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementPrefiltre", propOrder = {
    "eqptprefiltreEqptsocleId",
    "eqptprefiltreDescriptif",
    "eqptprefiltreSeuilcoupure",
    "eqptprefiltreDebitnominal",
    "eqptprefiltreDiametre",
    "eqptprefiltreHauteur",
    "eqptprefiltreModenettoyage",
    "eqptprefiltrePjmaintenance",
    "eqptprefiltrePjfichetechnique"
})
public class TypeEquipementPrefiltre {

	@Id
	@Column(name = "eqptprefiltre_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptprefiltre_eqptsocle_id", required = true)
    protected String eqptprefiltreEqptsocleId;
	@Transient
    @XmlElement(name = "eqptprefiltre_descriptif", required = true, defaultValue = "NR")
    protected String eqptprefiltreDescriptif;
	@Transient
    @XmlElement(name = "eqptprefiltre_seuilcoupure", required = true)
    protected BigDecimal eqptprefiltreSeuilcoupure;
	@Transient
    @XmlElement(name = "eqptprefiltre_debitnominal")
    protected Integer eqptprefiltreDebitnominal;
	@Transient
    @XmlElement(name = "eqptprefiltre_diametre")
    protected Integer eqptprefiltreDiametre;
	@Transient
    @XmlElement(name = "eqptprefiltre_hauteur", required = true)
    protected BigDecimal eqptprefiltreHauteur;
	@Transient
    @XmlElement(name = "eqptprefiltre_modenettoyage", required = true)
    protected ModesNettoyageListe eqptprefiltreModenettoyage;
	@Column(name = "eqptprefiltre_pjmaintenance")
    @XmlElement(name = "eqptprefiltre_pjmaintenance")
    protected String eqptprefiltrePjmaintenance;
	@Transient
    @XmlElement(name = "eqptprefiltre_pjfichetechnique")
    protected String eqptprefiltrePjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptprefiltreEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_eqptsocle_id")
    public String getEqptprefiltreEqptsocleId() {
    	if (eqptprefiltreEqptsocleId == null) {
    		manageNullException("eqptprefiltre_eqptsocle_id");
    	}
        return eqptprefiltreEqptsocleId;
    }

    /**
     * Sets the value of the eqptprefiltreEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptprefiltreEqptsocleId(String value) {
        this.eqptprefiltreEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptprefiltreDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_descriptif")
    public String getEqptprefiltreDescriptif() {
    	if (eqptprefiltreDescriptif == null) {
    		manageNullException("eqptprefiltre_descriptif");
    	}
        return eqptprefiltreDescriptif;
    }

    /**
     * Sets the value of the eqptprefiltreDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptprefiltreDescriptif(String value) {
        this.eqptprefiltreDescriptif = value;
    }

    /**
     * Gets the value of the eqptprefiltreSeuilcoupure property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_seuilcoupure")
    public BigDecimal getEqptprefiltreSeuilcoupure() {
    	if (eqptprefiltreSeuilcoupure == null) {
    		manageNullException("eqptprefiltre_seuilcoupure");
    	}
        return eqptprefiltreSeuilcoupure;
    }

    /**
     * Sets the value of the eqptprefiltreSeuilcoupure property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptprefiltreSeuilcoupure(BigDecimal value) {
        this.eqptprefiltreSeuilcoupure = value;
    }

    /**
     * Gets the value of the eqptprefiltreDebitnominal property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_debitnominal")
    public int getEqptprefiltreDebitnominal() {
    	if (eqptprefiltreDebitnominal == null) {
    		manageNullException("eqptprefiltre_debitnominal");
    	}
        return eqptprefiltreDebitnominal;
    }

    /**
     * Sets the value of the eqptprefiltreDebitnominal property.
     * 
     */
    public void setEqptprefiltreDebitnominal(int value) {
        this.eqptprefiltreDebitnominal = value;
    }

    /**
     * Gets the value of the eqptprefiltreDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_diametre")
    public int getEqptprefiltreDiametre() {
    	if (eqptprefiltreDiametre == null) {
    		manageNullException("eqptprefiltre_diametre");
    	}
        return eqptprefiltreDiametre;
    }

    /**
     * Sets the value of the eqptprefiltreDiametre property.
     * 
     */
    public void setEqptprefiltreDiametre(int value) {
        this.eqptprefiltreDiametre = value;
    }

    /**
     * Gets the value of the eqptprefiltreHauteur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_hauteur")
    public BigDecimal getEqptprefiltreHauteur() {
    	if (eqptprefiltreHauteur == null) {
    		manageNullException("eqptprefiltre_hauteur");
    	}
        return eqptprefiltreHauteur;
    }

    /**
     * Sets the value of the eqptprefiltreHauteur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptprefiltreHauteur(BigDecimal value) {
        this.eqptprefiltreHauteur = value;
    }

    /**
     * Gets the value of the eqptprefiltreModenettoyage property.
     * 
     * @return
     *     possible object is
     *     {@link ModesNettoyageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_modenettoyage")
    public String getEqptprefiltreModenettoyage() {
        return ModesNettoyageListe.getValue(PatrimoineDAO.PAT_EQPT_PREFILTRE, "eqptprefiltre_modenettoyage", eqptprefiltreModenettoyage);
    }

    /**
     * Sets the value of the eqptprefiltreModenettoyage property.
     * 
     * @param value
     *     allowed object is
     *     {@link ModesNettoyageListe }
     *     
     */
    public void setEqptprefiltreModenettoyage(String value) {
        this.eqptprefiltreModenettoyage = ModesNettoyageListe.fromValue(PatrimoineDAO.PAT_EQPT_PREFILTRE, "eqptprefiltre_modenettoyage", value);
    }

    /**
     * Gets the value of the eqptprefiltrePjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptprefiltrePjmaintenance() {
        return eqptprefiltrePjmaintenance;
    }

    /**
     * Sets the value of the eqptprefiltrePjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptprefiltrePjmaintenance(String value) {
        this.eqptprefiltrePjmaintenance = value;
    }

    /**
     * Gets the value of the eqptprefiltrePjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptprefiltre_pjfichetechnique")
    public String getEqptprefiltrePjfichetechnique() {
    	if (eqptprefiltrePjfichetechnique == null) {
    		manageNullException("eqptprefiltre_pjfichetechnique");
    	}
        return eqptprefiltrePjfichetechnique;
    }

    /**
     * Sets the value of the eqptprefiltrePjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptprefiltrePjfichetechnique(String value) {
        this.eqptprefiltrePjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_POMPE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
