//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementCondensateur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementCondensateur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptcondensateur_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptcondensateur_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptcondensateur_naturedielectrique" type="{}naturesDielectriquesListe" minOccurs="0"/>
 *         &lt;element name="eqptcondensateur_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptcondensateur_tensionnominale" type="{}tensionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptcondensateur_capacite" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptcondensateur_puissancereactive" type="{}decimalDeuxChiffres"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_CONDENSATEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementCondensateur", propOrder = {
    "eqptcondensateurEqptsocleId",
    "eqptcondensateurDescriptif",
    "eqptcondensateurNaturedielectrique",
    "eqptcondensateurPuissance",
    "eqptcondensateurTensionnominale",
    "eqptcondensateurCapacite",
    "eqptcondensateurPuissancereactive"
})
public class TypeEquipementCondensateur {

	@Id
	@Column(name = "eqptcondensateur_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptcondensateur_eqptsocle_id", required = true)
    protected String eqptcondensateurEqptsocleId;
	@Transient
    @XmlElement(name = "eqptcondensateur_descriptif", required = true, defaultValue = "NR")
    protected String eqptcondensateurDescriptif;
	@Transient
    @XmlElement(name = "eqptcondensateur_naturedielectrique")
    protected NaturesDielectriquesListe eqptcondensateurNaturedielectrique;
	@Transient
    @XmlElement(name = "eqptcondensateur_puissance", required = true)
    protected BigDecimal eqptcondensateurPuissance;
	@Transient
    @XmlElement(name = "eqptcondensateur_tensionnominale")
    protected TensionsNominalesListe eqptcondensateurTensionnominale;
	@Column(name = "eqptcondensateur_capacite")
    @XmlElement(name = "eqptcondensateur_capacite")
    protected BigDecimal eqptcondensateurCapacite;
	@Transient
    @XmlElement(name = "eqptcondensateur_puissancereactive", required = true)
    protected BigDecimal eqptcondensateurPuissancereactive;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptcondensateurEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_eqptsocle_id")
    public String getEqptcondensateurEqptsocleId() {
    	if (eqptcondensateurEqptsocleId == null) {
    		manageNullException("eqptcondensateur_eqptsocle_id");
    	}
        return eqptcondensateurEqptsocleId;
    }

    /**
     * Sets the value of the eqptcondensateurEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcondensateurEqptsocleId(String value) {
        this.eqptcondensateurEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptcondensateurDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_descriptif")
    public String getEqptcondensateurDescriptif() {
    	if (eqptcondensateurDescriptif == null) {
    		manageNullException("eqptcondensateur_descriptif");
    	}
        return eqptcondensateurDescriptif;
    }

    /**
     * Sets the value of the eqptcondensateurDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcondensateurDescriptif(String value) {
        this.eqptcondensateurDescriptif = value;
    }

    /**
     * Gets the value of the eqptcondensateurNaturedielectrique property.
     * 
     * @return
     *     possible object is
     *     {@link NaturesDielectriquesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_naturedielectrique")
    public String getEqptcondensateurNaturedielectrique() {
        return NaturesDielectriquesListe.getValue(PatrimoineDAO.PAT_EQPT_CONDENSATEUR, "eqptcondensateur_naturedielectrique", eqptcondensateurNaturedielectrique, false);
    }

    /**
     * Sets the value of the eqptcondensateurNaturedielectrique property.
     * 
     * @param value
     *     allowed object is
     *     {@link NaturesDielectriquesListe }
     *     
     */
    public void setEqptcondensateurNaturedielectrique(String value) {
        this.eqptcondensateurNaturedielectrique = NaturesDielectriquesListe.fromValue(PatrimoineDAO.PAT_EQPT_CONDENSATEUR, "eqptcondensateur_naturedielectrique", value);
    }

    /**
     * Gets the value of the eqptcondensateurPuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_puissance")
    public BigDecimal getEqptcondensateurPuissance() {
    	if (eqptcondensateurPuissance == null) {
    		manageNullException("eqptcondensateur_puissance");
    	}
        return eqptcondensateurPuissance;
    }

    /**
     * Sets the value of the eqptcondensateurPuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcondensateurPuissance(BigDecimal value) {
        this.eqptcondensateurPuissance = value;
    }

    /**
     * Gets the value of the eqptcondensateurTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_tensionnominale")
    public String getEqptcondensateurTensionnominale() {
    	return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_CONDENSATEUR, "eqptcondensateur_tensionnominale", eqptcondensateurTensionnominale, false);
    }

    /**
     * Sets the value of the eqptcondensateurTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcondensateurTensionnominale(String value) {
    	this.eqptcondensateurTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_CONDENSATEUR, "eqptcondensateur_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptcondensateurCapacite property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptcondensateurCapacite() {
        return eqptcondensateurCapacite;
    }

    /**
     * Sets the value of the eqptcondensateurCapacite property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcondensateurCapacite(BigDecimal value) {
        this.eqptcondensateurCapacite = value;
    }

    /**
     * Gets the value of the eqptcondensateurPuissancereactive property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcondensateur_puissancereactive")
    public BigDecimal getEqptcondensateurPuissancereactive() {
    	if (eqptcondensateurPuissancereactive == null) {
    		manageNullException("eqptcondensateur_puissancereactive");
    	}
        return eqptcondensateurPuissancereactive;
    }

    /**
     * Sets the value of the eqptcondensateurPuissancereactive property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcondensateurPuissancereactive(BigDecimal value) {
        this.eqptcondensateurPuissancereactive = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_CONDENSATEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
