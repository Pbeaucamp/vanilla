//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementBacRetention complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementBacRetention">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptbac_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptbac_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptbac_diametre" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptbac_hauteur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptbac_largeur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptbac_longueur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptbac_type" type="{}typesBacsRetentionListe"/>
 *         &lt;element name="eqptbac_materiauconstituant" type="{}materiauxConstituantsListe" minOccurs="0"/>
 *         &lt;element name="eqptbac_volume" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptbac_doublepeau" type="{}ouiNonListe"/>
 *         &lt;element name="eqptbac_retention" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqptbac_materiauretention" type="{}materiauxSupportsFiltrantsListe" minOccurs="0"/>
 *         &lt;element name="eqptbac_volumeretention" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptbac_dimensionretention" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptbac_presenceevents" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqptbac_positionpompe" type="{}positionsPompesBacRetentionListe" minOccurs="0"/>
 *         &lt;element name="eqptbac_typemesureniveau" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptbac_reactifcontenu" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptbac_dispositifcontrolefuite" type="{}stringRestricted255Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_BACRETENTION)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementBacRetention", propOrder = {
    "eqptbacEqptsocleId",
    "eqptbacDescriptif",
    "eqptbacDiametre",
    "eqptbacHauteur",
    "eqptbacLargeur",
    "eqptbacLongueur",
    "eqptbacType",
    "eqptbacMateriauconstituant",
    "eqptbacVolume",
    "eqptbacDoublepeau",
    "eqptbacRetention",
    "eqptbacMateriauretention",
    "eqptbacVolumeretention",
    "eqptbacDimensionretention",
    "eqptbacPresenceevents",
    "eqptbacPositionpompe",
    "eqptbacTypemesureniveau",
    "eqptbacReactifcontenu",
    "eqptbacDispositifcontrolefuite"
})
public class TypeEquipementBacRetention {

	@Id
	@Column(name = "eqptbac_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptbac_eqptsocle_id", required = true)
    protected String eqptbacEqptsocleId;
	@Transient
    @XmlElement(name = "eqptbac_descriptif", required = true, defaultValue = "NR")
    protected String eqptbacDescriptif;
	@Transient
    @XmlElement(name = "eqptbac_diametre")
    protected BigDecimal eqptbacDiametre;
	@Transient
    @XmlElement(name = "eqptbac_hauteur", required = true)
    protected BigDecimal eqptbacHauteur;
	@Transient
    @XmlElement(name = "eqptbac_largeur", required = true)
    protected BigDecimal eqptbacLargeur;
	@Transient
    @XmlElement(name = "eqptbac_longueur", required = true)
    protected BigDecimal eqptbacLongueur;
	@Transient
    @XmlElement(name = "eqptbac_type", required = true)
    protected TypesBacsRetentionListe eqptbacType;
	@Transient
    @XmlElement(name = "eqptbac_materiauconstituant")
    protected MateriauxConstituantsListe eqptbacMateriauconstituant;
	@Transient
    @XmlElement(name = "eqptbac_volume", required = true)
    protected BigDecimal eqptbacVolume;
	@Transient
    @XmlElement(name = "eqptbac_doublepeau", required = true)
    protected OuiNonListe eqptbacDoublepeau;
	@Transient
    @XmlElement(name = "eqptbac_retention")
    protected OuiNonListe eqptbacRetention;
	@Transient
    @XmlElement(name = "eqptbac_materiauretention")
    protected MateriauxSupportsFiltrantsListe eqptbacMateriauretention;
	@Column(name = "eqptbac_volumeretention")
    @XmlElement(name = "eqptbac_volumeretention")
    protected Integer eqptbacVolumeretention;
	@Column(name = "eqptbac_dimensionretention")
    @XmlElement(name = "eqptbac_dimensionretention", defaultValue = "NR")
    protected String eqptbacDimensionretention;
	@Transient
    @XmlElement(name = "eqptbac_presenceevents")
    protected OuiNonListe eqptbacPresenceevents;
	@Transient
    @XmlElement(name = "eqptbac_positionpompe")
    protected PositionsPompesBacRetentionListe eqptbacPositionpompe;
	@Column(name = "eqptbac_typemesureniveau")
    @XmlElement(name = "eqptbac_typemesureniveau", defaultValue = "NR")
    protected String eqptbacTypemesureniveau;
	@Column(name = "eqptbac_reactifcontenu")
    @XmlElement(name = "eqptbac_reactifcontenu", defaultValue = "NR")
    protected String eqptbacReactifcontenu;
	@Column(name = "eqptbac_dispositifcontrolefuite")
    @XmlElement(name = "eqptbac_dispositifcontrolefuite", defaultValue = "NR")
    protected String eqptbacDispositifcontrolefuite;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptbacEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_eqptsocle_id")
    public String getEqptbacEqptsocleId() {
		if (eqptbacEqptsocleId == null) {
			manageNullException("eqptbac_eqptsocle_id");
		}
        return eqptbacEqptsocleId;
    }

    /**
     * Sets the value of the eqptbacEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacEqptsocleId(String value) {
        this.eqptbacEqptsocleId = value != null ? value : "";
    }

    /**
     * Gets the value of the eqptbacDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_descriptif")
    public String getEqptbacDescriptif() {
		if (eqptbacDescriptif == null) {
			manageNullException("eqptbac_descriptif");
		}
        return eqptbacDescriptif;
    }

    /**
     * Sets the value of the eqptbacDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacDescriptif(String value) {
        this.eqptbacDescriptif = value != null ? value : "";
    }

    /**
     * Gets the value of the eqptbacDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_diametre")
    public BigDecimal getEqptbacDiametre() {
		if (eqptbacDiametre == null) {
			manageNullException("eqptbac_diametre");
		}
        return eqptbacDiametre;
    }

    /**
     * Sets the value of the eqptbacDiametre property.
     * 
     */
    public void setEqptbacDiametre(BigDecimal value) {
        this.eqptbacDiametre = value;
    }

    /**
     * Gets the value of the eqptbacHauteur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_hauteur")
    public BigDecimal getEqptbacHauteur() {
		if (eqptbacHauteur == null) {
			manageNullException("eqptbac_hauteur");
		}
        return eqptbacHauteur;
    }

    /**
     * Sets the value of the eqptbacHauteur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptbacHauteur(BigDecimal value) {
        this.eqptbacHauteur = value;
    }

    /**
     * Gets the value of the eqptbacLargeur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_largeur")
    public BigDecimal getEqptbacLargeur() {
		if (eqptbacLargeur == null) {
			manageNullException("eqptbac_largeur");
		}
        return eqptbacLargeur;
    }

    /**
     * Sets the value of the eqptbacLargeur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptbacLargeur(BigDecimal value) {
        this.eqptbacLargeur = value;
    }

    /**
     * Gets the value of the eqptbacLongueur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_longueur")
    public BigDecimal getEqptbacLongueur() {
		if (eqptbacLongueur == null) {
			manageNullException("eqptbac_longueur");
		}
        return eqptbacLongueur;
    }

    /**
     * Sets the value of the eqptbacLongueur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptbacLongueur(BigDecimal value) {
        this.eqptbacLongueur = value;
    }

    /**
     * Gets the value of the eqptbacType property.
     * 
     * @return
     *     possible object is
     *     {@link TypesBacsRetentionListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_type")
    public String getEqptbacType() {
        return TypesBacsRetentionListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_type", eqptbacType);
    }

    /**
     * Sets the value of the eqptbacType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesBacsRetentionListe }
     *     
     */
    public void setEqptbacType(String value) {
        this.eqptbacType = TypesBacsRetentionListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_type", value);
    }

    /**
     * Gets the value of the eqptbacMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_materiauconstituant")
    public String getEqptbacMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_materiauconstituant", eqptbacMateriauconstituant, false);
    }

    /**
     * Sets the value of the eqptbacMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptbacMateriauconstituant(String value) {
        this.eqptbacMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_materiauconstituant", value);
    }

    /**
     * Gets the value of the eqptbacVolume property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_volume")
    public BigDecimal getEqptbacVolume() {
		if (eqptbacVolume == null) {
			manageNullException("eqptbac_volume");
		}
        return eqptbacVolume;
    }

    /**
     * Sets the value of the eqptbacVolume property.
     * 
     */
    public void setEqptbacVolume(BigDecimal value) {
        this.eqptbacVolume = value;
    }

    /**
     * Gets the value of the eqptbacDoublepeau property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_doublepeau")
    public String getEqptbacDoublepeau() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_doublepeau", eqptbacDoublepeau, true);
    }

    /**
     * Sets the value of the eqptbacDoublepeau property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptbacDoublepeau(String value) {
        this.eqptbacDoublepeau = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_doublepeau", value);
    }

    /**
     * Gets the value of the eqptbacRetention property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_retention")
    public String getEqptbacRetention() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_retention", eqptbacRetention, false);
    }

    /**
     * Sets the value of the eqptbacRetention property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptbacRetention(String value) {
        this.eqptbacRetention = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_retention", value);
    }

    /**
     * Gets the value of the eqptbacMateriauretention property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxSupportsFiltrantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_materiauretention")
    public String getEqptbacMateriauretention() {
        return MateriauxSupportsFiltrantsListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_materiauretention", eqptbacMateriauretention, false);
    }

    /**
     * Sets the value of the eqptbacMateriauretention property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxSupportsFiltrantsListe }
     *     
     */
    public void setEqptbacMateriauretention(String value) {
        this.eqptbacMateriauretention = MateriauxSupportsFiltrantsListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_materiauretention", value);
    }

    /**
     * Gets the value of the eqptbacVolumeretention property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptbacVolumeretention() {
        return eqptbacVolumeretention;
    }

    /**
     * Sets the value of the eqptbacVolumeretention property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptbacVolumeretention(Integer value) {
        this.eqptbacVolumeretention = value;
    }

    /**
     * Gets the value of the eqptbacDimensionretention property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptbacDimensionretention() {
        return eqptbacDimensionretention;
    }

    /**
     * Sets the value of the eqptbacDimensionretention property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacDimensionretention(String value) {
        this.eqptbacDimensionretention = value;
    }

    /**
     * Gets the value of the eqptbacPresenceevents property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_presenceevents")
    public String getEqptbacPresenceevents() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_presenceevents", eqptbacPresenceevents, false);
    }

    /**
     * Sets the value of the eqptbacPresenceevents property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptbacPresenceevents(String value) {
        this.eqptbacPresenceevents = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_presenceevents", value);
    }

    /**
     * Gets the value of the eqptbacPositionpompe property.
     * 
     * @return
     *     possible object is
     *     {@link PositionsPompesBacRetentionListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptbac_positionpompe")
    public String getEqptbacPositionpompe() {
        return PositionsPompesBacRetentionListe.getValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_positionpompe", eqptbacPositionpompe, false);
    }

    /**
     * Sets the value of the eqptbacPositionpompe property.
     * 
     * @param value
     *     allowed object is
     *     {@link PositionsPompesBacRetentionListe }
     *     
     */
    public void setEqptbacPositionpompe(String value) {
        this.eqptbacPositionpompe = PositionsPompesBacRetentionListe.fromValue(PatrimoineDAO.PAT_EQPT_BACRETENTION, "eqptbac_positionpompe", value);
    }

    /**
     * Gets the value of the eqptbacTypemesureniveau property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptbacTypemesureniveau() {
        return eqptbacTypemesureniveau;
    }

    /**
     * Sets the value of the eqptbacTypemesureniveau property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacTypemesureniveau(String value) {
        this.eqptbacTypemesureniveau = value;
    }

    /**
     * Gets the value of the eqptbacReactifcontenu property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptbacReactifcontenu() {
        return eqptbacReactifcontenu;
    }

    /**
     * Sets the value of the eqptbacReactifcontenu property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacReactifcontenu(String value) {
        this.eqptbacReactifcontenu = value;
    }

    /**
     * Gets the value of the eqptbacDispositifcontrolefuite property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptbacDispositifcontrolefuite() {
        return eqptbacDispositifcontrolefuite;
    }

    /**
     * Sets the value of the eqptbacDispositifcontrolefuite property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptbacDispositifcontrolefuite(String value) {
        this.eqptbacDispositifcontrolefuite = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_BACRETENTION + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
