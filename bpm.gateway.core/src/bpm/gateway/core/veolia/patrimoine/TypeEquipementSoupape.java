//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementSoupape complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementSoupape">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptsoupape_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptsoupape_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptsoupape_pressionmax" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptsoupape_pressionmin" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptsoupape_debit" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptsoupape_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqptsoupape_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_SOUPAPE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementSoupape", propOrder = {
    "eqptsoupapeEqptsocleId",
    "eqptsoupapeDescriptif",
    "eqptsoupapePressionmax",
    "eqptsoupapePressionmin",
    "eqptsoupapeDebit",
    "eqptsoupapePressionnominale",
    "eqptsoupapeDiametre"
})
public class TypeEquipementSoupape {

	@Id
	@Column(name = "eqptsoupape_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptsoupape_eqptsocle_id", required = true)
    protected String eqptsoupapeEqptsocleId;
	@Transient
    @XmlElement(name = "eqptsoupape_descriptif", required = true, defaultValue = "NR")
    protected String eqptsoupapeDescriptif;
	@Column(name = "eqptsoupape_pressionmax")
    @XmlElement(name = "eqptsoupape_pressionmax")
    protected Integer eqptsoupapePressionmax;
	@Column(name = "eqptsoupape_pressionmin")
    @XmlElement(name = "eqptsoupape_pressionmin")
    protected Integer eqptsoupapePressionmin;
	@Column(name = "eqptsoupape_debit")
    @XmlElement(name = "eqptsoupape_debit")
    protected Integer eqptsoupapeDebit;
	@Transient
    @XmlElement(name = "eqptsoupape_pressionnominale", required = true)
    protected PressionsNominalesListe eqptsoupapePressionnominale;
	@Transient
    @XmlElement(name = "eqptsoupape_diametre")
    protected Integer eqptsoupapeDiametre;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptsoupapeEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptsoupape_eqptsocle_id")
    public String getEqptsoupapeEqptsocleId() {
    	if (eqptsoupapeEqptsocleId == null) {
    		manageNullException("eqptsoupape_eqptsocle_id");
    	}
        return eqptsoupapeEqptsocleId;
    }

    /**
     * Sets the value of the eqptsoupapeEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptsoupapeEqptsocleId(String value) {
        this.eqptsoupapeEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptsoupapeDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptsoupape_descriptif")
    public String getEqptsoupapeDescriptif() {
    	if (eqptsoupapeDescriptif == null) {
    		manageNullException("eqptsoupape_descriptif");
    	}
        return eqptsoupapeDescriptif;
    }

    /**
     * Sets the value of the eqptsoupapeDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptsoupapeDescriptif(String value) {
        this.eqptsoupapeDescriptif = value;
    }

    /**
     * Gets the value of the eqptsoupapePressionmax property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptsoupapePressionmax() {
        return eqptsoupapePressionmax;
    }

    /**
     * Sets the value of the eqptsoupapePressionmax property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptsoupapePressionmax(Integer value) {
        this.eqptsoupapePressionmax = value;
    }

    /**
     * Gets the value of the eqptsoupapePressionmin property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptsoupapePressionmin() {
        return eqptsoupapePressionmin;
    }

    /**
     * Sets the value of the eqptsoupapePressionmin property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptsoupapePressionmin(Integer value) {
        this.eqptsoupapePressionmin = value;
    }

    /**
     * Gets the value of the eqptsoupapeDebit property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptsoupapeDebit() {
        return eqptsoupapeDebit;
    }

    /**
     * Sets the value of the eqptsoupapeDebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptsoupapeDebit(Integer value) {
        this.eqptsoupapeDebit = value;
    }

    /**
     * Gets the value of the eqptsoupapePressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptsoupape_pressionnominale")
    public String getEqptsoupapePressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_SOUPAPE, "eqptsoupape_pressionnominale", eqptsoupapePressionnominale, true);
    }

    /**
     * Sets the value of the eqptsoupapePressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptsoupapePressionnominale(String value) {
        this.eqptsoupapePressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_SOUPAPE, "eqptsoupape_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptsoupapeDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptsoupape_diametre")
    public int getEqptsoupapeDiametre() {
    	if (eqptsoupapeDiametre == null) {
    		manageNullException("eqptsoupape_diametre");
    	}
        return eqptsoupapeDiametre;
    }

    /**
     * Sets the value of the eqptsoupapeDiametre property.
     * 
     */
    public void setEqptsoupapeDiametre(int value) {
        this.eqptsoupapeDiametre = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_SOUPAPE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
