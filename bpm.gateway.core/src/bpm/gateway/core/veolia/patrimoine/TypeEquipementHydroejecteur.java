//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementHydroejecteur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementHydroejecteur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqpthydroejec_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqpthydroejec_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqpthydroejec_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpthydroejec_debitnominal" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpthydroejec_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqpthydroejec_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_HYDROEJECTEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementHydroejecteur", propOrder = {
    "eqpthydroejecEqptsocleId",
    "eqpthydroejecDescriptif",
    "eqpthydroejecDiametre",
    "eqpthydroejecDebitnominal",
    "eqpthydroejecPressionnominale",
    "eqpthydroejecPjmaintenance"
})
public class TypeEquipementHydroejecteur {

	@Id
	@Column(name = "eqpthydroejec_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqpthydroejec_eqptsocle_id", required = true)
    protected String eqpthydroejecEqptsocleId;
	@Transient
    @XmlElement(name = "eqpthydroejec_descriptif", required = true, defaultValue = "NR")
    protected String eqpthydroejecDescriptif;
	@Transient
    @XmlElement(name = "eqpthydroejec_diametre")
    protected Integer eqpthydroejecDiametre;
	@Transient
    @XmlElement(name = "eqpthydroejec_debitnominal")
    protected Integer eqpthydroejecDebitnominal;
	@Transient
    @XmlElement(name = "eqpthydroejec_pressionnominale", required = true)
    protected PressionsNominalesListe eqpthydroejecPressionnominale;
	@Column(name = "eqpthydroejec_pjmaintenance")
    @XmlElement(name = "eqpthydroejec_pjmaintenance")
    protected String eqpthydroejecPjmaintenance;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqpthydroejecEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydroejec_eqptsocle_id")
    public String getEqpthydroejecEqptsocleId() {
    	if (eqpthydroejecEqptsocleId == null) {
    		manageNullException("eqpthydroejec_eqptsocle_id");
    	}
        return eqpthydroejecEqptsocleId;
    }

    /**
     * Sets the value of the eqpthydroejecEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydroejecEqptsocleId(String value) {
        this.eqpthydroejecEqptsocleId = value;
    }

    /**
     * Gets the value of the eqpthydroejecDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydroejec_descriptif")
    public String getEqpthydroejecDescriptif() {
    	if (eqpthydroejecDescriptif == null) {
    		manageNullException("eqpthydroejec_descriptif");
    	}
        return eqpthydroejecDescriptif;
    }

    /**
     * Sets the value of the eqpthydroejecDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydroejecDescriptif(String value) {
        this.eqpthydroejecDescriptif = value;
    }

    /**
     * Gets the value of the eqpthydroejecDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydroejec_diametre")
    public int getEqpthydroejecDiametre() {
    	if (eqpthydroejecDiametre == null) {
    		manageNullException("eqpthydroejec_diametre");
    	}
        return eqpthydroejecDiametre;
    }

    /**
     * Sets the value of the eqpthydroejecDiametre property.
     * 
     */
    public void setEqpthydroejecDiametre(int value) {
        this.eqpthydroejecDiametre = value;
    }

    /**
     * Gets the value of the eqpthydroejecDebitnominal property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydroejec_debitnominal")
    public int getEqpthydroejecDebitnominal() {
    	if (eqpthydroejecDebitnominal == null) {
    		manageNullException("eqpthydroejec_debitnominal");
    	}
        return eqpthydroejecDebitnominal;
    }

    /**
     * Sets the value of the eqpthydroejecDebitnominal property.
     * 
     */
    public void setEqpthydroejecDebitnominal(int value) {
        this.eqpthydroejecDebitnominal = value;
    }

    /**
     * Gets the value of the eqpthydroejecPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydroejec_pressionnominale")
    public String getEqpthydroejecPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_HYDROEJECTEUR, "eqpthydroejec_pressionnominale", eqpthydroejecPressionnominale, true);
    }

    /**
     * Sets the value of the eqpthydroejecPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqpthydroejecPressionnominale(String value) {
        this.eqpthydroejecPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_HYDROEJECTEUR, "eqpthydroejec_pressionnominale", value);
    }

    /**
     * Gets the value of the eqpthydroejecPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpthydroejecPjmaintenance() {
        return eqpthydroejecPjmaintenance;
    }

    /**
     * Sets the value of the eqpthydroejecPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydroejecPjmaintenance(String value) {
        this.eqpthydroejecPjmaintenance = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_HYDROEJECTEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
