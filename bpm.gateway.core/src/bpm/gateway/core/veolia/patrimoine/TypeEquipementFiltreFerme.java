//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementFiltreFerme complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementFiltreFerme">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptfiltreferme_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptfiltreferme_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptfiltreferme_materiauconstituant" type="{}materiauxConstituantsListe"/>
 *         &lt;element name="eqptfiltreferme_volume" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptfiltreferme_materiaumassiffiltrant" type="{}materiauxConstituantsListe"/>
 *         &lt;element name="eqptfiltreferme_hautmassiffiltrant" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptfiltreferme_vitfiltration" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptfiltreferme_typeplancher" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptfiltreferme_debit" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptfiltreferme_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptfiltreferme_pjplanfabrication" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_FILTREFERME)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementFiltreFerme", propOrder = {
    "eqptfiltrefermeEqptsocleId",
    "eqptfiltrefermeDescriptif",
    "eqptfiltrefermeMateriauconstituant",
    "eqptfiltrefermeVolume",
    "eqptfiltrefermeMateriaumassiffiltrant",
    "eqptfiltrefermeHautmassiffiltrant",
    "eqptfiltrefermeVitfiltration",
    "eqptfiltrefermeTypeplancher",
    "eqptfiltrefermeDebit",
    "eqptfiltrefermePjfichetechnique",
    "eqptfiltrefermePjplanfabrication"
})
public class TypeEquipementFiltreFerme {

	@Id
	@Column(name = "eqptfiltreferme_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptfiltreferme_eqptsocle_id", required = true)
    protected String eqptfiltrefermeEqptsocleId;
	@Transient
    @XmlElement(name = "eqptfiltreferme_descriptif", required = true, defaultValue = "NR")
    protected String eqptfiltrefermeDescriptif;
	@Transient
    @XmlElement(name = "eqptfiltreferme_materiauconstituant", required = true)
    protected MateriauxConstituantsListe eqptfiltrefermeMateriauconstituant;
	@Transient
    @XmlElement(name = "eqptfiltreferme_volume")
    protected Integer eqptfiltrefermeVolume;
	@Transient
    @XmlElement(name = "eqptfiltreferme_materiaumassiffiltrant", required = true)
    protected MateriauxConstituantsListe eqptfiltrefermeMateriaumassiffiltrant;
	@Transient
    @XmlElement(name = "eqptfiltreferme_hautmassiffiltrant", required = true)
    protected Integer eqptfiltrefermeHautmassiffiltrant;
	@Transient
    @XmlElement(name = "eqptfiltreferme_vitfiltration", required = true)
    protected Integer eqptfiltrefermeVitfiltration;
	@Transient
    @XmlElement(name = "eqptfiltreferme_typeplancher", required = true)
    protected String eqptfiltrefermeTypeplancher;
	@Transient
    @XmlElement(name = "eqptfiltreferme_debit")
    protected Integer eqptfiltrefermeDebit;
	@Column(name = "eqptfiltreferme_pjfichetechnique")
    @XmlElement(name = "eqptfiltreferme_pjfichetechnique")
    protected String eqptfiltrefermePjfichetechnique;
	@Column(name = "eqptfiltreferme_pjplanfabrication")
    @XmlElement(name = "eqptfiltreferme_pjplanfabrication")
    protected String eqptfiltrefermePjplanfabrication;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptfiltrefermeEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_eqptsocle_id")
    public String getEqptfiltrefermeEqptsocleId() {
    	if (eqptfiltrefermeEqptsocleId == null) {
    		manageNullException("eqptfiltreferme_eqptsocle_id");
    	}
        return eqptfiltrefermeEqptsocleId;
    }

    /**
     * Sets the value of the eqptfiltrefermeEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermeEqptsocleId(String value) {
        this.eqptfiltrefermeEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_descriptif")
    public String getEqptfiltrefermeDescriptif() {
    	if (eqptfiltrefermeDescriptif == null) {
    		manageNullException("eqptfiltreferme_descriptif");
    	}
        return eqptfiltrefermeDescriptif;
    }

    /**
     * Sets the value of the eqptfiltrefermeDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermeDescriptif(String value) {
        this.eqptfiltrefermeDescriptif = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_materiauconstituant")
    public String getEqptfiltrefermeMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_FILTREFERME, "eqptfiltreferme_materiauconstituant", eqptfiltrefermeMateriauconstituant, true);
    }

    /**
     * Sets the value of the eqptfiltrefermeMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptfiltrefermeMateriauconstituant(String value) {
        this.eqptfiltrefermeMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_FILTREFERME, "eqptfiltreferme_materiauconstituant", value);
    }

    /**
     * Gets the value of the eqptfiltrefermeVolume property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_volume")
    public int getEqptfiltrefermeVolume() {
    	if (eqptfiltrefermeVolume == null) {
    		manageNullException("eqptfiltreferme_volume");
    	}
        return eqptfiltrefermeVolume;
    }

    /**
     * Sets the value of the eqptfiltrefermeVolume property.
     * 
     */
    public void setEqptfiltrefermeVolume(int value) {
        this.eqptfiltrefermeVolume = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeMateriaumassiffiltrant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_materiaumassiffiltrant")
    public String getEqptfiltrefermeMateriaumassiffiltrant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_FILTREFERME, "eqptfiltreferme_materiaumassiffiltrant", eqptfiltrefermeMateriaumassiffiltrant, true);
    }

    /**
     * Sets the value of the eqptfiltrefermeMateriaumassiffiltrant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptfiltrefermeMateriaumassiffiltrant(String value) {
        this.eqptfiltrefermeMateriaumassiffiltrant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_FILTREFERME, "eqptfiltreferme_materiaumassiffiltrant", value);
    }

    /**
     * Gets the value of the eqptfiltrefermeHautmassiffiltrant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxSupportsFiltrantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_hautmassiffiltrant")
    public Integer getEqptfiltrefermeHautmassiffiltrant() {
        if (eqptfiltrefermeHautmassiffiltrant == null) {
    		manageNullException("eqptfiltreferme_hautmassiffiltrant");
    	}
        return eqptfiltrefermeHautmassiffiltrant;
    }

    /**
     * Sets the value of the eqptfiltrefermeHautmassiffiltrant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxSupportsFiltrantsListe }
     *     
     */
    public void setEqptfiltrefermeHautmassiffiltrant(Integer value) {
        this.eqptfiltrefermeHautmassiffiltrant = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeVitfiltration property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_vitfiltration")
    public Integer getEqptfiltrefermeVitfiltration() {
    	if (eqptfiltrefermeVitfiltration == null) {
    		manageNullException("eqptfiltreferme_vitfiltration");
    	}
        return eqptfiltrefermeVitfiltration;
    }

    /**
     * Sets the value of the eqptfiltrefermeVitfiltration property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermeVitfiltration(Integer value) {
        this.eqptfiltrefermeVitfiltration = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeTypeplancher property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_typeplancher")
    public String getEqptfiltrefermeTypeplancher() {
    	if (eqptfiltrefermeTypeplancher == null) {
    		manageNullException("eqptfiltreferme_typeplancher");
    	}
        return eqptfiltrefermeTypeplancher;
    }

    /**
     * Sets the value of the eqptfiltrefermeTypeplancher property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermeTypeplancher(String value) {
        this.eqptfiltrefermeTypeplancher = value;
    }

    /**
     * Gets the value of the eqptfiltrefermeDebit property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptfiltreferme_debit")
    public int getEqptfiltrefermeDebit() {
    	if (eqptfiltrefermeDebit == null) {
    		manageNullException("eqptfiltreferme_debit");
    	}
        return eqptfiltrefermeDebit;
    }

    /**
     * Sets the value of the eqptfiltrefermeDebit property.
     * 
     */
    public void setEqptfiltrefermeDebit(int value) {
        this.eqptfiltrefermeDebit = value;
    }

    /**
     * Gets the value of the eqptfiltrefermePjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptfiltrefermePjfichetechnique() {
        return eqptfiltrefermePjfichetechnique;
    }

    /**
     * Sets the value of the eqptfiltrefermePjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermePjfichetechnique(String value) {
        this.eqptfiltrefermePjfichetechnique = value;
    }

    /**
     * Gets the value of the eqptfiltrefermePjplanfabrication property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptfiltrefermePjplanfabrication() {
        return eqptfiltrefermePjplanfabrication;
    }

    /**
     * Sets the value of the eqptfiltrefermePjplanfabrication property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptfiltrefermePjplanfabrication(String value) {
        this.eqptfiltrefermePjplanfabrication = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_FILTREFERME + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
