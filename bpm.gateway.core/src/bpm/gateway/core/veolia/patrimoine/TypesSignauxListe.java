//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 02:32:39 PM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

import bpm.gateway.core.veolia.VEHelper;


/**
 * <p>Java class for typesSignauxListe.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typesSignauxListe">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Modbus"/>
 *     &lt;enumeration value="Modbus IP"/>
 *     &lt;enumeration value="0-10 v"/>
 *     &lt;enumeration value="4-20 mA"/>
 *     &lt;enumeration value="Analogique (ANA)"/>
 *     &lt;enumeration value="Tout ou rien (TOR)"/>
 *     &lt;enumeration value="NR"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "typesSignauxListe")
@XmlEnum
public enum TypesSignauxListe {

    @XmlEnumValue("Modbus")
    MODBUS("Modbus"),
    @XmlEnumValue("Modbus IP")
    MODBUS_IP("Modbus IP"),
    @XmlEnumValue("0-10 v")
    ZERO_TEN_V("0-10 v"),
    @XmlEnumValue("4-20 mA")
    FOUR_TWENTY_MA("4-20 mA"),
    @XmlEnumValue("Analogique (ANA)")
    ANALOGIQUE_ANA("Analogique (ANA)"),
    @XmlEnumValue("Tout ou rien (TOR)")
    TOUT_OU_RIEN("Tout ou rien (TOR)"),
    @XmlEnumValue("NR")
    NR("NR");
    private final String value;

    TypesSignauxListe(String v) {
        value = v;
    }

    public static String getValue(String table, String champ, TypesSignauxListe v) {
    	if (v == null) {
    		throw new IllegalArgumentException("Table " + table + " - Champs " + champ + " - Valeur 'Null' ou non permise pour la liste.");
    	}
    	return v.value;
    }
    
    public static TypesSignauxListe fromValue(String table, String champ, String v) {
    	if (v == null) {
    		System.out.println("Table " + table + " - Champs " + champ + " - Valeur 'Null' non permise.");
    		return TypesSignauxListe.NR;
    	}
    	
        for (TypesSignauxListe c: TypesSignauxListe.values()) {
        	if (VEHelper.checkEnum(c.value, v)) {
        		return c;
        	}
        }
		System.out.println("Table " + table + " - Champs " + champ + " - Mauvaise valeur '" + v + "'");
		return TypesSignauxListe.NR;
    }

}
