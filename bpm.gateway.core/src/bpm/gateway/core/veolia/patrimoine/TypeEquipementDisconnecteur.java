//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementDisconnecteur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementDisconnecteur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptdiscon_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptdiscon_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptdiscon_diametremm" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptdiscon_materiauconstituant" type="{}materiauxConstituantsListe" minOccurs="0"/>
 *         &lt;element name="eqptdiscon_type" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptdiscon_pressionnominale" type="{}pressionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptdiscon_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptdiscon_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_DISCONNECTEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementDisconnecteur", propOrder = {
    "eqptdisconEqptsocleId",
    "eqptdisconDescriptif",
    "eqptdisconDiametremm",
    "eqptdisconMateriauconstituant",
    "eqptdisconType",
    "eqptdisconPressionnominale",
    "eqptdisconPjmaintenance",
    "eqptdisconPjfichetechnique"
})
public class TypeEquipementDisconnecteur {

	@Id
	@Column(name = "eqptdiscon_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptdiscon_eqptsocle_id", required = true)
    protected String eqptdisconEqptsocleId;
	@Transient
    @XmlElement(name = "eqptdiscon_descriptif", required = true, defaultValue = "NR")
    protected String eqptdisconDescriptif;
	@Transient
    @XmlElement(name = "eqptdiscon_diametremm", required = true)
    protected BigDecimal eqptdisconDiametremm;
	@Transient
    @XmlElement(name = "eqptdiscon_materiauconstituant")
    protected MateriauxConstituantsListe eqptdisconMateriauconstituant;
	@Transient
    @XmlElement(name = "eqptdiscon_type", required = true, defaultValue = "NR")
    protected String eqptdisconType;
	@Transient
    @XmlElement(name = "eqptdiscon_pressionnominale")
    protected PressionsNominalesListe eqptdisconPressionnominale;
	@Column(name = "eqptdiscon_pjmaintenance")
    @XmlElement(name = "eqptdiscon_pjmaintenance", defaultValue = "NR")
    protected String eqptdisconPjmaintenance;
	@Column(name = "eqptdiscon_pjfichetechnique")
    @XmlElement(name = "eqptdiscon_pjfichetechnique", defaultValue = "NR")
    protected String eqptdisconPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptdisconEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_eqptsocle_id")
    public String getEqptdisconEqptsocleId() {
    	if (eqptdisconEqptsocleId == null) {
    		manageNullException("eqptdiscon_eqptsocle_id");
    	}
        return eqptdisconEqptsocleId;
    }

    /**
     * Sets the value of the eqptdisconEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptdisconEqptsocleId(String value) {
        this.eqptdisconEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptdisconDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_descriptif")
    public String getEqptdisconDescriptif() {
    	if (eqptdisconDescriptif == null) {
    		manageNullException("eqptdiscon_descriptif");
    	}
        return eqptdisconDescriptif;
    }

    /**
     * Sets the value of the eqptdisconDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptdisconDescriptif(String value) {
        this.eqptdisconDescriptif = value;
    }

    /**
     * Gets the value of the eqptdisconDiametremm property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_diametremm")
    public BigDecimal getEqptdisconDiametremm() {
    	if (eqptdisconDiametremm == null) {
    		manageNullException("eqptdiscon_diametremm");
    	}
        return eqptdisconDiametremm;
    }

    /**
     * Sets the value of the eqptdisconDiametremm property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptdisconDiametremm(BigDecimal value) {
        this.eqptdisconDiametremm = value;
    }

    /**
     * Gets the value of the eqptdisconMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_materiauconstituant")
    public String getEqptdisconMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_DISCONNECTEUR, "eqptdiscon_materiauconstituant", eqptdisconMateriauconstituant, false);
    }

    /**
     * Sets the value of the eqptdisconMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptdisconMateriauconstituant(String value) {
        this.eqptdisconMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_DISCONNECTEUR, "eqptdiscon_materiauconstituant", value);
    }

    /**
     * Gets the value of the eqptdisconType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_type")
    public String getEqptdisconType() {
    	if (eqptdisconType == null) {
    		manageNullException("eqptdiscon_type");
    	}
        return eqptdisconType;
    }

    /**
     * Sets the value of the eqptdisconType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptdisconType(String value) {
        this.eqptdisconType = value;
    }

    /**
     * Gets the value of the eqptdisconPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptdiscon_pressionnominale")
    public String getEqptdisconPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_DISCONNECTEUR, "eqptdiscon_pressionnominale", eqptdisconPressionnominale, false);
    }

    /**
     * Sets the value of the eqptdisconPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptdisconPressionnominale(String value) {
        this.eqptdisconPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_DISCONNECTEUR, "eqptdiscon_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptdisconPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptdisconPjmaintenance() {
        return eqptdisconPjmaintenance;
    }

    /**
     * Sets the value of the eqptdisconPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptdisconPjmaintenance(String value) {
        this.eqptdisconPjmaintenance = value;
    }

    /**
     * Gets the value of the eqptdisconPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptdisconPjfichetechnique() {
        return eqptdisconPjfichetechnique;
    }

    /**
     * Sets the value of the eqptdisconPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptdisconPjfichetechnique(String value) {
        this.eqptdisconPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_DISCONNECTEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
