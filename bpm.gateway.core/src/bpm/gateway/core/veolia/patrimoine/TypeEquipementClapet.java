//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementClapet complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementClapet">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptclapet_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptclapet_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptclapet_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptclapet_dimension" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptclapet_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqptclapet_type" type="{}typesClapetsListe"/>
 *         &lt;element name="eqptclapet_piedcrepine" type="{}piedsCrepinesListe" minOccurs="0"/>
 *         &lt;element name="eqptclapet_crepinemateriau" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptclapet_obturateurmateriau" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptclapet_tigeguidage" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqptclapet_nbbattants" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_CLAPET)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementClapet", propOrder = {
    "eqptclapetEqptsocleId",
    "eqptclapetDescriptif",
    "eqptclapetDiametre",
    "eqptclapetDimension",
    "eqptclapetPressionnominale",
    "eqptclapetType",
    "eqptclapetPiedcrepine",
    "eqptclapetCrepinemateriau",
    "eqptclapetObturateurmateriau",
    "eqptclapetTigeguidage",
    "eqptclapetNbbattants"
})
public class TypeEquipementClapet {

	@Id
	@Column(name = "eqptclapet_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptclapet_eqptsocle_id", required = true)
    protected String eqptclapetEqptsocleId;
	@Transient
    @XmlElement(name = "eqptclapet_descriptif", required = true, defaultValue = "NR")
    protected String eqptclapetDescriptif;
	@Transient
    @XmlElement(name = "eqptclapet_diametre")
    protected Integer eqptclapetDiametre;
	@Column(name = "eqptclapet_dimension")
    @XmlElement(name = "eqptclapet_dimension")
    protected Integer eqptclapetDimension;
	@Transient
    @XmlElement(name = "eqptclapet_pressionnominale", required = true)
    protected PressionsNominalesListe eqptclapetPressionnominale;
	@Transient
    @XmlElement(name = "eqptclapet_type", required = true)
    protected TypesClapetsListe eqptclapetType;
	@Transient
    @XmlElement(name = "eqptclapet_piedcrepine")
    protected PiedsCrepinesListe eqptclapetPiedcrepine;
	@Column(name = "eqptclapet_crepinemateriau")
    @XmlElement(name = "eqptclapet_crepinemateriau", defaultValue = "NR")
    protected String eqptclapetCrepinemateriau;
	@Column(name = "eqptclapet_obturateurmateriau")
    @XmlElement(name = "eqptclapet_obturateurmateriau", defaultValue = "NR")
    protected String eqptclapetObturateurmateriau;
	@Transient
    @XmlElement(name = "eqptclapet_tigeguidage")
    protected OuiNonListe eqptclapetTigeguidage;
	@Column(name = "eqptclapet_nbbattants")
    @XmlElement(name = "eqptclapet_nbbattants")
    protected Integer eqptclapetNbbattants;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptclapetEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_eqptsocle_id")
    public String getEqptclapetEqptsocleId() {
		if (eqptclapetEqptsocleId == null) {
    		manageNullException("eqptclapet_eqptsocle_id");
    	}
        return eqptclapetEqptsocleId;
    }

    /**
     * Sets the value of the eqptclapetEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptclapetEqptsocleId(String value) {
        this.eqptclapetEqptsocleId = value != null ? value : "";
    }

    /**
     * Gets the value of the eqptclapetDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_descriptif")
    public String getEqptclapetDescriptif() {
		if (eqptclapetDescriptif == null) {
    		manageNullException("eqptclapet_descriptif");
    	}
        return eqptclapetDescriptif;
    }

    /**
     * Sets the value of the eqptclapetDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptclapetDescriptif(String value) {
        this.eqptclapetDescriptif = value != null ? value : "";
    }

    /**
     * Gets the value of the eqptclapetDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_diametre")
    public int getEqptclapetDiametre() {
		if (eqptclapetDiametre == null) {
    		manageNullException("eqptclapet_diametre");
    	}
        return eqptclapetDiametre;
    }

    /**
     * Sets the value of the eqptclapetDiametre property.
     * 
     */
    public void setEqptclapetDiametre(int value) {
        this.eqptclapetDiametre = value;
    }

    /**
     * Gets the value of the eqptclapetDimension property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Integer getEqptclapetDimension() {
        return eqptclapetDimension;
    }

    /**
     * Sets the value of the eqptclapetDimension property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptclapetDimension(Integer value) {
        this.eqptclapetDimension = value;
    }

    /**
     * Gets the value of the eqptclapetPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_pressionnominale")
    public String getEqptclapetPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_pressionnominale", eqptclapetPressionnominale, true);
    }

    /**
     * Sets the value of the eqptclapetPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptclapetPressionnominale(String value) {
        this.eqptclapetPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptclapetType property.
     * 
     * @return
     *     possible object is
     *     {@link TypesClapetsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_type")
    public String getEqptclapetType() {
        return TypesClapetsListe.getValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_type", eqptclapetType);
    }

    /**
     * Sets the value of the eqptclapetType property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesClapetsListe }
     *     
     */
    public void setEqptclapetType(String value) {
        this.eqptclapetType = TypesClapetsListe.fromValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_type", value);
    }

    /**
     * Gets the value of the eqptclapetPiedcrepine property.
     * 
     * @return
     *     possible object is
     *     {@link PiedsCrepinesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_piedcrepine")
    public String getEqptclapetPiedcrepine() {
        return PiedsCrepinesListe.getValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_piedcrepine", eqptclapetPiedcrepine, false);
    }

    /**
     * Sets the value of the eqptclapetPiedcrepine property.
     * 
     * @param value
     *     allowed object is
     *     {@link PiedsCrepinesListe }
     *     
     */
    public void setEqptclapetPiedcrepine(String value) {
        this.eqptclapetPiedcrepine = PiedsCrepinesListe.fromValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_piedcrepine", value);
    }

    /**
     * Gets the value of the eqptclapetCrepinemateriau property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptclapetCrepinemateriau() {
        return eqptclapetCrepinemateriau;
    }

    /**
     * Sets the value of the eqptclapetCrepinemateriau property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptclapetCrepinemateriau(String value) {
        this.eqptclapetCrepinemateriau = value;
    }

    /**
     * Gets the value of the eqptclapetObturateurmateriau property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptclapetObturateurmateriau() {
        return eqptclapetObturateurmateriau;
    }

    /**
     * Sets the value of the eqptclapetObturateurmateriau property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptclapetObturateurmateriau(String value) {
        this.eqptclapetObturateurmateriau = value;
    }

    /**
     * Gets the value of the eqptclapetTigeguidage property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptclapet_tigeguidage")
    public String getEqptclapetTigeguidage() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_tigeguidage", eqptclapetTigeguidage, false);
    }

    /**
     * Sets the value of the eqptclapetTigeguidage property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptclapetTigeguidage(String value) {
        this.eqptclapetTigeguidage = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_CLAPET, "eqptclapet_tigeguidage", value);
    }

    /**
     * Gets the value of the eqptclapetNbbattants property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptclapetNbbattants() {
        return eqptclapetNbbattants;
    }

    /**
     * Sets the value of the eqptclapetNbbattants property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptclapetNbbattants(Integer value) {
        this.eqptclapetNbbattants = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_CLAPET + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
