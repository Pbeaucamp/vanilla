//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementHydrocyclone complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementHydrocyclone">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqpthydrocycl_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqpthydrocycl_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqpthydrocycl_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpthydrocycl_debitnominal" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpthydrocycl_pressionnominale" type="{}pressionsNominalesListe"/>
 *         &lt;element name="eqpthydrocycl_conesortdiam" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpthydrocycl_conesortcaract" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqpthydrocycl_mesuredebit" type="{}ouiNonListe"/>
 *         &lt;element name="eqpthydrocycl_positionmesuredebit" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqpthydrocycl_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqpthydrocycl_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_HYDROCYCLONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementHydrocyclone", propOrder = {
    "eqpthydrocyclEqptsocleId",
    "eqpthydrocyclDescriptif",
    "eqpthydrocyclDiametre",
    "eqpthydrocyclDebitnominal",
    "eqpthydrocyclPressionnominale",
    "eqpthydrocyclConesortdiam",
    "eqpthydrocyclConesortcaract",
    "eqpthydrocyclMesuredebit",
    "eqpthydrocyclPositionmesuredebit",
    "eqpthydrocyclPjmaintenance",
    "eqpthydrocyclPjfichetechnique"
})
public class TypeEquipementHydrocyclone {

	@Id
	@Column(name = "eqpthydrocycl_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqpthydrocycl_eqptsocle_id", required = true)
    protected String eqpthydrocyclEqptsocleId;
	@Transient
    @XmlElement(name = "eqpthydrocycl_descriptif", required = true, defaultValue = "NR")
    protected String eqpthydrocyclDescriptif;
	@Transient
    @XmlElement(name = "eqpthydrocycl_diametre")
    protected Integer eqpthydrocyclDiametre;
	@Transient
    @XmlElement(name = "eqpthydrocycl_debitnominal")
    protected Integer eqpthydrocyclDebitnominal;
	@Transient
    @XmlElement(name = "eqpthydrocycl_pressionnominale", required = true)
    protected PressionsNominalesListe eqpthydrocyclPressionnominale;
	@Transient
    @XmlElement(name = "eqpthydrocycl_conesortdiam")
    protected Integer eqpthydrocyclConesortdiam;
	@Column(name = "eqpthydrocycl_conesortcaract")
    @XmlElement(name = "eqpthydrocycl_conesortcaract")
    protected String eqpthydrocyclConesortcaract;
	@Transient
    @XmlElement(name = "eqpthydrocycl_mesuredebit", required = true)
    protected OuiNonListe eqpthydrocyclMesuredebit;
	@Column(name = "eqpthydrocycl_positionmesuredebit")
    @XmlElement(name = "eqpthydrocycl_positionmesuredebit")
    protected String eqpthydrocyclPositionmesuredebit;
	@Column(name = "eqpthydrocycl_pjmaintenance")
    @XmlElement(name = "eqpthydrocycl_pjmaintenance")
    protected String eqpthydrocyclPjmaintenance;
	@Column(name = "eqpthydrocycl_pjfichetechnique")
    @XmlElement(name = "eqpthydrocycl_pjfichetechnique")
    protected String eqpthydrocyclPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqpthydrocyclEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_eqptsocle_id")
    public String getEqpthydrocyclEqptsocleId() {
    	if (eqpthydrocyclEqptsocleId == null) {
    		manageNullException("eqpthydrocycl_eqptsocle_id");
    	}
        return eqpthydrocyclEqptsocleId;
    }

    /**
     * Sets the value of the eqpthydrocyclEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclEqptsocleId(String value) {
        this.eqpthydrocyclEqptsocleId = value;
    }

    /**
     * Gets the value of the eqpthydrocyclDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_descriptif")
    public String getEqpthydrocyclDescriptif() {
    	if (eqpthydrocyclDescriptif == null) {
    		manageNullException("eqpthydrocycl_descriptif");
    	}
        return eqpthydrocyclDescriptif;
    }

    /**
     * Sets the value of the eqpthydrocyclDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclDescriptif(String value) {
        this.eqpthydrocyclDescriptif = value;
    }

    /**
     * Gets the value of the eqpthydrocyclDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_diametre")
    public int getEqpthydrocyclDiametre() {
    	if (eqpthydrocyclDiametre == null) {
    		manageNullException("eqpthydrocycl_diametre");
    	}
        return eqpthydrocyclDiametre;
    }

    /**
     * Sets the value of the eqpthydrocyclDiametre property.
     * 
     */
    public void setEqpthydrocyclDiametre(int value) {
        this.eqpthydrocyclDiametre = value;
    }

    /**
     * Gets the value of the eqpthydrocyclDebitnominal property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_debitnominal")
    public int getEqpthydrocyclDebitnominal() {
    	if (eqpthydrocyclDebitnominal == null) {
    		manageNullException("eqpthydrocycl_debitnominal");
    	}
        return eqpthydrocyclDebitnominal;
    }

    /**
     * Sets the value of the eqpthydrocyclDebitnominal property.
     * 
     */
    public void setEqpthydrocyclDebitnominal(int value) {
        this.eqpthydrocyclDebitnominal = value;
    }

    /**
     * Gets the value of the eqpthydrocyclPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_pressionnominale")
    public String getEqpthydrocyclPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_HYDROCYCLONE, "eqpthydrocycl_pressionnominale", eqpthydrocyclPressionnominale, true);
    }

    /**
     * Sets the value of the eqpthydrocyclPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqpthydrocyclPressionnominale(String value) {
        this.eqpthydrocyclPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_HYDROCYCLONE, "eqpthydrocycl_pressionnominale", value);
    }

    /**
     * Gets the value of the eqpthydrocyclConesortdiam property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_conesortdiam")
    public int getEqpthydrocyclConesortdiam() {
    	if (eqpthydrocyclConesortdiam == null) {
    		manageNullException("eqpthydrocycl_conesortdiam");
    	}
        return eqpthydrocyclConesortdiam;
    }

    /**
     * Sets the value of the eqpthydrocyclConesortdiam property.
     * 
     */
    public void setEqpthydrocyclConesortdiam(int value) {
        this.eqpthydrocyclConesortdiam = value;
    }

    /**
     * Gets the value of the eqpthydrocyclConesortcaract property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpthydrocyclConesortcaract() {
        return eqpthydrocyclConesortcaract;
    }

    /**
     * Sets the value of the eqpthydrocyclConesortcaract property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclConesortcaract(String value) {
        this.eqpthydrocyclConesortcaract = value;
    }

    /**
     * Gets the value of the eqpthydrocyclMesuredebit property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpthydrocycl_mesuredebit")
    public String getEqpthydrocyclMesuredebit() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_HYDROCYCLONE, "eqpthydrocycl_mesuredebit", eqpthydrocyclMesuredebit, true);
    }

    /**
     * Sets the value of the eqpthydrocyclMesuredebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqpthydrocyclMesuredebit(String value) {
        this.eqpthydrocyclMesuredebit = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_HYDROCYCLONE, "eqpthydrocycl_mesuredebit", value);
    }

    /**
     * Gets the value of the eqpthydrocyclPositionmesuredebit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpthydrocyclPositionmesuredebit() {
        return eqpthydrocyclPositionmesuredebit;
    }

    /**
     * Sets the value of the eqpthydrocyclPositionmesuredebit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclPositionmesuredebit(String value) {
        this.eqpthydrocyclPositionmesuredebit = value;
    }

    /**
     * Gets the value of the eqpthydrocyclPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpthydrocyclPjmaintenance() {
        return eqpthydrocyclPjmaintenance;
    }

    /**
     * Sets the value of the eqpthydrocyclPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclPjmaintenance(String value) {
        this.eqpthydrocyclPjmaintenance = value;
    }

    /**
     * Gets the value of the eqpthydrocyclPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpthydrocyclPjfichetechnique() {
        return eqpthydrocyclPjfichetechnique;
    }

    /**
     * Sets the value of the eqpthydrocyclPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpthydrocyclPjfichetechnique(String value) {
        this.eqpthydrocyclPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_HYDROCYCLONE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
