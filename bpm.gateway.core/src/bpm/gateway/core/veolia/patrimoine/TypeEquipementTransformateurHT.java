//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;

import bpm.gateway.core.veolia.VEHelper;


/**
 * <p>Java class for typeEquipementTransformateurHT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementTransformateurHT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqpttransfoht_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqpttransfoht_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqpttransfoht_naturedielectrique" type="{}naturesDielectriquesListe" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqpttransfoht_tensionnominale" type="{}tensionsNominalesListe"/>
 *         &lt;element name="eqpttransfoht_tensionsecondaire" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqpttransfoht_capacitecuve" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_bacretention" type="{}ouiNonListe"/>
 *         &lt;element name="eqpttransfoht_volume" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpttransfoht_teneur" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_dateanalyse" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_referencecertificat" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_eqptprotection" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqpttransfoht_typetransfo" type="{}typesTransformateursListe" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_protection" type="{}protectionsTransformateursListe" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_pertesvide" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_pertescharge" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_nbcellule" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqpttransfoht_datefabrication" type="{http://www.w3.org/2001/XMLSchema}gYear"/>
 *         &lt;element name="eqpttransfoht_declarationdetention" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_classerdt" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqpttransfoht_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqpttransfoht_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementTransformateurHT", propOrder = {
    "eqpttransfohtEqptsocleId",
    "eqpttransfohtDescriptif",
    "eqpttransfohtNaturedielectrique",
    "eqpttransfohtPuissance",
    "eqpttransfohtTensionnominale",
    "eqpttransfohtTensionsecondaire",
    "eqpttransfohtCapacitecuve",
    "eqpttransfohtBacretention",
    "eqpttransfohtVolume",
    "eqpttransfohtTeneur",
    "eqpttransfohtDateanalyse",
    "eqpttransfohtReferencecertificat",
    "eqpttransfohtEqptprotection",
    "eqpttransfohtTypetransfo",
    "eqpttransfohtProtection",
    "eqpttransfohtPertesvide",
    "eqpttransfohtPertescharge",
    "eqpttransfohtNbcellule",
    "eqpttransfohtDatefabrication",
    "eqpttransfohtDeclarationdetention",
    "eqpttransfohtClasserdt",
    "eqpttransfohtPjmaintenance",
    "eqpttransfohtPjfichetechnique"
})
public class TypeEquipementTransformateurHT {

	@Id
	@Column(name = "eqpttransfoht_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqpttransfoht_eqptsocle_id", required = true)
    protected String eqpttransfohtEqptsocleId;
	@Transient
    @XmlElement(name = "eqpttransfoht_descriptif", required = true, defaultValue = "NR")
    protected String eqpttransfohtDescriptif;
	@Transient
    @XmlElement(name = "eqpttransfoht_naturedielectrique")
    protected NaturesDielectriquesListe eqpttransfohtNaturedielectrique;
	@Transient
    @XmlElement(name = "eqpttransfoht_puissance", required = true)
    protected BigDecimal eqpttransfohtPuissance;
	@Transient
    @XmlElement(name = "eqpttransfoht_tensionnominale", required = true)
    protected TensionsNominalesListe eqpttransfohtTensionnominale;
	@Transient
    @XmlElement(name = "eqpttransfoht_tensionsecondaire", required = true)
    protected String eqpttransfohtTensionsecondaire;
	@Transient
    @XmlElement(name = "eqpttransfoht_capacitecuve", required = true)
    protected BigDecimal eqpttransfohtCapacitecuve;
	@Transient
    @XmlElement(name = "eqpttransfoht_bacretention", required = true)
    protected OuiNonListe eqpttransfohtBacretention;
	@Transient
    @XmlElement(name = "eqpttransfoht_volume")
    protected Integer eqpttransfohtVolume;
	@Column(name = "eqpttransfoht_teneur")
    @XmlElement(name = "eqpttransfoht_teneur")
    protected BigDecimal eqpttransfohtTeneur;
	@Transient
    @XmlElement(name = "eqpttransfoht_dateanalyse")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar eqpttransfohtDateanalyse;
	@Column(name = "eqpttransfoht_referencecertificat")
    @XmlElement(name = "eqpttransfoht_referencecertificat")
    protected String eqpttransfohtReferencecertificat;
	@Transient
    @XmlElement(name = "eqpttransfoht_eqptprotection", required = true)
    protected String eqpttransfohtEqptprotection;
	@Transient
    @XmlElement(name = "eqpttransfoht_typetransfo")
    protected TypesTransformateursListe eqpttransfohtTypetransfo;
	@Transient
    @XmlElement(name = "eqpttransfoht_protection")
    protected ProtectionsTransformateursListe eqpttransfohtProtection;
	@Column(name = "eqpttransfoht_pertesvide")
    @XmlElement(name = "eqpttransfoht_pertesvide")
    protected String eqpttransfohtPertesvide;
	@Column(name = "eqpttransfoht_pertescharge")
    @XmlElement(name = "eqpttransfoht_pertescharge")
    protected String eqpttransfohtPertescharge;
	@Transient
    @XmlElement(name = "eqpttransfoht_nbcellule")
    protected Integer eqpttransfohtNbcellule;
	@Transient
    @XmlElement(name = "eqpttransfoht_datefabrication", required = true)
    @XmlSchemaType(name = "gYear")
    protected XMLGregorianCalendar eqpttransfohtDatefabrication;
	@Transient
    @XmlElement(name = "eqpttransfoht_declarationdetention")
    protected OuiNonListe eqpttransfohtDeclarationdetention;
	@Transient
    @XmlElement(name = "eqpttransfoht_classerdt", required = true)
    protected String eqpttransfohtClasserdt;
	@Column(name = "eqpttransfoht_pjmaintenance")
    @XmlElement(name = "eqpttransfoht_pjmaintenance")
    protected String eqpttransfohtPjmaintenance;
	@Column(name = "eqpttransfoht_pjfichetechnique")
    @XmlElement(name = "eqpttransfoht_pjfichetechnique")
    protected String eqpttransfohtPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqpttransfohtEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_eqptsocle_id")
    public String getEqpttransfohtEqptsocleId() {
    	if (eqpttransfohtEqptsocleId == null) {
    		manageNullException("eqpttransfoht_eqptsocle_id");
    	}
        return eqpttransfohtEqptsocleId;
    }

    /**
     * Sets the value of the eqpttransfohtEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtEqptsocleId(String value) {
        this.eqpttransfohtEqptsocleId = value;
    }

    /**
     * Gets the value of the eqpttransfohtDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_descriptif")
    public String getEqpttransfohtDescriptif() {
    	if (eqpttransfohtDescriptif == null) {
    		manageNullException("eqpttransfoht_descriptif");
    	}
        return eqpttransfohtDescriptif;
    }

    /**
     * Sets the value of the eqpttransfohtDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtDescriptif(String value) {
        this.eqpttransfohtDescriptif = value;
    }

    /**
     * Gets the value of the eqpttransfohtNaturedielectrique property.
     * 
     * @return
     *     possible object is
     *     {@link NaturesDielectriquesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_naturedielectrique")
    public String getEqpttransfohtNaturedielectrique() {
        return NaturesDielectriquesListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_naturedielectrique", eqpttransfohtNaturedielectrique, false);
    }

    /**
     * Sets the value of the eqpttransfohtNaturedielectrique property.
     * 
     * @param value
     *     allowed object is
     *     {@link NaturesDielectriquesListe }
     *     
     */
    public void setEqpttransfohtNaturedielectrique(String value) {
        this.eqpttransfohtNaturedielectrique = NaturesDielectriquesListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_naturedielectrique", value);
    }

    /**
     * Gets the value of the eqpttransfohtPuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_puissance")
    public BigDecimal getEqpttransfohtPuissance() {
    	if (eqpttransfohtPuissance == null) {
    		manageNullException("eqpttransfoht_puissance");
    	}
        return eqpttransfohtPuissance;
    }

    /**
     * Sets the value of the eqpttransfohtPuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqpttransfohtPuissance(BigDecimal value) {
        this.eqpttransfohtPuissance = value;
    }

    /**
     * Gets the value of the eqpttransfohtTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_tensionnominale")
    public String getEqpttransfohtTensionnominale() {
        return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_tensionnominale", eqpttransfohtTensionnominale, true);
    }

    /**
     * Sets the value of the eqpttransfohtTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtTensionnominale(String value) {
        this.eqpttransfohtTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_tensionnominale", value);
    }

    /**
     * Gets the value of the eqpttransfohtTensionsecondaire property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_tensionsecondaire")
    public String getEqpttransfohtTensionsecondaire() {
    	if (eqpttransfohtTensionsecondaire == null) {
    		manageNullException("eqpttransfoht_tensionsecondaire");
    	}
        return eqpttransfohtTensionsecondaire;
    }

    /**
     * Sets the value of the eqpttransfohtTensionsecondaire property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqpttransfohtTensionsecondaire(String value) {
        this.eqpttransfohtTensionsecondaire = value;
    }

    /**
     * Gets the value of the eqpttransfohtCapacitecuve property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_capacitecuve")
    public BigDecimal getEqpttransfohtCapacitecuve() {
    	if (eqpttransfohtCapacitecuve == null) {
    		manageNullException("eqpttransfoht_capacitecuve");
    	}
        return eqpttransfohtCapacitecuve;
    }

    /**
     * Sets the value of the eqpttransfohtCapacitecuve property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqpttransfohtCapacitecuve(BigDecimal value) {
        this.eqpttransfohtCapacitecuve = value;
    }

    /**
     * Gets the value of the eqpttransfohtBacretention property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_bacretention")
    public String getEqpttransfohtBacretention() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_bacretention", eqpttransfohtBacretention, true);
    }

    /**
     * Sets the value of the eqpttransfohtBacretention property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqpttransfohtBacretention(String value) {
        this.eqpttransfohtBacretention = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_bacretention", value);
    }

    /**
     * Gets the value of the eqpttransfohtVolume property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_volume")
    public int getEqpttransfohtVolume() {
    	if (eqpttransfohtVolume == null) {
    		manageNullException("eqpttransfoht_volume");
    	}
        return eqpttransfohtVolume;
    }

    /**
     * Sets the value of the eqpttransfohtVolume property.
     * 
     */
    public void setEqpttransfohtVolume(int value) {
        this.eqpttransfohtVolume = value;
    }

    /**
     * Gets the value of the eqpttransfohtTeneur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqpttransfohtTeneur() {
        return eqpttransfohtTeneur;
    }

    /**
     * Sets the value of the eqpttransfohtTeneur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqpttransfohtTeneur(BigDecimal value) {
        this.eqpttransfohtTeneur = value;
    }

    /**
     * Gets the value of the eqpttransfohtDateanalyse property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_dateanalyse")
    public Date getEqpttransfohtDateanalyse() {
        return VEHelper.toDate(eqpttransfohtDateanalyse);
    }

    /**
     * Sets the value of the eqpttransfohtDateanalyse property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEqpttransfohtDateanalyse(XMLGregorianCalendar value) {
        this.eqpttransfohtDateanalyse = value;
    }

    /**
     * Gets the value of the eqpttransfohtReferencecertificat property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpttransfohtReferencecertificat() {
        return eqpttransfohtReferencecertificat;
    }

    /**
     * Sets the value of the eqpttransfohtReferencecertificat property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtReferencecertificat(String value) {
        this.eqpttransfohtReferencecertificat = value;
    }

    /**
     * Gets the value of the eqpttransfohtEqptprotection property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_eqptprotection")
    public String getEqpttransfohtEqptprotection() {
    	if (eqpttransfohtEqptprotection == null) {
    		manageNullException("eqpttransfoht_eqptprotection");
    	}
        return eqpttransfohtEqptprotection;
    }

    /**
     * Sets the value of the eqpttransfohtEqptprotection property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtEqptprotection(String value) {
        this.eqpttransfohtEqptprotection = value;
    }

    /**
     * Gets the value of the eqpttransfohtTypetransfo property.
     * 
     * @return
     *     possible object is
     *     {@link TypesTransformateursListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_typetransfo")
    public String getEqpttransfohtTypetransfo() {
        return TypesTransformateursListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_typetransfo", eqpttransfohtTypetransfo, false);
    }

    /**
     * Sets the value of the eqpttransfohtTypetransfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesTransformateursListe }
     *     
     */
    public void setEqpttransfohtTypetransfo(String value) {
        this.eqpttransfohtTypetransfo = TypesTransformateursListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_typetransfo", value);
    }

    /**
     * Gets the value of the eqpttransfohtProtection property.
     * 
     * @return
     *     possible object is
     *     {@link ProtectionsTransformateursListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_protection")
    public String getEqpttransfohtProtection() {
        return ProtectionsTransformateursListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_protection", eqpttransfohtProtection, false);
    }

    /**
     * Sets the value of the eqpttransfohtProtection property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProtectionsTransformateursListe }
     *     
     */
    public void setEqpttransfohtProtection(String value) {
        this.eqpttransfohtProtection = ProtectionsTransformateursListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_protection", value);
    }

    /**
     * Gets the value of the eqpttransfohtPertesvide property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpttransfohtPertesvide() {
        return eqpttransfohtPertesvide;
    }

    /**
     * Sets the value of the eqpttransfohtPertesvide property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtPertesvide(String value) {
        this.eqpttransfohtPertesvide = value;
    }

    /**
     * Gets the value of the eqpttransfohtPertescharge property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpttransfohtPertescharge() {
        return eqpttransfohtPertescharge;
    }

    /**
     * Sets the value of the eqpttransfohtPertescharge property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtPertescharge(String value) {
        this.eqpttransfohtPertescharge = value;
    }

    /**
     * Gets the value of the eqpttransfohtNbcellule property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_nbcellule")
    public int getEqpttransfohtNbcellule() {
    	if (eqpttransfohtNbcellule == null) {
    		manageNullException("eqpttransfoht_nbcellule");
    	}
        return eqpttransfohtNbcellule;
    }

    /**
     * Sets the value of the eqpttransfohtVolume property.
     * 
     */
    public void setEqpttransfohtNbcellule(int value) {
        this.eqpttransfohtNbcellule = value;
    }

    /**
     * Gets the value of the eqpttransfohtDatefabrication property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_datefabrication")
    public Integer getEqpttransfohtDatefabrication() {
    	if (eqpttransfohtDatefabrication == null) {
    		manageNullException("eqpttransfoht_datefabrication");
    	}
    	return VEHelper.extractYear(eqpttransfohtDatefabrication);
    }

    /**
     * Sets the value of the eqpttransfohtDatefabrication property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEqpttransfohtDatefabrication(XMLGregorianCalendar value) {
        this.eqpttransfohtDatefabrication = value;
    }

    /**
     * Gets the value of the eqpttransfohtDeclarationdetention property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_declarationdetention")
    public String getEqpttransfohtDeclarationdetention() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_declarationdetention", eqpttransfohtDeclarationdetention, false);
    }

    /**
     * Sets the value of the eqpttransfohtDeclarationdetention property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqpttransfohtDeclarationdetention(String value) {
        this.eqpttransfohtDeclarationdetention = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT, "eqpttransfoht_declarationdetention", value);
    }

    /**
     * Gets the value of the eqpttransfohtClasserdt property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqpttransfoht_classerdt")
    public String getEqpttransfohtClasserdt() {
    	if (eqpttransfohtClasserdt == null) {
    		manageNullException("eqpttransfoht_classerdt");
    	}
        return eqpttransfohtClasserdt;
    }

    /**
     * Sets the value of the eqpttransfohtClasserdt property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtClasserdt(String value) {
        this.eqpttransfohtClasserdt = value;
    }

    /**
     * Gets the value of the eqpttransfohtPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpttransfohtPjmaintenance() {
        return eqpttransfohtPjmaintenance;
    }

    /**
     * Sets the value of the eqpttransfohtPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtPjmaintenance(String value) {
        this.eqpttransfohtPjmaintenance = value;
    }

    /**
     * Gets the value of the eqpttransfohtPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqpttransfohtPjfichetechnique() {
        return eqpttransfohtPjfichetechnique;
    }

    /**
     * Sets the value of the eqpttransfohtPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqpttransfohtPjfichetechnique(String value) {
        this.eqpttransfohtPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_TRANSFORMATEURHT + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
