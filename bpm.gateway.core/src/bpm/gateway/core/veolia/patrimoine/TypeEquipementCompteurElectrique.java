//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementCompteurElectrique complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementCompteurElectrique">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptcptelec_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptcptelec_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptcptelec_coefficientlecture" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptcptelec_indexpose" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptcptelec_indexmaximum" type="{}indexMaximumListe"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_COMPTEURELECTRIQUE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementCompteurElectrique", propOrder = {
    "eqptcptelecEqptsocleId",
    "eqptcptelecDescriptif",
    "eqptcptelecCoefficientlecture",
    "eqptcptelecIndexpose",
    "eqptcptelecIndexmaximum"
})
public class TypeEquipementCompteurElectrique {

	@Id
	@Column(name = "eqptcptelec_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptcptelec_eqptsocle_id", required = true)
    protected String eqptcptelecEqptsocleId;
	@Transient
    @XmlElement(name = "eqptcptelec_descriptif", required = true, defaultValue = "NR")
    protected String eqptcptelecDescriptif;
	@Transient
    @XmlElement(name = "eqptcptelec_coefficientlecture", required = true)
    protected BigDecimal eqptcptelecCoefficientlecture;
	@Transient
    @XmlElement(name = "eqptcptelec_indexpose")
    protected Integer eqptcptelecIndexpose;
	@Transient
    @XmlElement(name = "eqptcptelec_indexmaximum", required = true)
    protected IndexMaximumListe eqptcptelecIndexmaximum;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptcptelecEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcptelec_eqptsocle_id")
    public String getEqptcptelecEqptsocleId() {
    	if (eqptcptelecEqptsocleId == null) {
    		manageNullException("eqptcptelec_eqptsocle_id");
    	}
        return eqptcptelecEqptsocleId;
    }

    /**
     * Sets the value of the eqptcptelecEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcptelecEqptsocleId(String value) {
        this.eqptcptelecEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptcptelecDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcptelec_descriptif")
    public String getEqptcptelecDescriptif() {
    	if (eqptcptelecDescriptif == null) {
    		manageNullException("eqptcptelec_descriptif");
    	}
        return eqptcptelecDescriptif;
    }

    /**
     * Sets the value of the eqptcptelecDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcptelecDescriptif(String value) {
        this.eqptcptelecDescriptif = value;
    }

    /**
     * Gets the value of the eqptcptelecCoefficientlecture property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcptelec_coefficientlecture")
    public BigDecimal getEqptcptelecCoefficientlecture() {
    	if (eqptcptelecCoefficientlecture == null) {
    		manageNullException("eqptcptelec_coefficientlecture");
    	}
        return eqptcptelecCoefficientlecture;
    }

    /**
     * Sets the value of the eqptcptelecCoefficientlecture property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcptelecCoefficientlecture(BigDecimal value) {
        this.eqptcptelecCoefficientlecture = value;
    }

    /**
     * Gets the value of the eqptcptelecIndexpose property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcptelec_indexpose")
    public int getEqptcptelecIndexpose() {
    	if (eqptcptelecIndexpose == null) {
    		manageNullException("eqptcptelec_indexpose");
    	}
        return eqptcptelecIndexpose;
    }

    /**
     * Sets the value of the eqptcptelecIndexpose property.
     * 
     */
    public void setEqptcptelecIndexpose(int value) {
        this.eqptcptelecIndexpose = value;
    }

    /**
     * Gets the value of the eqptcptelecIndexmaximum property.
     * 
     * @return
     *     possible object is
     *     {@link IndexMaximumListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcptelec_indexmaximum")
    public Long getEqptcptelecIndexmaximum() {
        return IndexMaximumListe.getValue(PatrimoineDAO.PAT_EQPT_COMPTEURELECTRIQUE, "eqptcptelec_indexmaximum", eqptcptelecIndexmaximum, true);
    }

    /**
     * Sets the value of the eqptcptelecIndexmaximum property.
     * 
     * @param value
     *     allowed object is
     *     {@link IndexMaximumListe }
     *     
     */
    public void setEqptcptelecIndexmaximum(Long value) {
        this.eqptcptelecIndexmaximum = IndexMaximumListe.fromValue(PatrimoineDAO.PAT_EQPT_COMPTEURELECTRIQUE, "eqptcptelec_indexmaximum", value);
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_COMPTEURELECTRIQUE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
