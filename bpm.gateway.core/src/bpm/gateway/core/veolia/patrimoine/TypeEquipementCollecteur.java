//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementCollecteur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementCollecteur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptcollecteur_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptcollecteur_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptcollecteur_diametre" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptcollecteur_materiauconstituant" type="{}materiauxConstituantsListe"/>
 *         &lt;element name="eqptcollecteur_typearriveecuve" type="{}stringRestricted255Type" minOccurs="0"/>
 *         &lt;element name="eqptcollecteur_pressionnominale" type="{}pressionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptcollecteur_typecollecteur" type="{}stringRestricted255Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_COLLECTEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementCollecteur", propOrder = {
    "eqptcollecteurEqptsocleId",
    "eqptcollecteurDescriptif",
    "eqptcollecteurDiametre",
    "eqptcollecteurMateriauconstituant",
    "eqptcollecteurTypearriveecuve",
    "eqptcollecteurPressionnominale",
    "eqptcollecteurTypecollecteur"
})
public class TypeEquipementCollecteur {

	@Id
	@Column(name = "eqptcollecteur_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptcollecteur_eqptsocle_id", required = true)
    protected String eqptcollecteurEqptsocleId;
	@Transient
    @XmlElement(name = "eqptcollecteur_descriptif", required = true)
    protected String eqptcollecteurDescriptif;
	@Transient
    @XmlElement(name = "eqptcollecteur_diametre")
    protected Integer eqptcollecteurDiametre;
	@Transient
    @XmlElement(name = "eqptcollecteur_materiauconstituant", required = true)
    protected MateriauxConstituantsListe eqptcollecteurMateriauconstituant;
	@Column(name = "eqptcollecteur_typearriveecuve")
    @XmlElement(name = "eqptcollecteur_typearriveecuve", defaultValue = "NR")
    protected String eqptcollecteurTypearriveecuve;
	@Transient
    @XmlElement(name = "eqptcollecteur_pressionnominale")
    protected PressionsNominalesListe eqptcollecteurPressionnominale;
	@Column(name = "eqptcollecteur_typecollecteur")
    @XmlElement(name = "eqptcollecteur_typecollecteur")
    protected String eqptcollecteurTypecollecteur;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptcollecteurEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcollecteur_eqptsocle_id")
    public String getEqptcollecteurEqptsocleId() {
    	if (eqptcollecteurEqptsocleId == null) {
    		manageNullException("eqptcollecteur_eqptsocle_id");
    	}
        return eqptcollecteurEqptsocleId;
    }

    /**
     * Sets the value of the eqptcollecteurEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcollecteurEqptsocleId(String value) {
        this.eqptcollecteurEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptcollecteurDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcollecteur_descriptif")
    public String getEqptcollecteurDescriptif() {
    	if (eqptcollecteurDescriptif == null) {
    		manageNullException("eqptcollecteur_descriptif");
    	}
        return eqptcollecteurDescriptif;
    }

    /**
     * Sets the value of the eqptcollecteurDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcollecteurDescriptif(String value) {
        this.eqptcollecteurDescriptif = value;
    }

    /**
     * Gets the value of the eqptcollecteurDiametre property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcollecteur_diametre")
    public int getEqptcollecteurDiametre() {
    	if (eqptcollecteurDiametre == null) {
    		manageNullException("eqptcollecteur_diametre");
    	}
        return eqptcollecteurDiametre;
    }

    /**
     * Sets the value of the eqptcollecteurDiametre property.
     * 
     */
    public void setEqptcollecteurDiametre(int value) {
        this.eqptcollecteurDiametre = value;
    }

    /**
     * Gets the value of the eqptcollecteurMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcollecteur_materiauconstituant")
    public String getEqptcollecteurMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_COLLECTEUR, "eqptcollecteur_materiauconstituant", eqptcollecteurMateriauconstituant, true);
    }

    /**
     * Sets the value of the eqptcollecteurMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptcollecteurMateriauconstituant(String value) {
        this.eqptcollecteurMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_COLLECTEUR, "eqptcollecteur_materiauconstituant", value);
    }

    /**
     * Gets the value of the eqptcollecteurTypearriveecuve property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcollecteurTypearriveecuve() {
        return eqptcollecteurTypearriveecuve;
    }

    /**
     * Sets the value of the eqptcollecteurTypearriveecuve property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcollecteurTypearriveecuve(String value) {
        this.eqptcollecteurTypearriveecuve = value;
    }

    /**
     * Gets the value of the eqptcollecteurPressionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link PressionsNominalesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcollecteur_pressionnominale")
    public String getEqptcollecteurPressionnominale() {
        return PressionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_COLLECTEUR, "eqptcollecteur_pressionnominale", eqptcollecteurPressionnominale, false);
    }

    /**
     * Sets the value of the eqptcollecteurPressionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link PressionsNominalesListe }
     *     
     */
    public void setEqptcollecteurPressionnominale(String value) {
        this.eqptcollecteurPressionnominale = PressionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_COLLECTEUR, "eqptcollecteur_pressionnominale", value);
    }

    /**
     * Gets the value of the eqptcollecteurTypecollecteur property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptcollecteurTypecollecteur() {
        return eqptcollecteurTypecollecteur;
    }

    /**
     * Sets the value of the eqptcollecteurTypecollecteur property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcollecteurTypecollecteur(String value) {
        this.eqptcollecteurTypecollecteur = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_COLLECTEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
