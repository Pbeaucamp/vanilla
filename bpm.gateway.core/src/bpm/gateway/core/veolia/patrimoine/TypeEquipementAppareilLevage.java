//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementAppareilLevage complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementAppareilLevage">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptapplevage_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptapplevage_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptapplevage_accespointlevage" type="{}accesPointsLevageListe"/>
 *         &lt;element name="eqptapplevage_capacite" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_chargepermanente" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_chargeunique" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_chargevariableessai" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_chargevariablemaxi" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_elementsupport" type="{}elementsSupportsPointsLevageListe"/>
 *         &lt;element name="eqptapplevage_energie" type="{}energiesPointsLevageListe" minOccurs="0"/>
 *         &lt;element name="eqptapplevage_grapin" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_norgane" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptapplevage_organeservicemanoeuvre" type="{}organesServiceManoeuvreListe"/>
 *         &lt;element name="eqptapplevage_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_support" type="{}supportsPointsLevageListe"/>
 *         &lt;element name="eqptapplevage_tensionnominale" type="{}tensionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptapplevage_typeappareillevage" type="{}typesAppareilsLevageListe"/>
 *         &lt;element name="eqptapplevage_eqptconsigne" type="{}ouiNonListe"/>
 *         &lt;element name="eqptapplevage_diametre" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_longueur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptapplevage_materiauconstituant" type="{}materiauxConstituantsListe" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementAppareilLevage", propOrder = {
    "eqptapplevageEqptsocleId",
    "eqptapplevageDescriptif",
    "eqptapplevageAccespointlevage",
    "eqptapplevageCapacite",
    "eqptapplevageChargepermanente",
    "eqptapplevageChargeunique",
    "eqptapplevageChargevariableessai",
    "eqptapplevageChargevariablemaxi",
    "eqptapplevageElementsupport",
    "eqptapplevageEnergie",
    "eqptapplevageGrapin",
    "eqptapplevageNorgane",
    "eqptapplevageOrganeservicemanoeuvre",
    "eqptapplevagePuissance",
    "eqptapplevageSupport",
    "eqptapplevageTensionnominale",
    "eqptapplevageTypeappareillevage",
    "eqptapplevageEqptconsigne",
    "eqptapplevageDiametre",
    "eqptapplevageLongueur",
    "eqptapplevageMateriauconstituant"
})
public class TypeEquipementAppareilLevage {

	@Id
	@Column(name = "eqptapplevage_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptapplevage_eqptsocle_id", required = true)
    protected String eqptapplevageEqptsocleId;
	@Transient
    @XmlElement(name = "eqptapplevage_descriptif", required = true, defaultValue = "NR")
    protected String eqptapplevageDescriptif;
	@Transient
    @XmlElement(name = "eqptapplevage_accespointlevage", required = true)
    protected AccesPointsLevageListe eqptapplevageAccespointlevage;
	@Transient
    @XmlElement(name = "eqptapplevage_capacite", required = true)
    protected BigDecimal eqptapplevageCapacite;
	@Transient
    @XmlElement(name = "eqptapplevage_chargepermanente", required = true)
    protected BigDecimal eqptapplevageChargepermanente;
	@Transient
    @XmlElement(name = "eqptapplevage_chargeunique", required = true)
    protected BigDecimal eqptapplevageChargeunique;
	@Transient
    @XmlElement(name = "eqptapplevage_chargevariableessai", required = true)
    protected BigDecimal eqptapplevageChargevariableessai;
	@Transient
    @XmlElement(name = "eqptapplevage_chargevariablemaxi", required = true)
    protected BigDecimal eqptapplevageChargevariablemaxi;
	@Transient
    @XmlElement(name = "eqptapplevage_elementsupport", required = true)
    protected ElementsSupportsPointsLevageListe eqptapplevageElementsupport;
	@Transient
    @XmlElement(name = "eqptapplevage_energie")
    protected EnergiesPointsLevageListe eqptapplevageEnergie;
	@Transient
    @XmlElement(name = "eqptapplevage_grapin", required = true)
    protected BigDecimal eqptapplevageGrapin;
	@Column(name = "eqptapplevage_norgane")
    @XmlElement(name = "eqptapplevage_norgane")
    protected int eqptapplevageNorgane;
	@Transient
    @XmlElement(name = "eqptapplevage_organeservicemanoeuvre", required = true)
    protected OrganesServiceManoeuvreListe eqptapplevageOrganeservicemanoeuvre;
	@Transient
    @XmlElement(name = "eqptapplevage_puissance", required = true)
    protected BigDecimal eqptapplevagePuissance;
	@Transient
    @XmlElement(name = "eqptapplevage_support", required = true)
    protected SupportsPointsLevageListe eqptapplevageSupport;
	@Transient
    @XmlElement(name = "eqptapplevage_tensionnominale")
    protected TensionsNominalesListe eqptapplevageTensionnominale;
	@Transient
    @XmlElement(name = "eqptapplevage_typeappareillevage", required = true)
    protected TypesAppareilsLevageListe eqptapplevageTypeappareillevage;
	@Transient
    @XmlElement(name = "eqptapplevage_eqptconsigne", required = true)
    protected OuiNonListe eqptapplevageEqptconsigne;
	@Transient
    @XmlElement(name = "eqptapplevage_diametre", required = true)
    protected BigDecimal eqptapplevageDiametre;
	@Transient
    @XmlElement(name = "eqptapplevage_longueur", required = true)
    protected BigDecimal eqptapplevageLongueur;
	@Transient
    @XmlElement(name = "eqptapplevage_materiauconstituant")
    protected MateriauxConstituantsListe eqptapplevageMateriauconstituant;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptapplevageEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_eqptsocle_id")
    public String getEqptapplevageEqptsocleId() {
    	if (eqptapplevageEqptsocleId == null) {
    		manageNullException("eqptapplevage_eqptsocle_id");
    	}
        return eqptapplevageEqptsocleId;
    }

    /**
     * Sets the value of the eqptapplevageEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptapplevageEqptsocleId(String value) {
        this.eqptapplevageEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptapplevageDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_descriptif")
    public String getEqptapplevageDescriptif() {
    	if (eqptapplevageDescriptif == null) {
    		manageNullException("eqptapplevage_descriptif");
    	}
        return eqptapplevageDescriptif;
    }

    /**
     * Sets the value of the eqptapplevageDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptapplevageDescriptif(String value) {
        this.eqptapplevageDescriptif = value;
    }

    /**
     * Gets the value of the eqptapplevageAccespointlevage property.
     * 
     * @return
     *     possible object is
     *     {@link AccesPointsLevageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_accespointlevage")
    public String getEqptapplevageAccespointlevage() {
        return AccesPointsLevageListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_accespointlevage", eqptapplevageAccespointlevage);
    }

    /**
     * Sets the value of the eqptapplevageAccespointlevage property.
     * 
     * @param value
     *     allowed object is
     *     {@link AccesPointsLevageListe }
     *     
     */
    public void setEqptapplevageAccespointlevage(String value) {
        this.eqptapplevageAccespointlevage = AccesPointsLevageListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_accespointlevage", value);
    }

    /**
     * Gets the value of the eqptapplevageCapacite property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_capacite")
    public BigDecimal getEqptapplevageCapacite() {
    	if (eqptapplevageCapacite == null) {
    		manageNullException("eqptapplevage_capacite");
    	}
        return eqptapplevageCapacite;
    }

    /**
     * Sets the value of the eqptapplevageCapacite property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageCapacite(BigDecimal value) {
        this.eqptapplevageCapacite = value;
    }

    /**
     * Gets the value of the eqptapplevageChargepermanente property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_chargepermanente")
    public BigDecimal getEqptapplevageChargepermanente() {
    	if (eqptapplevageChargepermanente == null) {
    		manageNullException("eqptapplevage_chargepermanente");
    	}
        return eqptapplevageChargepermanente;
    }

    /**
     * Sets the value of the eqptapplevageChargepermanente property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageChargepermanente(BigDecimal value) {
        this.eqptapplevageChargepermanente = value;
    }

    /**
     * Gets the value of the eqptapplevageChargeunique property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_chargeunique")
    public BigDecimal getEqptapplevageChargeunique() {
    	if (eqptapplevageChargeunique == null) {
    		manageNullException("eqptapplevage_chargeunique");
    	}
        return eqptapplevageChargeunique;
    }

    /**
     * Sets the value of the eqptapplevageChargeunique property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageChargeunique(BigDecimal value) {
        this.eqptapplevageChargeunique = value;
    }

    /**
     * Gets the value of the eqptapplevageChargevariableessai property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_chargevariableessai")
    public BigDecimal getEqptapplevageChargevariableessai() {
    	if (eqptapplevageChargevariableessai == null) {
    		manageNullException("eqptapplevage_chargevariableessai");
    	}
        return eqptapplevageChargevariableessai;
    }

    /**
     * Sets the value of the eqptapplevageChargevariableessai property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageChargevariableessai(BigDecimal value) {
        this.eqptapplevageChargevariableessai = value;
    }

    /**
     * Gets the value of the eqptapplevageChargevariablemaxi property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_chargevariablemaxi")
    public BigDecimal getEqptapplevageChargevariablemaxi() {
    	if (eqptapplevageChargevariablemaxi == null) {
    		manageNullException("eqptapplevage_chargevariablemaxi");
    	}
        return eqptapplevageChargevariablemaxi;
    }

    /**
     * Sets the value of the eqptapplevageChargevariablemaxi property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageChargevariablemaxi(BigDecimal value) {
        this.eqptapplevageChargevariablemaxi = value;
    }

    /**
     * Gets the value of the eqptapplevageElementsupport property.
     * 
     * @return
     *     possible object is
     *     {@link ElementsSupportsPointsLevageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_elementsupport")
    public String getEqptapplevageElementsupport() {
        return ElementsSupportsPointsLevageListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_elementsupport", eqptapplevageElementsupport);
    }

    /**
     * Sets the value of the eqptapplevageElementsupport property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElementsSupportsPointsLevageListe }
     *     
     */
    public void setEqptapplevageElementsupport(String value) {
        this.eqptapplevageElementsupport = ElementsSupportsPointsLevageListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_elementsupport", value);
    }

    /**
     * Gets the value of the eqptapplevageEnergie property.
     * 
     * @return
     *     possible object is
     *     {@link EnergiesPointsLevageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_energie")
    public String getEqptapplevageEnergie() {
        return EnergiesPointsLevageListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_energie", eqptapplevageEnergie, false);
    }

    /**
     * Sets the value of the eqptapplevageEnergie property.
     * 
     * @param value
     *     allowed object is
     *     {@link EnergiesPointsLevageListe }
     *     
     */
    public void setEqptapplevageEnergie(String value) {
        this.eqptapplevageEnergie = EnergiesPointsLevageListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_energie", value);
    }

    /**
     * Gets the value of the eqptapplevageGrapin property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_grapin")
    public BigDecimal getEqptapplevageGrapin() {
    	if (eqptapplevageGrapin == null) {
    		manageNullException("eqptapplevage_grapin");
    	}
        return eqptapplevageGrapin;
    }

    /**
     * Sets the value of the eqptapplevageGrapin property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageGrapin(BigDecimal value) {
        this.eqptapplevageGrapin = value;
    }

    /**
     * Gets the value of the eqptapplevageNorgane property.
     * 
     */
    public int getEqptapplevageNorgane() {
        return eqptapplevageNorgane;
    }

    /**
     * Sets the value of the eqptapplevageNorgane property.
     * 
     */
    public void setEqptapplevageNorgane(int value) {
        this.eqptapplevageNorgane = value;
    }

    /**
     * Gets the value of the eqptapplevageOrganeservicemanoeuvre property.
     * 
     * @return
     *     possible object is
     *     {@link OrganesServiceManoeuvreListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_organeservicemanoeuvre")
    public String getEqptapplevageOrganeservicemanoeuvre() {
        return OrganesServiceManoeuvreListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_organeservicemanoeuvre", eqptapplevageOrganeservicemanoeuvre);
    }

    /**
     * Sets the value of the eqptapplevageOrganeservicemanoeuvre property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrganesServiceManoeuvreListe }
     *     
     */
    public void setEqptapplevageOrganeservicemanoeuvre(String value) {
        this.eqptapplevageOrganeservicemanoeuvre = OrganesServiceManoeuvreListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_organeservicemanoeuvre", value);
    }

    /**
     * Gets the value of the eqptapplevagePuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_puissance")
    public BigDecimal getEqptapplevagePuissance() {
    	if (eqptapplevagePuissance == null) {
    		manageNullException("eqptapplevage_puissance");
    	}
        return eqptapplevagePuissance;
    }

    /**
     * Sets the value of the eqptapplevagePuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevagePuissance(BigDecimal value) {
        this.eqptapplevagePuissance = value;
    }

    /**
     * Gets the value of the eqptapplevageSupport property.
     * 
     * @return
     *     possible object is
     *     {@link SupportsPointsLevageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_support")
    public String getEqptapplevageSupport() {
        return SupportsPointsLevageListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_support", eqptapplevageSupport);
    }

    /**
     * Sets the value of the eqptapplevageSupport property.
     * 
     * @param value
     *     allowed object is
     *     {@link SupportsPointsLevageListe }
     *     
     */
    public void setEqptapplevageSupport(String value) {
        this.eqptapplevageSupport = SupportsPointsLevageListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_support", value);
    }

    /**
     * Gets the value of the eqptapplevageTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_tensionnominale")
    public String getEqptapplevageTensionnominale() {
        return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_tensionnominale", eqptapplevageTensionnominale, false);
    }

    /**
     * Sets the value of the eqptapplevageTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptapplevageTensionnominale(String value) {
        this.eqptapplevageTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptapplevageTypeappareillevage property.
     * 
     * @return
     *     possible object is
     *     {@link TypesAppareilsLevageListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_typeappareillevage")
    public String getEqptapplevageTypeappareillevage() {
        return TypesAppareilsLevageListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_typeappareillevage", eqptapplevageTypeappareillevage);
    }

    /**
     * Sets the value of the eqptapplevageTypeappareillevage property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesAppareilsLevageListe }
     *     
     */
    public void setEqptapplevageTypeappareillevage(String value) {
        this.eqptapplevageTypeappareillevage = TypesAppareilsLevageListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_typeappareillevage", value);
    }

    /**
     * Gets the value of the eqptapplevageEqptconsigne property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_eqptconsigne")
    public String getEqptapplevageEqptconsigne() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_eqptconsigne", eqptapplevageEqptconsigne, true);
    }

    /**
     * Sets the value of the eqptapplevageEqptconsigne property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptapplevageEqptconsigne(String value) {
        this.eqptapplevageEqptconsigne = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_eqptconsigne", value);
    }

    /**
     * Gets the value of the eqptapplevageDiametre property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_diametre")
    public BigDecimal getEqptapplevageDiametre() {
    	if (eqptapplevageDiametre == null) {
    		manageNullException("eqptapplevage_diametre");
    	}
        return eqptapplevageDiametre;
    }

    /**
     * Sets the value of the eqptapplevageDiametre property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageDiametre(BigDecimal value) {
        this.eqptapplevageDiametre = value;
    }

    /**
     * Gets the value of the eqptapplevageLongueur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_longueur")
    public BigDecimal getEqptapplevageLongueur() {
    	if (eqptapplevageLongueur == null) {
    		manageNullException("eqptapplevage_longueur");
    	}
        return eqptapplevageLongueur;
    }

    /**
     * Sets the value of the eqptapplevageLongueur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptapplevageLongueur(BigDecimal value) {
        this.eqptapplevageLongueur = value;
    }

    /**
     * Gets the value of the eqptapplevageMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptapplevage_materiauconstituant")
    public String getEqptapplevageMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_materiauconstituant", eqptapplevageMateriauconstituant, false);
    }

    /**
     * Sets the value of the eqptapplevageMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptapplevageMateriauconstituant(String value) {
        this.eqptapplevageMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE, "eqptapplevage_materiauconstituant", value);
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_APPAREILLEVAGE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
