//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementPontRacleur complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementPontRacleur">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptpontracleur_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptpontracleur_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptpontracleur_longueur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptpontracleur_puissance" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptpontracleur_tensionnominale" type="{}tensionsNominalesListe" minOccurs="0"/>
 *         &lt;element name="eqptpontracleur_vitessesortie" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptpontracleur_couple" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptpontracleur_vitesserotation" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptpontracleur_prescapteur" type="{}ouiNonListe"/>
 *         &lt;element name="eqptpontracleur_volumehuile" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptpontracleur_poids" type="{http://www.w3.org/2001/XMLSchema}int"/>
 *         &lt;element name="eqptpontracleur_dimension" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptpontracleur_presencepasserelle" type="{}ouiNonListe"/>
 *         &lt;element name="eqptpontracleur_pjmaintenance" type="{}stringRestricted3000Type" minOccurs="0"/>
 *         &lt;element name="eqptpontracleur_pjfichetechnique" type="{}stringRestricted3000Type" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_PONTRACLEUR)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementPontRacleur", propOrder = {
    "eqptpontracleurEqptsocleId",
    "eqptpontracleurDescriptif",
    "eqptpontracleurLongueur",
    "eqptpontracleurPuissance",
    "eqptpontracleurTensionnominale",
    "eqptpontracleurVitessesortie",
    "eqptpontracleurCouple",
    "eqptpontracleurVitesserotation",
    "eqptpontracleurPrescapteur",
    "eqptpontracleurVolumehuile",
    "eqptpontracleurPoids",
    "eqptpontracleurDimension",
    "eqptpontracleurPresencepasserelle",
    "eqptpontracleurPjmaintenance",
    "eqptpontracleurPjfichetechnique"
})
public class TypeEquipementPontRacleur {

	@Id
	@Column(name = "eqptpontracleur_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptpontracleur_eqptsocle_id", required = true)
    protected String eqptpontracleurEqptsocleId;
	@Transient
    @XmlElement(name = "eqptpontracleur_descriptif", required = true, defaultValue = "NR")
    protected String eqptpontracleurDescriptif;
	@Transient
    @XmlElement(name = "eqptpontracleur_longueur", required = true)
    protected BigDecimal eqptpontracleurLongueur;
	@Transient
    @XmlElement(name = "eqptpontracleur_puissance", required = true)
    protected BigDecimal eqptpontracleurPuissance;
	@Transient
    @XmlElement(name = "eqptpontracleur_tensionnominale")
    protected TensionsNominalesListe eqptpontracleurTensionnominale;
	@Column(name = "eqptpontracleur_vitessesortie")
    @XmlElement(name = "eqptpontracleur_vitessesortie")
    protected Integer eqptpontracleurVitessesortie;
	@Transient
    @XmlElement(name = "eqptpontracleur_couple", required = true, defaultValue = "NR")
    protected String eqptpontracleurCouple;
	@Transient
    @XmlElement(name = "eqptpontracleur_vitesserotation")
    protected Integer eqptpontracleurVitesserotation;
	@Transient
    @XmlElement(name = "eqptpontracleur_prescapteur", required = true)
    protected OuiNonListe eqptpontracleurPrescapteur;
	@Column(name = "eqptpontracleur_volumehuile")
    @XmlElement(name = "eqptpontracleur_volumehuile")
    protected Integer eqptpontracleurVolumehuile;
	@Transient
    @XmlElement(name = "eqptpontracleur_poids")
    protected Integer eqptpontracleurPoids;
	@Transient
    @XmlElement(name = "eqptpontracleur_dimension", required = true)
    protected String eqptpontracleurDimension;
	@Transient
    @XmlElement(name = "eqptpontracleur_presencepasserelle", required = true)
    protected OuiNonListe eqptpontracleurPresencepasserelle;
	@Column(name = "eqptpontracleur_pjmaintenance")
    @XmlElement(name = "eqptpontracleur_pjmaintenance")
    protected String eqptpontracleurPjmaintenance;
	@Transient
    @XmlElement(name = "eqptpontracleur_pjfichetechnique")
    protected String eqptpontracleurPjfichetechnique;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptpontracleurEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_eqptsocle_id")
    public String getEqptpontracleurEqptsocleId() {
    	if (eqptpontracleurEqptsocleId == null) {
    		manageNullException("eqptpontracleur_eqptsocle_id");
    	}
        return eqptpontracleurEqptsocleId;
    }

    /**
     * Sets the value of the eqptpontracleurEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurEqptsocleId(String value) {
        this.eqptpontracleurEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptpontracleurDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_descriptif")
    public String getEqptpontracleurDescriptif() {
    	if (eqptpontracleurDescriptif == null) {
    		manageNullException("eqptpontracleur_descriptif");
    	}
        return eqptpontracleurDescriptif;
    }

    /**
     * Sets the value of the eqptpontracleurDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurDescriptif(String value) {
        this.eqptpontracleurDescriptif = value;
    }

    /**
     * Gets the value of the eqptpontracleurLongueur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_longueur")
    public BigDecimal getEqptpontracleurLongueur() {
    	if (eqptpontracleurLongueur == null) {
    		manageNullException("eqptpontracleur_longueur");
    	}
        return eqptpontracleurLongueur;
    }

    /**
     * Sets the value of the eqptpontracleurLongueur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptpontracleurLongueur(BigDecimal value) {
        this.eqptpontracleurLongueur = value;
    }

    /**
     * Gets the value of the eqptpontracleurPuissance property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_puissance")
    public BigDecimal getEqptpontracleurPuissance() {
    	if (eqptpontracleurPuissance == null) {
    		manageNullException("eqptpontracleur_puissance");
    	}
        return eqptpontracleurPuissance;
    }

    /**
     * Sets the value of the eqptpontracleurPuissance property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptpontracleurPuissance(BigDecimal value) {
        this.eqptpontracleurPuissance = value;
    }

    /**
     * Gets the value of the eqptpontracleurTensionnominale property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_tensionnominale")
    public String getEqptpontracleurTensionnominale() {
        return TensionsNominalesListe.getValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_tensionnominale", eqptpontracleurTensionnominale, false);
    }

    /**
     * Sets the value of the eqptpontracleurTensionnominale property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurTensionnominale(String value) {
        this.eqptpontracleurTensionnominale = TensionsNominalesListe.fromValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_tensionnominale", value);
    }

    /**
     * Gets the value of the eqptpontracleurVitessesortie property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptpontracleurVitessesortie() {
        return eqptpontracleurVitessesortie;
    }

    /**
     * Sets the value of the eqptpontracleurVitessesortie property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptpontracleurVitessesortie(Integer value) {
        this.eqptpontracleurVitessesortie = value;
    }

    /**
     * Gets the value of the eqptpontracleurCouple property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_couple")
    public String getEqptpontracleurCouple() {
    	if (eqptpontracleurCouple == null) {
    		manageNullException("eqptpontracleur_couple");
    	}
        return eqptpontracleurCouple;
    }

    /**
     * Sets the value of the eqptpontracleurCouple property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurCouple(String value) {
        this.eqptpontracleurCouple = value;
    }

    /**
     * Gets the value of the eqptpontracleurVitesserotation property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_vitesserotation")
    public int getEqptpontracleurVitesserotation() {
    	if (eqptpontracleurVitesserotation == null) {
    		manageNullException("eqptpontracleur_vitesserotation");
    	}
        return eqptpontracleurVitesserotation;
    }

    /**
     * Sets the value of the eqptpontracleurVitesserotation property.
     * 
     */
    public void setEqptpontracleurVitesserotation(int value) {
        this.eqptpontracleurVitesserotation = value;
    }

    /**
     * Gets the value of the eqptpontracleurPrescapteur property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_prescapteur")
    public String getEqptpontracleurPrescapteur() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_prescapteur", eqptpontracleurPrescapteur, true);
    }

    /**
     * Sets the value of the eqptpontracleurPrescapteur property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptpontracleurPrescapteur(String value) {
        this.eqptpontracleurPrescapteur = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_prescapteur", value);
    }

    /**
     * Gets the value of the eqptpontracleurVolumehuile property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptpontracleurVolumehuile() {
        return eqptpontracleurVolumehuile;
    }

    /**
     * Sets the value of the eqptpontracleurVolumehuile property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptpontracleurVolumehuile(Integer value) {
        this.eqptpontracleurVolumehuile = value;
    }

    /**
     * Gets the value of the eqptpontracleurPoids property.
     * 
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_poids")
    public int getEqptpontracleurPoids() {
    	if (eqptpontracleurPoids == null) {
    		manageNullException("eqptpontracleur_poids");
    	}
        return eqptpontracleurPoids;
    }

    /**
     * Sets the value of the eqptpontracleurPoids property.
     * 
     */
    public void setEqptpontracleurPoids(int value) {
        this.eqptpontracleurPoids = value;
    }

    /**
     * Gets the value of the eqptpontracleurDimension property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_dimension")
    public String getEqptpontracleurDimension() {
    	if (eqptpontracleurDimension == null) {
    		manageNullException("eqptpontracleur_dimension");
    	}
        return eqptpontracleurDimension;
    }

    /**
     * Sets the value of the eqptpontracleurDimension property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurDimension(String value) {
        this.eqptpontracleurDimension = value;
    }

    /**
     * Gets the value of the eqptpontracleurPresencepasserelle property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_presencepasserelle")
    public String getEqptpontracleurPresencepasserelle() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_presencepasserelle", eqptpontracleurPresencepasserelle, true);
    }

    /**
     * Sets the value of the eqptpontracleurPresencepasserelle property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptpontracleurPresencepasserelle(String value) {
        this.eqptpontracleurPresencepasserelle = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_PONTRACLEUR, "eqptpontracleur_presencepasserelle", value);
    }

    /**
     * Gets the value of the eqptpontracleurPjmaintenance property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEqptpontracleurPjmaintenance() {
        return eqptpontracleurPjmaintenance;
    }

    /**
     * Sets the value of the eqptpontracleurPjmaintenance property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurPjmaintenance(String value) {
        this.eqptpontracleurPjmaintenance = value;
    }

    /**
     * Gets the value of the eqptpontracleurPjfichetechnique property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptpontracleur_pjfichetechnique")
    public String getEqptpontracleurPjfichetechnique() {
    	if (eqptpontracleurPjfichetechnique == null) {
    		manageNullException("eqptpontracleur_pjfichetechnique");
    	}
        return eqptpontracleurPjfichetechnique;
    }

    /**
     * Sets the value of the eqptpontracleurPjfichetechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptpontracleurPjfichetechnique(String value) {
        this.eqptpontracleurPjfichetechnique = value;
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_PONTRACLEUR + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
