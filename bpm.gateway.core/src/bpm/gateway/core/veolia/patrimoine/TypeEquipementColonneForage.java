//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.02 at 10:47:34 AM CET 
//


package bpm.gateway.core.veolia.patrimoine;

import java.math.BigDecimal;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeEquipementColonneForage complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeEquipementColonneForage">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="eqptcolonneforage_eqptsocle_id" type="{}equipementIDType"/>
 *         &lt;element name="eqptcolonneforage_descriptif" type="{}stringRestricted3000Type"/>
 *         &lt;element name="eqptcolonneforage_longueur" type="{}decimalDeuxChiffres"/>
 *         &lt;element name="eqptcolonneforage_tubageplein" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptcolonneforage_tubagecrepine" type="{}stringRestricted255Type"/>
 *         &lt;element name="eqptcolonneforage_tubesoutenement" type="{}ouiNonListe"/>
 *         &lt;element name="eqptcolonneforage_tubesoutmateriauconstituant" type="{}materiauxConstituantsListe" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_materiauconstituant" type="{}materiauxConstituantsListe"/>
 *         &lt;element name="eqptcolonneforage_typeraccordtube" type="{}typesRaccordsListe"/>
 *         &lt;element name="eqptcolonneforage_crepine" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_typecrepine" type="{}typesCrepinesListe" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_slotdiametre" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_centreur" type="{}ouiNonListe" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_nbcentreur" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_profondeur" type="{}decimalDeuxChiffres" minOccurs="0"/>
 *         &lt;element name="eqptcolonneforage_bouchonfond" type="{}ouiNonListe" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@Entity
@Access(AccessType.FIELD)
@Table (name = PatrimoineDAO.PAT_EQPT_COLONNEFORAGE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeEquipementColonneForage", propOrder = {
    "eqptcolonneforageEqptsocleId",
    "eqptcolonneforageDescriptif",
    "eqptcolonneforageLongueur",
    "eqptcolonneforageTubageplein",
    "eqptcolonneforageTubagecrepine",
    "eqptcolonneforageTubesoutenement",
    "eqptcolonneforageTubesoutmateriauconstituant",
    "eqptcolonneforageMateriauconstituant",
    "eqptcolonneforageTyperaccordtube",
    "eqptcolonneforageCrepine",
    "eqptcolonneforageTypecrepine",
    "eqptcolonneforageSlotdiametre",
    "eqptcolonneforageCentreur",
    "eqptcolonneforageNbcentreur",
    "eqptcolonneforageProfondeur",
    "eqptcolonneforageBouchonfond"
})
public class TypeEquipementColonneForage {

	@Id
	@Column(name = "eqptcolonneforage_id")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@XmlTransient
    protected int id;
	@Transient
    @XmlElement(name = "eqptcolonneforage_eqptsocle_id", required = true)
    protected String eqptcolonneforageEqptsocleId;
	@Transient
    @XmlElement(name = "eqptcolonneforage_descriptif", required = true, defaultValue = "NR")
    protected String eqptcolonneforageDescriptif;
	@Transient
    @XmlElement(name = "eqptcolonneforage_longueur", required = true)
    protected BigDecimal eqptcolonneforageLongueur;
	@Transient
    @XmlElement(name = "eqptcolonneforage_tubageplein", required = true)
    protected String eqptcolonneforageTubageplein;
	@Transient
    @XmlElement(name = "eqptcolonneforage_tubagecrepine", required = true)
    protected String eqptcolonneforageTubagecrepine;
	@Transient
    @XmlElement(name = "eqptcolonneforage_tubesoutenement", required = true)
    protected OuiNonListe eqptcolonneforageTubesoutenement;
	@Transient
    @XmlElement(name = "eqptcolonneforage_tubesoutmateriauconstituant")
    protected MateriauxConstituantsListe eqptcolonneforageTubesoutmateriauconstituant;
	@Transient
    @XmlElement(name = "eqptcolonneforage_materiauconstituant", required = true)
    protected MateriauxConstituantsListe eqptcolonneforageMateriauconstituant;
	@Transient
    @XmlElement(name = "eqptcolonneforage_typeraccordtube", required = true)
    protected TypesRaccordsListe eqptcolonneforageTyperaccordtube;
	@Transient
    @XmlElement(name = "eqptcolonneforage_crepine", defaultValue = "NR")
    protected OuiNonListe eqptcolonneforageCrepine;
	@Transient
    @XmlElement(name = "eqptcolonneforage_typecrepine")
    protected TypesCrepinesListe eqptcolonneforageTypecrepine;
	@Column(name = "eqptcolonneforage_slotdiametre")
    @XmlElement(name = "eqptcolonneforage_slotdiametre")
    protected BigDecimal eqptcolonneforageSlotdiametre;
	@Transient
    @XmlElement(name = "eqptcolonneforage_centreur")
    protected OuiNonListe eqptcolonneforageCentreur;
	@Column(name = "eqptcolonneforage_nbcentreur")
    @XmlElement(name = "eqptcolonneforage_nbcentreur")
    protected Integer eqptcolonneforageNbcentreur;
	@Column(name = "eqptcolonneforage_profondeur")
    @XmlElement(name = "eqptcolonneforage_profondeur")
    protected BigDecimal eqptcolonneforageProfondeur;
	@Transient
    @XmlElement(name = "eqptcolonneforage_bouchonfond")
    protected OuiNonListe eqptcolonneforageBouchonfond;
	@Column(name = "id_chg")
	@XmlTransient
	private Integer idChg;

    /**
     * Gets the value of the eqptcolonneforageEqptsocleId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_eqptsocle_id")
    public String getEqptcolonneforageEqptsocleId() {
    	if (eqptcolonneforageEqptsocleId == null) {
    		manageNullException("eqptcolonneforage_eqptsocle_id");
    	}
        return eqptcolonneforageEqptsocleId;
    }

    /**
     * Sets the value of the eqptcolonneforageEqptsocleId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcolonneforageEqptsocleId(String value) {
        this.eqptcolonneforageEqptsocleId = value;
    }

    /**
     * Gets the value of the eqptcolonneforageDescriptif property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_descriptif")
    public String getEqptcolonneforageDescriptif() {
    	if (eqptcolonneforageDescriptif == null) {
    		manageNullException("eqptcolonneforage_descriptif");
    	}
        return eqptcolonneforageDescriptif;
    }

    /**
     * Sets the value of the eqptcolonneforageDescriptif property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcolonneforageDescriptif(String value) {
        this.eqptcolonneforageDescriptif = value;
    }

    /**
     * Gets the value of the eqptcolonneforageLongueur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_longueur")
    public BigDecimal getEqptcolonneforageLongueur() {
    	if (eqptcolonneforageLongueur == null) {
    		manageNullException("eqptcolonneforage_longueur");
    	}
        return eqptcolonneforageLongueur;
    }

    /**
     * Sets the value of the eqptcolonneforageLongueur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcolonneforageLongueur(BigDecimal value) {
        this.eqptcolonneforageLongueur = value;
    }

    /**
     * Gets the value of the eqptcolonneforageTubageplein property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_tubageplein")
    public String getEqptcolonneforageTubageplein() {
    	if (eqptcolonneforageTubageplein == null) {
    		manageNullException("eqptcolonneforage_tubageplein");
    	}
        return eqptcolonneforageTubageplein;
    }

    /**
     * Sets the value of the eqptcolonneforageTubageplein property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcolonneforageTubageplein(String value) {
        this.eqptcolonneforageTubageplein = value;
    }

    /**
     * Gets the value of the eqptcolonneforageTubagecrepine property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_tubagecrepine")
    public String getEqptcolonneforageTubagecrepine() {
    	if (eqptcolonneforageTubagecrepine == null) {
    		manageNullException("eqptcolonneforage_tubagecrepine");
    	}
        return eqptcolonneforageTubagecrepine;
    }

    /**
     * Sets the value of the eqptcolonneforageTubagecrepine property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEqptcolonneforageTubagecrepine(String value) {
        this.eqptcolonneforageTubagecrepine = value;
    }

    /**
     * Gets the value of the eqptcolonneforageTubesoutenement property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_tubesoutenement")
    public String getEqptcolonneforageTubesoutenement() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_tubesoutenement", eqptcolonneforageTubesoutenement, true);
    }

    /**
     * Sets the value of the eqptcolonneforageTubesoutenement property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptcolonneforageTubesoutenement(String value) {
        this.eqptcolonneforageTubesoutenement = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_tubesoutenement", value);
    }

    /**
     * Gets the value of the eqptcolonneforageTubesoutmateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_tubesoutmateriauconstituant")
    public String getEqptcolonneforageTubesoutmateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_tubesoutmateriauconstituant", eqptcolonneforageTubesoutmateriauconstituant, false);
    }

    /**
     * Sets the value of the eqptcolonneforageTubesoutmateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptcolonneforageTubesoutmateriauconstituant(String value) {
        this.eqptcolonneforageTubesoutmateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_tubesoutmateriauconstituant", value);
    }

    /**
     * Gets the value of the eqptcolonneforageMateriauconstituant property.
     * 
     * @return
     *     possible object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_materiauconstituant")
    public String getEqptcolonneforageMateriauconstituant() {
        return MateriauxConstituantsListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_materiauconstituant", eqptcolonneforageMateriauconstituant, true);
    }

    /**
     * Sets the value of the eqptcolonneforageMateriauconstituant property.
     * 
     * @param value
     *     allowed object is
     *     {@link MateriauxConstituantsListe }
     *     
     */
    public void setEqptcolonneforageMateriauconstituant(String value) {
        this.eqptcolonneforageMateriauconstituant = MateriauxConstituantsListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_materiauconstituant", value);
    }

    /**
     * Gets the value of the eqptcolonneforageTyperaccordtube property.
     * 
     * @return
     *     possible object is
     *     {@link TypesRaccordsListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_typeraccordtube")
    public String getEqptcolonneforageTyperaccordtube() {
        return TypesRaccordsListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_typeraccordtube", eqptcolonneforageTyperaccordtube);
    }

    /**
     * Sets the value of the eqptcolonneforageTyperaccordtube property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesRaccordsListe }
     *     
     */
    public void setEqptcolonneforageTyperaccordtube(String value) {
        this.eqptcolonneforageTyperaccordtube = TypesRaccordsListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_typeraccordtube", value);
    }

    /**
     * Gets the value of the eqptcolonneforageCrepine property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_crepine")
    public String getEqptcolonneforageCrepine() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_crepine", eqptcolonneforageCrepine, false);
    }

    /**
     * Sets the value of the eqptcolonneforageCrepine property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptcolonneforageCrepine(String value) {
        this.eqptcolonneforageCrepine = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_crepine", value);
    }

    /**
     * Gets the value of the eqptcolonneforageTypecrepine property.
     * 
     * @return
     *     possible object is
     *     {@link TypesCrepinesListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_typecrepine")
    public String getEqptcolonneforageTypecrepine() {
        return TypesCrepinesListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_typecrepine", eqptcolonneforageTypecrepine, false);
    }

    /**
     * Sets the value of the eqptcolonneforageTypecrepine property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypesCrepinesListe }
     *     
     */
    public void setEqptcolonneforageTypecrepine(String value) {
        this.eqptcolonneforageTypecrepine = TypesCrepinesListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_typecrepine", value);
    }

    /**
     * Gets the value of the eqptcolonneforageSlotdiametre property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptcolonneforageSlotdiametre() {
        return eqptcolonneforageSlotdiametre;
    }

    /**
     * Sets the value of the eqptcolonneforageSlotdiametre property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcolonneforageSlotdiametre(BigDecimal value) {
        this.eqptcolonneforageSlotdiametre = value;
    }

    /**
     * Gets the value of the eqptcolonneforageCentreur property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_centreur")
    public String getEqptcolonneforageCentreur() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_centreur", eqptcolonneforageCentreur, false);
    }

    /**
     * Sets the value of the eqptcolonneforageCentreur property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptcolonneforageCentreur(String value) {
        this.eqptcolonneforageCentreur = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_centreur", value);
    }

    /**
     * Gets the value of the eqptcolonneforageNbcentreur property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getEqptcolonneforageNbcentreur() {
        return eqptcolonneforageNbcentreur;
    }

    /**
     * Sets the value of the eqptcolonneforageNbcentreur property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setEqptcolonneforageNbcentreur(Integer value) {
        this.eqptcolonneforageNbcentreur = value;
    }

    /**
     * Gets the value of the eqptcolonneforageProfondeur property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getEqptcolonneforageProfondeur() {
        return eqptcolonneforageProfondeur;
    }

    /**
     * Sets the value of the eqptcolonneforageProfondeur property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setEqptcolonneforageProfondeur(BigDecimal value) {
        this.eqptcolonneforageProfondeur = value;
    }

    /**
     * Gets the value of the eqptcolonneforageBouchonfond property.
     * 
     * @return
     *     possible object is
     *     {@link OuiNonListe }
     *     
     */
	@Access(AccessType.PROPERTY)
	@Column(name = "eqptcolonneforage_bouchonfond")
    public String getEqptcolonneforageBouchonfond() {
        return OuiNonListe.getValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_bouchonfond", eqptcolonneforageBouchonfond, false);
    }

    /**
     * Sets the value of the eqptcolonneforageBouchonfond property.
     * 
     * @param value
     *     allowed object is
     *     {@link OuiNonListe }
     *     
     */
    public void setEqptcolonneforageBouchonfond(String value) {
        this.eqptcolonneforageBouchonfond = OuiNonListe.fromValue(PatrimoineDAO.PAT_EQPT_COLONNEFORAGE, "eqptcolonneforage_bouchonfond", value);
    }

	public void setIdChg(Integer idChg) {
		this.idChg = idChg;
	}

    private void manageNullException(String champ) {
    	throw new IllegalArgumentException("Table " + PatrimoineDAO.PAT_EQPT_COLONNEFORAGE + " - Champs " + champ + " - Valeur 'Null' ou non permise par le XSD.");
	}

}
