//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 03:19:46 PM CET 
//


package bpm.gateway.core.tsbn.affaires;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="PAT" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_PAT" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="NOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="PRENOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="NUM_PAT" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SEXE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="DAT_NAISS" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *                 &lt;attribute name="ORG_REF" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MED_TRAIT" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MED_TRT_KEY" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="AGE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="UAG">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                       &lt;enumeration value="J"/>
 *                       &lt;enumeration value="S"/>
 *                       &lt;enumeration value="M"/>
 *                       &lt;enumeration value="A"/>
 *                       &lt;enumeration value=""/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="CIM10" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_CIM10" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="CIM10_COD" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="CIM10_LIB" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SEC_COD" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SEC_LIB" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="CHP_COD" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="CHP_LIB" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="OBS" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_OBS" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="ID_OBS_PERE" type="{http://www.w3.org/2001/XMLSchema}IDREF" />
 *                 &lt;attribute name="ID_CIM10" type="{http://www.w3.org/2001/XMLSchema}IDREF" />
 *                 &lt;attribute name="OBS_LIB" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="VEC" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_VEC" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="LIB_VEC" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="TYP_MOB" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="TYP_VEC" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SEC_INTERV" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="ETAB" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_ETAB" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="UM_COD" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="UM_NOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="UM_TYP" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="UM_SPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SRV_COD" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SRV_NOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SRV_SPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SIT_COD" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="SIT_LIB" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="ENT_TYP" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="ENT_COD" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="ENT_LIB" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="COD_INSEE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="STRUCT" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_STRUCT" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="REG" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="C15" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="COM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="COM_LAB" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="FCT_EXT" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="CTX_EXT" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="TYP_STRUCT" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="EQU" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="ID_EQU" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="EQU_LAB" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="AGT" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="AGT_STRUCT" maxOccurs="unbounded" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="ID_STRUCT" use="required" type="{http://www.w3.org/2001/XMLSchema}IDREF" />
 *                           &lt;attribute name="FCT" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *                 &lt;attribute name="ID_AGT" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="NOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="NOM_NAISSANCE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="PRENOM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="TYP_PRO" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="CAT_PRO" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="MOY_EXT" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="MOY_EXT" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 &lt;attribute name="MOY_LAB" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MOY_NAT" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MOY_COM" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MOY_MED" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="MOY_TSP" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "pat",
    "cim10",
    "obs",
    "vec",
    "etab",
    "struct",
    "equ",
    "agt",
    "moyext"
})
public class REF {

    @XmlElement(name = "PAT")
    protected List<PAT> pat;
    @XmlElement(name = "CIM10")
    protected List<CIM10> cim10;
    @XmlElement(name = "OBS")
    protected List<OBS> obs;
    @XmlElement(name = "VEC")
    protected List<VEC> vec;
    @XmlElement(name = "ETAB")
    protected List<ETAB> etab;
    @XmlElement(name = "STRUCT")
    protected List<STRUCT> struct;
    @XmlElement(name = "EQU")
    protected List<EQU> equ;
    @XmlElement(name = "AGT")
    protected List<AGT> agt;
    @XmlElement(name = "MOY_EXT")
    protected List<MOYEXT> moyext;

    /**
     * Gets the value of the pat property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pat property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPAT().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PAT }
     * 
     * 
     */
    public List<PAT> getPat() {
        if (pat == null) {
            pat = new ArrayList<PAT>();
        }
        return this.pat;
    }
    
    public void setPat(List<PAT> pat) {
    	this.pat = pat;
    }

    /**
     * Gets the value of the cim10 property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cim10 property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCIM10().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CIM10 }
     * 
     * 
     */
    public List<CIM10> getCim10() {
        if (cim10 == null) {
            cim10 = new ArrayList<CIM10>();
        }
        return this.cim10;
    }
    
    public void setCim10(List<CIM10> cim10) {
    	this.cim10 = cim10;
    }

    /**
     * Gets the value of the obs property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the obs property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOBS().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OBS }
     * 
     * 
     */
    public List<OBS> getObs() {
        if (obs == null) {
            obs = new ArrayList<OBS>();
        }
        return this.obs;
    }
    
    public void setObs(List<OBS> obs) {
    	this.obs = obs;
    }

    /**
     * Gets the value of the vec property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the vec property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVEC().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VEC }
     * 
     * 
     */
    public List<VEC> getVec() {
        if (vec == null) {
            vec = new ArrayList<VEC>();
        }
        return this.vec;
    }
    
    public void setVec(List<VEC> vec) {
    	this.vec = vec;
    }

    /**
     * Gets the value of the etab property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the etab property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getETAB().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ETAB }
     * 
     * 
     */
    public List<ETAB> getEtab() {
        if (etab == null) {
            etab = new ArrayList<ETAB>();
        }
        return this.etab;
    }
    
    public void setEtab(List<ETAB> etab) {
    	this.etab = etab;
    }

    /**
     * Gets the value of the struct property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the struct property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSTRUCT().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link STRUCT }
     * 
     * 
     */
    public List<STRUCT> getStruct() {
        if (struct == null) {
            struct = new ArrayList<STRUCT>();
        }
        return this.struct;
    }
    
    public void setStruct(List<STRUCT> struct) {
    	this.struct = struct;
    }

    /**
     * Gets the value of the equ property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the equ property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEQU().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EQU }
     * 
     * 
     */
    public List<EQU> getEqu() {
        if (equ == null) {
            equ = new ArrayList<EQU>();
        }
        return this.equ;
    }
    
    public void setEqu(List<EQU> equ) {
    	this.equ = equ;
    }

    /**
     * Gets the value of the agt property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the agt property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAGT().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AGT }
     * 
     * 
     */
    public List<AGT> getAgt() {
        if (agt == null) {
            agt = new ArrayList<AGT>();
        }
        return this.agt;
    }
    
    public void setAgt(List<AGT> agt) {
    	this.agt = agt;
    }

    /**
     * Gets the value of the moyext property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the moyext property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMOYEXT().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MOYEXT }
     * 
     * 
     */
    public List<MOYEXT> getMoyext() {
        if (moyext == null) {
            moyext = new ArrayList<MOYEXT>();
        }
        return this.moyext;
    }
    
    public void setMoyext(List<MOYEXT> moyext) {
    	this.moyext = moyext;
    }

	public void setIdSamu(String idSamu) {
		if (pat != null) {
			for (PAT pa : pat) {
				pa.setIdSamu(idSamu);
			}
		}
		
		if (cim10 != null) {
			for (CIM10 cim : cim10) {
				cim.setIdSamu(idSamu);
			}
		}
		
		if (obs != null) {
			for (OBS ob : obs) {
				ob.setIdSamu(idSamu);
			}
		}
		
		if (vec != null) {
			for (VEC ve : vec) {
				ve.setIdSamu(idSamu);
			}
		}
		
		if (etab != null) {
			for (ETAB eta : etab) {
				eta.setIdSamu(idSamu);
			}
		}
		
		if (struct != null) {
			for (STRUCT str : struct) {
				str.setIdSamu(idSamu);
			}
		}
		
		if (equ != null) {
			for (EQU eq : equ) {
				eq.setIdSamu(idSamu);
			}
		}
		
		if (agt != null) {
			for (AGT ag : agt) {
				ag.setIdSamu(idSamu);
			}
		}
		
		if (moyext != null) {
			for (MOYEXT mo : moyext) {
				mo.setIdSamu(idSamu);
			}
		}
	}

}
